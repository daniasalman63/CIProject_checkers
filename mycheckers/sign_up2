{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "pygame 2.1.2 (SDL 2.0.18, Python 3.10.0)\n",
      "Hello from the pygame community. https://www.pygame.org/contribute.html\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "from copy import deepcopy\n",
    "import pygame\n",
    "from game import Game\n",
    "import time\n",
    "from GUI import *\n",
    "import random"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "import math\n",
    "\n",
    "# Weight and bias dimensions for the NN\n",
    "first_layer_hidden_weights = (32,90) #32,90\n",
    "first_layer_hidden_bias = (1,90) #90\n",
    "second_layer_hidden_weights = (90,40) #90,40 \n",
    "second_layer_hidden_bias = (1,40) #40\n",
    "third_layer_hidden_weights = (40,10) #40,10\n",
    "third_layer_hidden_bias = (1,10) #10\n",
    "\n",
    "class Evol_Player(object):\n",
    "    def __init__(self, number, first_layer_weights, first_layer_bias, second_layer_weights, second_layer_bias, third_layer_weights, third_layer_bias):\n",
    "        self.number = number\n",
    "        self.score = 0\n",
    "        self.first_layer_weights = first_layer_weights\n",
    "        self.first_layer_bias = first_layer_bias\n",
    "        self.second_layer_weights = second_layer_weights\n",
    "        self.second_layer_bias = second_layer_bias\n",
    "        self.third_layer_weights = third_layer_weights\n",
    "        self.third_layer_bias = third_layer_bias\n",
    "\n",
    "        self.win = 0\n",
    "        self.loss = 0\n",
    "        self.draw = 0\n",
    "\n",
    "    def getWeights(self):\n",
    "        return self.first_layer_weights, self.first_layer_bias,  self.second_layer_weights, self.second_layer_bias,  self.third_layer_weights,  self.third_layer_bias\n",
    "\n",
    "# Used in the NN\n",
    "def sigmoid(x):\n",
    "    \"\"\"\n",
    "    Calculate sigmoid\n",
    "    \"\"\"\n",
    "    return 1 / (1 + np.exp(-x))\n",
    "\n",
    "def tanh(x):\n",
    "    return np.tanh(x)\n",
    "\n",
    "def evolutionary_player(count):\n",
    "    \n",
    "    first_layer_weights = np.random.normal(0, scale=1.0, size=first_layer_hidden_weights)\n",
    "    first_layer_bias = np.random.normal(0, scale=1.0, size=first_layer_hidden_bias)\n",
    "    second_layer_weights = np.random.normal(0, scale=1.0, size=second_layer_hidden_weights)\n",
    "    second_layer_bias = np.random.normal(0, scale=1.0, size=second_layer_hidden_bias)\n",
    "    third_layer_weights = np.random.normal(0, scale=1.0, size=third_layer_hidden_weights)\n",
    "    third_layer_bias = np.random.normal(0, scale=1.0, size=third_layer_hidden_bias)\n",
    "\n",
    "    return Evol_Player(count, first_layer_weights, first_layer_bias, second_layer_weights, second_layer_bias, third_layer_weights, third_layer_bias)\n",
    "\n",
    "# Use this Neural Network as the heuristic function for the minimax tree\n",
    "def predict_nn(board, player):\n",
    "\n",
    "    first_hidden_output = tanh(np.dot(board, player.first_layer_weights) + player.first_layer_bias)\n",
    "    second_hidden_output = tanh(np.dot(first_hidden_output, player.second_layer_weights) + player.second_layer_bias)\n",
    "    third_layer_output = tanh(np.dot(second_hidden_output, player.third_layer_weights) + player.third_layer_bias)\n",
    "\n",
    "    output = np.sum(third_layer_output)\n",
    "    \n",
    "    return output\n",
    "\n",
    "def createNeuralNetwork(offspring1AfterMutation, offspring2AfterMutation, count):\n",
    "\n",
    "    first_layer_bias1, second_layer_bias1, third_layer_bias1, first_layer_weights1, second_layer_weights1, third_layer_weights1 = offspring1AfterMutation\n",
    "    first_layer_bias2, second_layer_bias2, third_layer_bias2, first_layer_weights2, second_layer_weights2, third_layer_weights2 = offspring2AfterMutation\n",
    "\n",
    "    player1 = Evol_Player(count + 1, first_layer_weights1, first_layer_bias1, second_layer_weights1, second_layer_bias1, third_layer_weights1, third_layer_bias1)\n",
    "    player2 = Evol_Player(count + 2, first_layer_weights2, first_layer_bias2, second_layer_weights2, second_layer_bias2, third_layer_weights2, third_layer_bias2)\n",
    "\n",
    "    return player1, player2\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "def simulate_move(piece, move, board, game, skip):\n",
    "    \"\"\"\n",
    "    Simulates a move on the board by moving a piece, capturing any opponent's piece, and updating the game state.\n",
    "    and return updated game board after the move.\n",
    "    \"\"\"\n",
    "    board.move(piece, move[0], move[1])  # Move the piece on the board.\n",
    "    if skip:\n",
    "        board.remove(skip)  # Remove opponent's piece that was captured during the move.\n",
    "\n",
    "    return board"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_all_moves(board, color, game):\n",
    "    \"\"\"\n",
    "    Gets all valid moves for a given color on the current game board.\n",
    "    and returns a List of all possible game boards after making each move.\n",
    "    \"\"\"\n",
    "    moves = []\n",
    "\n",
    "    for piece in board.get_all_pieces(color):\n",
    "        valid_moves = board.get_valid_moves(piece)  # Get all valid moves for the piece.\n",
    "        for move, skip in valid_moves.items():\n",
    "            temp_board = deepcopy(board)\n",
    "            temp_piece = temp_board.get_piece(piece.row, piece.col)\n",
    "            new_board = simulate_move(temp_piece, move, temp_board, game, skip)  # Simulate the move on the board.\n",
    "            moves.append(new_board)\n",
    "    \n",
    "    return moves"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "def alpha_beta(position, depth, alpha, beta, max_player, game, human_play):\n",
    "    \"\"\"\n",
    "    Implementation of the Alpha-Beta Pruning algorithm over minimax\n",
    "    \"\"\"\n",
    "    if depth == 0:\n",
    "        # If depth is 0, evaluate the current position and return the score along with the position.\n",
    "        return position.evaluate(game.board.player), position\n",
    "\n",
    "    if max_player:\n",
    "        if human_play == True: \n",
    "            if game.turn == \"red\":\n",
    "                color_m = \"red\"  # Determine the color of the opponent's pieces\n",
    "            else:\n",
    "                color_m = \"white\"  # Determine the color of the own pieces\n",
    "        else:\n",
    "            if game.turn == \"red\":\n",
    "                color_m = \"white\" \n",
    "            else:\n",
    "                color_m = \"red\"  \n",
    "        best_move = None\n",
    "        for move in get_all_moves(position, color_m, game):\n",
    "            # Recursively call alpha_beta with the next move and update alpha value.\n",
    "            evaluation = alpha_beta(move, depth-1, alpha, beta, False, game, human_play)[0]\n",
    "            if evaluation > alpha:\n",
    "                alpha = evaluation\n",
    "                best_move = move\n",
    "            if alpha >= beta:\n",
    "                # Perform pruning if alpha is greater than or equal to beta.\n",
    "                break\n",
    "\n",
    "        return alpha, best_move\n",
    "    else:\n",
    "        best_move = None\n",
    "        for move in get_all_moves(position, game.turn, game):\n",
    "            # Recursively call alpha_beta with the next move and update beta value.\n",
    "            evaluation = alpha_beta(move, depth-1, alpha, beta, True, game, human_play)[0]\n",
    "            if evaluation < beta:\n",
    "                beta = evaluation\n",
    "                best_move = move\n",
    "            if beta <= alpha:\n",
    "                # Perform pruning if beta is less than or equal to alpha.\n",
    "                break\n",
    "\n",
    "        return beta, best_move"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "#INITIALLY CHECKING THE ALGORITHM USING THIS\n",
    "def minimax(position, depth, max_player, game, human_play):\n",
    "    \"\"\"\n",
    "    Implementation of the minimax algorithm for game AI.\n",
    "    \"\"\"\n",
    "    if depth == 0:\n",
    "        return position.evaluate(game.board.player), position  # Return evaluation of current position and the position itself\n",
    "    \n",
    "    if max_player:\n",
    "        maxEval = float('-inf')  #\n",
    "        best_move = None \n",
    "        if human_play == True: \n",
    "            if game.turn == \"red\":\n",
    "                color_m = \"red\"  # Determine the color of the opponent's pieces\n",
    "            else:\n",
    "                color_m = \"white\"  # Determine the color of the own pieces\n",
    "        else:\n",
    "            if game.turn == \"red\":\n",
    "                color_m = \"white\" \n",
    "            else:\n",
    "                color_m = \"red\"  \n",
    "        for move in get_all_moves(position, color_m, game): \n",
    "            evaluation = minimax(move, depth-1, False, game, human_play)[0] \n",
    "            maxEval = max(maxEval, evaluation)  # Update the maximum evaluation score\n",
    "            if maxEval == evaluation:\n",
    "                best_move = move  # Update the best move if a better move is found\n",
    "        \n",
    "        return maxEval, best_move  \n",
    "    else:\n",
    "        minEval = float('inf')  \n",
    "        best_move = None  \n",
    "        for move in get_all_moves(position, game.turn, game):  \n",
    "            evaluation = minimax(move, depth-1, True, game, human_play)[0]  \n",
    "            minEval = min(minEval, evaluation)  # Update the minimum evaluation score\n",
    "            if minEval == evaluation:\n",
    "                best_move = move  \n",
    "        \n",
    "        return minEval, best_move  # Return the minimum evaluation score and the best move found"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "#HUMAN VS AI\n",
    "def human_AI(play1):\n",
    "    player1 = play1\n",
    "    player2 = None\n",
    "    obj = Game(player1, player2)\n",
    "    start_time = time.time()\n",
    "    counter = 0\n",
    "    \n",
    "    while counter < 40:\n",
    "        \n",
    "        old_pieces = obj.board.red_left + obj.board.white_left\n",
    "        if obj.turn == \"red\":\n",
    "            value, new_board = alpha_beta(obj.get_board(), 2, float(\"-inf\"), float(\"inf\"), obj.turn, obj, True)\n",
    "            #value, new_board = minimax(obj.get_board(), 2, obj.turn, obj, True)\n",
    "            obj.ai_move(new_board)\n",
    "            print(new_board.board)\n",
    "            gui = Checkerboard(obj.board.board)\n",
    "\n",
    "        else:\n",
    "            gui = Checkerboard(obj.board.board)\n",
    "            row, col = gui.run()\n",
    "            obj.select(row, col)\n",
    "            \n",
    "            \n",
    "        print(obj.turn)\n",
    "        new_pieces = obj.board.red_left + obj.board.white_left\n",
    "        difference = old_pieces - new_pieces\n",
    "        if difference > 0:\n",
    "            counter = 0\n",
    "        else:\n",
    "            counter += 1\n",
    "        print(\"DIFF: \", old_pieces - new_pieces)\n",
    "        winner = obj.winner()\n",
    "\n",
    "        if winner == \"red\":\n",
    "            best_player = obj.player1\n",
    "        else:\n",
    "            best_player = obj.player2\n",
    "\n",
    "    end_time = time.time()\n",
    "    print(\"Duration: \", end_time - start_time)\n",
    "\n",
    "    return new_board, winner, best_player"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "def AI_vs_AI(player_1, player_2):\n",
    "    player1 = player_1\n",
    "    player2 = player_2\n",
    "    obj = Game(player1, player2)\n",
    "    start_time = time.time()\n",
    "    counter = 0\n",
    "    while counter < 40:\n",
    "        old_pieces = obj.board.red_left + obj.board.white_left\n",
    "        # old_pieces = len(obj.board.get_all_pieces(obj.turn)) + len(obj.board.get_all_pieces(opponent))\n",
    "        value, new_board = alpha_beta(obj.get_board(), 2, float(\"-inf\"), float(\"inf\"), obj.turn, obj, False)\n",
    "        #value, new_board = minimax(obj.get_board(), 2, obj.turn, obj, False)\n",
    "        #print(obj.turn)\n",
    "        # print(new_board.board)\n",
    "        obj.ai_move(new_board)\n",
    "        new_pieces = obj.board.red_left + obj.board.white_left\n",
    "        difference = old_pieces - new_pieces\n",
    "        if difference > 0:\n",
    "            counter = 0\n",
    "        else:\n",
    "            counter += 1\n",
    "        # print(counter)\n",
    "        # print(\"DIFF: \", old_pieces - new_pieces)\n",
    "        winner = obj.winner()\n",
    "\n",
    "        if winner == \"white\":\n",
    "            best_player = obj.player1\n",
    "        else:\n",
    "            best_player = obj.player2\n",
    "\n",
    "    end_time = time.time()\n",
    "    #print(\"Duration: \", end_time - start_time)\n",
    "\n",
    "    return new_board, winner, best_player"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "def fitnessForBinaryTournament(parent_1, parent_2, chromosomes):\n",
    "\n",
    "    \n",
    "\n",
    "    newchromosomes = chromosomes.copy()\n",
    "    #chromosomes.remove(parent_1)\n",
    "    #chromosomes.remove(parent_2)\n",
    "\n",
    "    newchromosomes.remove(parent_1)\n",
    "    newchromosomes.remove(parent_2)\n",
    "    \n",
    "    parent1Score = 0\n",
    "    parent2Score = 0\n",
    "\n",
    "    randomPlayers = np.random.choice(newchromosomes, size=3, replace=False)\n",
    "   \n",
    "    for player2 in randomPlayers:\n",
    "        print(\"match start\")\n",
    "        obj = Game(parent_1, player2)\n",
    "        new_board, winner, best_player = AI_vs_AI(parent_1, player2)\n",
    "\n",
    "        # if winner==\"draw\":\n",
    "        #     parent1Score += 1\n",
    "\n",
    "        #     player2.draw += 1\n",
    "        #     parent_1.draw += 1\n",
    "\n",
    "        #     parent_1.score += 1\n",
    "        #     player2.score += 1\n",
    "\n",
    "        # else:\n",
    "        if winner == 'white':\n",
    "            # print(\"bnum: \",best_player.number)\n",
    "            # parent1Score -= 1\n",
    "            # parent_1.loss += 1\n",
    "            # player2.win += 1\n",
    "            # parent_1.score -= 1\n",
    "            # player2.score += 2\n",
    "            parent_1.win += 1\n",
    "            player2.loss += 1\n",
    "\n",
    "        else:\n",
    "            # parent1Score += 2\n",
    "            # parent_1.win += 1\n",
    "            # player2.loss += 1\n",
    "            # parent_1.score += 2\n",
    "            # player2.score -= 1\n",
    "            player2.win += 1\n",
    "            parent_1.loss += 1\n",
    "        \n",
    "        player2.score = player2.win - player2.loss\n",
    "        parent_1.score = parent_1.win - parent_1.loss\n",
    "        parent1Score = parent_1.score\n",
    "\n",
    "    for player2 in randomPlayers:\n",
    "        obj = Game(parent_2, player2)\n",
    "        new_board, winner, best_player = AI_vs_AI(parent_2, player2)\n",
    "\n",
    "        # if winner==\"draw\":\n",
    "        #     parent2Score += 1\n",
    "\n",
    "        #     parent_2.draw += 1\n",
    "        #     player2.draw += 1\n",
    "\n",
    "        #     parent_2.score += 1\n",
    "        #     player2.score += 1\n",
    "\n",
    "        # else:\n",
    "        if winner == 'white':\n",
    "            # print(\"winner\", winner, best_player)\n",
    "            \n",
    "            # print(parent_2)\n",
    "            # parent2Score -= 1\n",
    "            # parent_2.loss += 1\n",
    "            # player2.win += 1\n",
    "            # parent_2.score -= 1\n",
    "            # player2.score += 2\n",
    "            parent_2.win += 1\n",
    "            player2.loss += 1\n",
    "        else:\n",
    "            # parent2Score += 2\n",
    "            # player2.loss += 1\n",
    "            # parent_2.win += 1\n",
    "            # parent_2.score += 2\n",
    "            # player2.score -= 1\n",
    "            player2.win += 1\n",
    "            parent_2.loss += 1\n",
    "        \n",
    "        player2.score = player2.win - player2.loss\n",
    "        parent_2.score = parent_2.win - parent_2.loss\n",
    "        parent2Score = parent_2.score\n",
    "                \n",
    "\n",
    "\n",
    "    if parent2Score >= parent1Score:\n",
    "        return parent_2\n",
    "    else:\n",
    "        return parent_1\n",
    "\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "def parentSelection(chromosomes, type):\n",
    "\n",
    "    if type == \"random\":\n",
    "        index = np.random.choice(chromosomes, 2, replace=False) \n",
    "        \n",
    "        parent1 = index[0]\n",
    "        parent2 = index[1]\n",
    "\n",
    "        if parent1 == parent2:\n",
    "            print(\"Parents are the same??\")\n",
    "\n",
    " \n",
    "    elif type == \"binary_tournament\":\n",
    "\n",
    "        nchromosomes = chromosomes.copy()\n",
    "\n",
    "        index = np.random.choice(nchromosomes, 2, replace=False) \n",
    "\n",
    "        parent_1 = index[0]\n",
    "        parent_2 = index[1]\n",
    "       \n",
    "        # Choose the fittest chromosome as the first parent\n",
    "        print(\"Tournament for Parent 1\")\n",
    "        parent1 = fitnessForBinaryTournament(parent_1, parent_2, nchromosomes)\n",
    "        \n",
    "        nchromosomes.remove(parent1)\n",
    "        \n",
    "        index = np.random.choice(nchromosomes, 2, replace=False) \n",
    "        # repeats for second parent\n",
    "        parent_1 = index[0]\n",
    "        parent_2 = index[1]\n",
    "        \n",
    "        parent2 = fitnessForBinaryTournament(parent_1, parent_2, nchromosomes)\n",
    "\n",
    "\n",
    "    return parent1, parent2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "def crossover(parent1, parent2):\n",
    "\n",
    "    p1first_layer_weights, p1first_layer_bias, p1second_layer_weights, p1second_layer_bias, p1third_layer_weights,  p1third_layer_bias = parent1.getWeights()\n",
    "    p2first_layer_weights, p2first_layer_bias, p2second_layer_weights, p2second_layer_bias, p2third_layer_weights,  p2third_layer_bias = parent2.getWeights()\n",
    "    \n",
    "    crossoverPoint1 = random.randint(0, len(p1first_layer_weights) - 1)\n",
    "\n",
    "    o1first_layer_weights = []\n",
    "    o2first_layer_weights = []\n",
    "\n",
    "    for i in range(len(p1first_layer_weights)):\n",
    "        \n",
    "        o1 = np.concatenate((p1first_layer_weights[i][:crossoverPoint1],(p2first_layer_weights[i][crossoverPoint1:])))\n",
    "        o2 = np.concatenate((p2first_layer_weights[i][:crossoverPoint1], p1first_layer_weights[i][crossoverPoint1:]))\n",
    "\n",
    "        o1first_layer_weights.append(o1)\n",
    "        o2first_layer_weights.append(o2)\n",
    "\n",
    "    crossoverPoint2 = random.randint(0, len(p1first_layer_bias) - 1)\n",
    "   \n",
    "    o1first_layer_bias = []\n",
    "    o2first_layer_bias = []\n",
    "\n",
    "    for i in range(len(p1first_layer_bias)):\n",
    "\n",
    "        o1 = np.concatenate((p1first_layer_bias[i][:crossoverPoint2], p2first_layer_bias[i][crossoverPoint2:]))\n",
    "        o2 = np.concatenate((p2first_layer_bias[i][:crossoverPoint2], p1first_layer_bias[i][crossoverPoint2:]))\n",
    "\n",
    "        o1first_layer_bias.append(o1)\n",
    "        o2first_layer_bias.append(o2)\n",
    "\n",
    "    crossoverPoint3 = random.randint(0, len(p1second_layer_weights) - 1)\n",
    "   \n",
    "    o1second_layer_weights = []\n",
    "    o2second_layer_weights = []\n",
    "\n",
    "    for i in range(len(p1second_layer_weights)):\n",
    "\n",
    "        o1 = np.concatenate((p1second_layer_weights[i][:crossoverPoint3], p2second_layer_weights[i][crossoverPoint3:]))\n",
    "        o2 = np.concatenate((p2second_layer_weights[i][:crossoverPoint3], p1second_layer_weights[i][crossoverPoint3:]))\n",
    "\n",
    "        o1second_layer_weights.append(o1)\n",
    "        o2second_layer_weights.append(o2)\n",
    "\n",
    "    crossoverPoint4 = random.randint(0, len(p1second_layer_bias) - 1)\n",
    "\n",
    "    o1second_layer_bias = []\n",
    "    o2second_layer_bias = []\n",
    "\n",
    "    for i in range(len(p1second_layer_bias)):\n",
    "\n",
    "        o1 = np.concatenate((p1second_layer_bias[i][:crossoverPoint4], p2second_layer_bias[i][crossoverPoint4:]))\n",
    "        o2 = np.concatenate((p2second_layer_bias[i][:crossoverPoint4], p1second_layer_bias[i][crossoverPoint4:]))\n",
    "\n",
    "        o1second_layer_bias.append(o1)\n",
    "        o2second_layer_bias.append(o2)\n",
    "\n",
    "    crossoverPoint5 = random.randint(0, len(p1third_layer_weights) - 1)\n",
    "\n",
    "    o1third_layer_weights = []\n",
    "    o2third_layer_weights = []\n",
    "\n",
    "    for i in range(len(p1third_layer_weights)):\n",
    "\n",
    "        o1 = np.concatenate((p1third_layer_weights[i][:crossoverPoint5], p2third_layer_weights[i][crossoverPoint5:]))\n",
    "        o2 = np.concatenate((p2third_layer_weights[i][:crossoverPoint5], p1third_layer_weights[i][crossoverPoint5:]))\n",
    "\n",
    "        o1third_layer_weights.append(o1)\n",
    "        o2third_layer_weights.append(o2)\n",
    "\n",
    "    crossoverPoint6 = random.randint(0, len(p1third_layer_bias) - 1)\n",
    "\n",
    "    o1third_layer_bias = []\n",
    "    o2third_layer_bias = []\n",
    "\n",
    "    for i in range(len(p1third_layer_bias)):\n",
    "\n",
    "        o1 = np.concatenate((p1third_layer_bias[0][:crossoverPoint6], p2third_layer_bias[0][crossoverPoint6:]))\n",
    "        o2 = np.concatenate((p2third_layer_bias[0][:crossoverPoint6], p1third_layer_bias[0][crossoverPoint6:]))\n",
    "\n",
    "        o1third_layer_bias.append(o1)\n",
    "        o2third_layer_bias.append(o2)\n",
    "\n",
    "    offspring1 = []\n",
    "    offspring1.append(o1first_layer_bias)\n",
    "    offspring1.append(o1second_layer_bias)\n",
    "    offspring1.append(o1third_layer_bias)\n",
    "\n",
    "    offspring1.append(o1first_layer_weights)\n",
    "    offspring1.append(o1second_layer_weights)\n",
    "    offspring1.append(o1third_layer_weights)\n",
    "\n",
    "    offspring2 = []\n",
    "    offspring2.append(o2first_layer_bias)\n",
    "    offspring2.append(o2second_layer_bias)\n",
    "    offspring2.append(o2third_layer_bias)\n",
    "\n",
    "    offspring2.append(o2first_layer_weights)\n",
    "    offspring2.append(o2second_layer_weights)\n",
    "    offspring2.append(o2third_layer_weights)\n",
    "\n",
    "    return offspring1, offspring2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "def uniform_crossover(parent1, parent2):\n",
    "\n",
    "    p1_weights_biases = parent1.getWeights()\n",
    "    p2_weights_biases = parent2.getWeights()\n",
    "\n",
    "    o1_weights_biases = []\n",
    "    o2_weights_biases = []\n",
    "\n",
    "    for p1_layer, p2_layer in zip(p1_weights_biases, p2_weights_biases):\n",
    "        mask = np.random.randint(0, 2, p1_layer.shape).astype(bool)\n",
    "        o1_layer = np.where(mask, p1_layer, p2_layer)\n",
    "        o2_layer = np.where(mask, p2_layer, p1_layer)\n",
    "\n",
    "        o1_weights_biases.append(o1_layer)\n",
    "        o2_weights_biases.append(o2_layer)\n",
    "\n",
    "    #offspring1 = o1_weights_biases\n",
    "    #offspring2 = o2_weights_biases\n",
    "\n",
    "    p1first_layer_weights, p1first_layer_bias, p1second_layer_weights, p1second_layer_bias, p1third_layer_weights,  p1third_layer_bias = o1_weights_biases\n",
    "    p2first_layer_weights, p2first_layer_bias, p2second_layer_weights, p2second_layer_bias, p2third_layer_weights,  p2third_layer_bias = o2_weights_biases\n",
    "    \n",
    "    offspring1 = []\n",
    "    offspring1.append(p1first_layer_bias)\n",
    "    offspring1.append(p1second_layer_bias)\n",
    "    offspring1.append(p1third_layer_bias)\n",
    "\n",
    "    offspring1.append(p1first_layer_weights)\n",
    "    offspring1.append(p1second_layer_weights)\n",
    "    offspring1.append(p1third_layer_weights)\n",
    "\n",
    "    offspring2 = []\n",
    "    offspring2.append(p2first_layer_bias)\n",
    "    offspring2.append(p2second_layer_bias)\n",
    "    offspring2.append(p2third_layer_bias)\n",
    "\n",
    "    offspring2.append(p2first_layer_weights)\n",
    "    offspring2.append(p2second_layer_weights)\n",
    "    offspring2.append(p2third_layer_weights)\n",
    "\n",
    "    return offspring1, offspring2\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "def mutationNew(offspring1, offspring2, mutationRate):\n",
    "\n",
    "    o1first_layer_bias, o1second_layer_bias, o1third_layer_bias, o1first_layer_weights, o1second_layer_weights, o1third_layer_weights = offspring1\n",
    "    o2first_layer_bias, o2second_layer_bias, o2third_layer_bias, o2first_layer_weights, o2second_layer_weights, o2third_layer_weights = offspring2\n",
    "    \n",
    "    if random.uniform(0, 1) < mutationRate:\n",
    "        rand_nums = np.random.randint(0, len(o1first_layer_bias[0]) - 1, size=10)\n",
    "\n",
    "        for i in range(10):\n",
    "             o1first_layer_bias[0][rand_nums[i]] = np.random.normal(0, 1)\n",
    "\n",
    "        #o1first_layer_bias[0][rand_nums[0]] = np.random.normal(0, 1)\n",
    "        #o1first_layer_bias[0][rand_nums[1]] = np.random.normal(0, 1)\n",
    "\n",
    "        rand_nums = np.random.randint(0, len(o2first_layer_bias[0]) - 1, size=10)\n",
    "\n",
    "\n",
    "        for i in range(10):\n",
    "            o2first_layer_bias[0][rand_nums[i]] = np.random.normal(0, 1)\n",
    "            \n",
    "        #o2first_layer_bias[0][rand_nums[0]] = np.random.normal(0, 1)\n",
    "        #o2first_layer_bias[0][rand_nums[1]] = np.random.normal(0, 1)\n",
    "\n",
    "    if random.uniform(0, 1) < mutationRate:\n",
    "        rand_nums = np.random.randint(0, len(o1second_layer_bias[0]) - 1, size=10)\n",
    "\n",
    "        for i in range(10):\n",
    "             o1second_layer_bias[0][rand_nums[i]] = np.random.normal(0, 1)\n",
    "\n",
    "        #o1first_layer_bias[0][rand_nums[0]] = np.random.normal(0, 1)\n",
    "        #o1first_layer_bias[0][rand_nums[1]] = np.random.normal(0, 1)\n",
    "\n",
    "        rand_nums = np.random.randint(0, len(o2second_layer_bias[0]) - 1, size=10)\n",
    "\n",
    "\n",
    "        for i in range(10):\n",
    "            o2second_layer_bias[0][rand_nums[i]] = np.random.normal(0, 1)\n",
    "            \n",
    "        #o2first_layer_bias[0][rand_nums[0]] = np.random.normal(0, 1)\n",
    "        #o2first_layer_bias[0][rand_nums[1]] = np.random.normal(0, 1)\n",
    "\n",
    "    if random.uniform(0, 1) < mutationRate:\n",
    "        rand_nums = np.random.randint(0, len(o1third_layer_bias[0]) - 1, size=10)\n",
    "\n",
    "        for i in range(10):\n",
    "             o1third_layer_bias[0][rand_nums[i]] = np.random.normal(0, 1)\n",
    "\n",
    "        #o1first_layer_bias[0][rand_nums[0]] = np.random.normal(0, 1)\n",
    "        #o1first_layer_bias[0][rand_nums[1]] = np.random.normal(0, 1)\n",
    "\n",
    "        rand_nums = np.random.randint(0, len(o2third_layer_bias[0]) - 1, size=10)\n",
    "\n",
    "\n",
    "        for i in range(10):\n",
    "            o2third_layer_bias[0][rand_nums[i]] = np.random.normal(0, 1)\n",
    "            \n",
    "        #o2first_layer_bias[0][rand_nums[0]] = np.random.normal(0, 1)\n",
    "        #o2first_layer_bias[0][rand_nums[1]] = np.random.normal(0, 1)\n",
    "\n",
    "    for i in range(len(o1first_layer_weights) - 1):\n",
    "        if random.uniform(0, 1) < mutationRate:\n",
    "            rand_nums = np.random.randint(0, len(o1first_layer_weights[0]) - 1, size=10)\n",
    "\n",
    "            for j in range(10):\n",
    "                o1first_layer_weights[i][rand_nums[j]] = np.random.normal(0, 1)\n",
    "\n",
    "            #o1first_layer_bias[0][rand_nums[0]] = np.random.normal(0, 1)\n",
    "            #o1first_layer_bias[0][rand_nums[1]] = np.random.normal(0, 1)\n",
    "\n",
    "            rand_nums = np.random.randint(0, len(o2first_layer_weights[0]) - 1, size=10)\n",
    "\n",
    "\n",
    "            for j in range(10):\n",
    "                o2first_layer_weights[i][rand_nums[j]] = np.random.normal(0, 1)\n",
    "                \n",
    "            #o2first_layer_bias[0][rand_nums[0]] = np.random.normal(0, 1)\n",
    "            #o2first_layer_bias[0][rand_nums[1]] = np.random.normal(0, 1)\n",
    "\n",
    "\n",
    "    for i in range(len(o1second_layer_weights) - 1):\n",
    "        if random.uniform(0, 1) < mutationRate:\n",
    "            rand_nums = np.random.randint(0, len(o1second_layer_weights[0]) - 1, size=10)\n",
    "\n",
    "            for j in range(10):\n",
    "                o1second_layer_weights[i][rand_nums[j]] = np.random.normal(0, 1)\n",
    "\n",
    "            #o1first_layer_bias[0][rand_nums[0]] = np.random.normal(0, 1)\n",
    "            #o1first_layer_bias[0][rand_nums[1]] = np.random.normal(0, 1)\n",
    "\n",
    "            rand_nums = np.random.randint(0, len(o2second_layer_weights[0]) - 1, size=10)\n",
    "\n",
    "            for j in range(10):\n",
    "                o2second_layer_weights[i][rand_nums[j]] = np.random.normal(0, 1)\n",
    "                \n",
    "            #o2first_layer_bias[0][rand_nums[0]] = np.random.normal(0, 1)\n",
    "            #o2first_layer_bias[0][rand_nums[1]] = np.random.normal(0, 1)\n",
    "\n",
    "    for i in range(len(o1third_layer_weights) - 1):\n",
    "         if random.uniform(0, 1) < mutationRate:\n",
    "            rand_nums = np.random.randint(0, len(o1third_layer_weights[0]) - 1, size=10)\n",
    "\n",
    "            for j in range(10):\n",
    "                o1third_layer_weights[i][rand_nums[j]] = np.random.normal(0, 1)\n",
    "\n",
    "            #o1first_layer_bias[0][rand_nums[0]] = np.random.normal(0, 1)\n",
    "            #o1first_layer_bias[0][rand_nums[1]] = np.random.normal(0, 1)\n",
    "\n",
    "            rand_nums = np.random.randint(0, len(o2third_layer_weights[0]) - 1, size=10)\n",
    "\n",
    "            for j in range(10):\n",
    "                o2third_layer_weights[i][rand_nums[j]] = np.random.normal(0, 1)\n",
    "                \n",
    "            #o2first_layer_bias[0][rand_nums[0]] = np.random.normal(0, 1)\n",
    "            #o2first_layer_bias[0][rand_nums[1]] = np.random.normal(0, 1)\n",
    "    mutatedOffspring1 = []\n",
    "    mutatedOffspring1.append(o1first_layer_bias)\n",
    "    mutatedOffspring1.append(o1second_layer_bias)\n",
    "    mutatedOffspring1.append(o1third_layer_bias)\n",
    "\n",
    "    mutatedOffspring1.append(o1first_layer_weights)\n",
    "    mutatedOffspring1.append(o1second_layer_weights)\n",
    "    mutatedOffspring1.append(o1third_layer_weights)\n",
    "\n",
    "    mutatedOffspring2 = []\n",
    "    mutatedOffspring2.append(o2first_layer_bias)\n",
    "    mutatedOffspring2.append(o2second_layer_bias)\n",
    "    mutatedOffspring2.append(o2third_layer_bias)\n",
    "\n",
    "    mutatedOffspring2.append(o2first_layer_weights)\n",
    "    mutatedOffspring2.append(o2second_layer_weights)\n",
    "    mutatedOffspring2.append(o2third_layer_weights)\n",
    "\n",
    "    return mutatedOffspring1, mutatedOffspring2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "def mutation(offspring1, offspring2, mutationRate):\n",
    "\n",
    "    o1first_layer_bias, o1second_layer_bias, o1third_layer_bias, o1first_layer_weights, o1second_layer_weights, o1third_layer_weights = offspring1\n",
    "    o2first_layer_bias, o2second_layer_bias, o2third_layer_bias, o2first_layer_weights, o2second_layer_weights, o2third_layer_weights = offspring2\n",
    "    \n",
    "    if random.uniform(0, 1) < mutationRate:\n",
    "        rand_nums = np.random.randint(0, len(o1first_layer_bias[0]) - 1, size=2)\n",
    "        o1first_layer_bias[0][rand_nums[0]] = np.random.normal(0, 1)\n",
    "        o1first_layer_bias[0][rand_nums[1]] = np.random.normal(0, 1)\n",
    "        \n",
    "\n",
    "        rand_nums = np.random.randint(0, len(o2first_layer_bias[0]) - 1, size=2)\n",
    "        o2first_layer_bias[0][rand_nums[0]] = np.random.normal(0, 1)\n",
    "        o2first_layer_bias[0][rand_nums[1]] = np.random.normal(0, 1)\n",
    "\n",
    "    if random.uniform(0, 1) < mutationRate:\n",
    "        rand_nums = np.random.randint(0, len(o1second_layer_bias[0]) - 1, size=2)\n",
    "        o1second_layer_bias[0][rand_nums[0]] = np.random.normal(0, 1)\n",
    "        o1second_layer_bias[0][rand_nums[1]] = np.random.normal(0, 1)\n",
    "        \n",
    "        rand_nums = np.random.randint(0, len(o2second_layer_bias[0]) - 1, size=2)\n",
    "        o2second_layer_bias[0][rand_nums[0]] = np.random.normal(0, 1)\n",
    "        o2second_layer_bias[0][rand_nums[1]] = np.random.normal(0, 1)\n",
    "\n",
    "    if random.uniform(0, 1) < mutationRate:\n",
    "        rand_nums = np.random.randint(0, len(o1third_layer_bias[0]) - 1, size=2)\n",
    "        o1third_layer_bias[0][rand_nums[0]] = np.random.normal(0, 1)\n",
    "        o1third_layer_bias[0][rand_nums[1]] = np.random.normal(0, 1)\n",
    "\n",
    "        rand_nums = np.random.randint(0, len(o2third_layer_bias[0]) - 1, size=2)\n",
    "        o2third_layer_bias[0][rand_nums[0]] = np.random.normal(0, 1)\n",
    "        o2third_layer_bias[0][rand_nums[1]] = np.random.normal(0, 1)\n",
    "\n",
    "    for i in range(len(o1first_layer_weights) - 1):\n",
    "        if random.uniform(0, 1) < mutationRate:\n",
    "            rand_nums = np.random.randint(0, len(o1first_layer_weights[0]) - 1, size=2)\n",
    "            o1first_layer_weights[i][rand_nums[0]] = np.random.normal(0, 1)\n",
    "            o1first_layer_weights[i][rand_nums[1]] = np.random.normal(0, 1)\n",
    "\n",
    "            rand_nums = np.random.randint(0, len(o2first_layer_weights[0]) - 1, size=2)\n",
    "            o2first_layer_weights[i][rand_nums[0]] = np.random.normal(0, 1)\n",
    "            o2first_layer_weights[i][rand_nums[1]] = np.random.normal(0, 1)\n",
    "\n",
    "\n",
    "    for i in range(len(o1second_layer_weights) - 1):\n",
    "        if random.uniform(0, 1) < mutationRate:\n",
    "            rand_nums = np.random.randint(0, len(o1second_layer_weights[0]) - 1, size=2)\n",
    "            o1second_layer_weights[i][rand_nums[0]] = np.random.normal(0, 1)\n",
    "            o1second_layer_weights[i][rand_nums[1]] = np.random.normal(0, 1)\n",
    "\n",
    "            rand_nums = np.random.randint(0, len(o2second_layer_weights[0]) - 1, size=2)\n",
    "            o2second_layer_weights[i][rand_nums[0]] = np.random.normal(0, 1)\n",
    "            o2second_layer_weights[i][rand_nums[1]] = np.random.normal(0, 1)\n",
    "\n",
    "\n",
    "    for i in range(len(o1third_layer_weights) - 1):\n",
    "        if random.uniform(0, 1) < mutationRate:\n",
    "            rand_nums = np.random.randint(0, len(o1third_layer_weights[0]) - 1, size=2)\n",
    "            o1third_layer_weights[i][rand_nums[0]] = np.random.normal(0, 1)\n",
    "            o1third_layer_weights[i][rand_nums[1]] = np.random.normal(0, 1)\n",
    "\n",
    "            rand_nums = np.random.randint(0, len(o2third_layer_weights[0]) - 1, size=2)\n",
    "            o2third_layer_weights[i][rand_nums[0]] = np.random.normal(0, 1)\n",
    "            o2third_layer_weights[i][rand_nums[1]] = np.random.normal(0, 1)\n",
    "\n",
    "    mutatedOffspring1 = []\n",
    "    mutatedOffspring1.append(o1first_layer_bias)\n",
    "    mutatedOffspring1.append(o1second_layer_bias)\n",
    "    mutatedOffspring1.append(o1third_layer_bias)\n",
    "\n",
    "    mutatedOffspring1.append(o1first_layer_weights)\n",
    "    mutatedOffspring1.append(o1second_layer_weights)\n",
    "    mutatedOffspring1.append(o1third_layer_weights)\n",
    "\n",
    "    mutatedOffspring2 = []\n",
    "    mutatedOffspring2.append(o2first_layer_bias)\n",
    "    mutatedOffspring2.append(o2second_layer_bias)\n",
    "    mutatedOffspring2.append(o2third_layer_bias)\n",
    "\n",
    "    mutatedOffspring2.append(o2first_layer_weights)\n",
    "    mutatedOffspring2.append(o2second_layer_weights)\n",
    "    mutatedOffspring2.append(o2third_layer_weights)\n",
    "\n",
    "    return mutatedOffspring1, mutatedOffspring2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "def calculateFitness(population):\n",
    "\n",
    "    for i in range(len(population) - 1):\n",
    "\n",
    "        player1 = population[i]\n",
    "\n",
    "        challengers = population[:i] +  population[i+1:]\n",
    "\n",
    "        randomPlayers = np.random.choice(challengers, size=5, replace=False)\n",
    "\n",
    "        for player2 in randomPlayers:\n",
    "            obj = Game(player1, player2)\n",
    "            new_board, winner, best_player = AI_vs_AI(player1, player2)\n",
    "\n",
    "            if winner==\"draw\":\n",
    "                player1.score +=1\n",
    "                player2.score +=1\n",
    "            else:\n",
    "                best_player.score +=2\n",
    "\n",
    "                if winner == 'red':\n",
    "                    player1.score -= 1\n",
    "                else:\n",
    "                    player2.score -= 1\n",
    "\n",
    "            #print(\"game complete\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "def calculateFitnessOffspring(offspring1, offspring2, population):\n",
    "    \n",
    "    players = [offspring1, offspring2]\n",
    "\n",
    "    for player1 in players:\n",
    "\n",
    "        randomPlayers = np.random.choice(population, size=5, replace=False)\n",
    "    \n",
    "        for player2 in randomPlayers:\n",
    "            obj = Game(offspring1, player2)\n",
    "            new_board, winner, best_player = AI_vs_AI(offspring1, player2)\n",
    "\n",
    "            if winner==\"draw\":\n",
    "                offspring1.score +=1\n",
    "                player2.score +=1\n",
    "            else:\n",
    "                best_player.score +=2\n",
    "\n",
    "                if winner == 'red':\n",
    "                    player2.score -= 1\n",
    "                else:\n",
    "                    offspring1.score -= 1\n",
    "\n",
    "                \n",
    "    return population + players\n",
    "\n",
    "\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "def fitnessForBinaryTournament_2(parent_1, parent_2, chromosomes):\n",
    "    \n",
    "    newchromosomes = chromosomes.copy()\n",
    "\n",
    "    #newchromosomes.remove(parent_1)\n",
    "    #newchromosomes.remove(parent_2)\n",
    "\n",
    "    parent1Score = 0\n",
    "    parent2Score = 0\n",
    "    \n",
    "    print(\"chromosomes left\", len(newchromosomes))\n",
    "\n",
    "   \n",
    "    randomPlayers = np.random.choice(newchromosomes, size=2, replace=False)\n",
    "    \n",
    "    for player2 in randomPlayers:\n",
    "        print(\"match start\")\n",
    "        obj = Game(parent_1, player2)\n",
    "        new_board, winner, best_player = AI_vs_AI(parent_1, player2)\n",
    "\n",
    "        # if winner==\"draw\":\n",
    "        #     parent1Score += 1\n",
    "\n",
    "        #     player2.draw += 1\n",
    "        #     parent_1.draw += 1\n",
    "\n",
    "        #     parent_1.score += 1\n",
    "        #     player2.score += 1\n",
    "\n",
    "        # else:\n",
    "        if winner == 'white':\n",
    "            # print(\"bnum: \",best_player.number)\n",
    "            # parent1Score -= 1\n",
    "            # parent_1.loss += 1\n",
    "            # player2.win += 1\n",
    "            # parent_1.score -= 1\n",
    "            # player2.score += 2\n",
    "            parent_1.win += 1\n",
    "            player2.loss += 1\n",
    "\n",
    "        else:\n",
    "            # parent1Score += 2\n",
    "            # parent_1.win += 1\n",
    "            # player2.loss += 1\n",
    "            # parent_1.score += 2\n",
    "            # player2.score -= 1\n",
    "            player2.win += 1\n",
    "            parent_1.loss += 1\n",
    "        \n",
    "        player2.score = player2.win - player2.loss\n",
    "        parent_1.score = parent_1.win - parent_1.loss\n",
    "        parent1Score = parent_1.score\n",
    "\n",
    "    for player2 in randomPlayers:\n",
    "        obj = Game(parent_2, player2)\n",
    "        new_board, winner, best_player = AI_vs_AI(parent_2, player2)\n",
    "\n",
    "        # if winner==\"draw\":\n",
    "        #     parent2Score += 1\n",
    "\n",
    "        #     parent_2.draw += 1\n",
    "        #     player2.draw += 1\n",
    "\n",
    "        #     parent_2.score += 1\n",
    "        #     player2.score += 1\n",
    "\n",
    "        # else:\n",
    "        if winner == 'white':\n",
    "            # print(\"winner\", winner, best_player)\n",
    "            \n",
    "            # print(parent_2)\n",
    "            # parent2Score -= 1\n",
    "            # parent_2.loss += 1\n",
    "            # player2.win += 1\n",
    "            # parent_2.score -= 1\n",
    "            # player2.score += 2\n",
    "            parent_2.win += 1\n",
    "            player2.loss += 1\n",
    "        else:\n",
    "            # parent2Score += 2\n",
    "            # player2.loss += 1\n",
    "            # parent_2.win += 1\n",
    "            # parent_2.score += 2\n",
    "            # player2.score -= 1\n",
    "            player2.win += 1\n",
    "            parent_2.loss += 1\n",
    "        \n",
    "        player2.score = player2.win - player2.loss\n",
    "        parent_2.score = parent_2.win - parent_2.loss\n",
    "        parent2Score = parent_2.score\n",
    "            \n",
    "\n",
    "\n",
    "    if parent2Score > parent1Score:\n",
    "        return parent_2\n",
    "    else:\n",
    "        return parent_1\n",
    "\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "def survivorSelection(newPopulation, type, totalnum):\n",
    "\n",
    "    finalPopulation = []\n",
    "        \n",
    "    if type == \"truncation\":\n",
    "\n",
    "        tup = []\n",
    "        for i in newPopulation:\n",
    "            tup.append((i.score, i))\n",
    "        \n",
    "        sortedlist = sorted(tup, key=lambda x: x[0], reverse=True)\n",
    "\n",
    "        for pop in sortedlist:\n",
    "            finalPopulation.append(pop[1])\n",
    "\n",
    "        finalPopulation =  finalPopulation[:10]\n",
    "    \n",
    "    elif type == \"fps\":\n",
    "        total_fitness = sum(chromosome.score for chromosome in newPopulation)\n",
    "        chromosome_probabilities = [chromosome.fitness/total_fitness for chromosome in newPopulation]\n",
    "        for i in range(10):\n",
    "            finalPopulation.append(np.random.choice(newPopulation, p=chromosome_probabilities))\n",
    "\n",
    "\n",
    "    elif type == \"binary_tournament\":\n",
    "         \n",
    "        for i in range(totalnum):\n",
    "        # Choose two random parents from the population\n",
    "            index = np.random.choice(newPopulation, 2, replace=False) \n",
    "\n",
    "            parent1 = index[0]\n",
    "            parent2 = index[1]\n",
    "\n",
    "            # Choose the fittest chromosome as the first parent\n",
    "            if parent1.score > parent2.score:\n",
    "                finalPopulation.append(parent1)\n",
    "            else:\n",
    "                finalPopulation.append(parent2)\n",
    "\n",
    "    elif type == \"tournament\":\n",
    "       \n",
    "       nnewPopulation = newPopulation.copy()\n",
    "\n",
    "       print(\"lenght\", len(newPopulation))\n",
    "\n",
    "       for i in range(totalnum):\n",
    "           \n",
    "           index = np.random.choice(nnewPopulation, 2, replace=False) \n",
    "\n",
    "           parent1 = index[0]\n",
    "           parent2 = index[1]\n",
    "           \n",
    "           #parent1 = random.choice(newPopulation)\n",
    "           #parent2 = random.choice(newPopulation)\n",
    "\n",
    "           chosen = fitnessForBinaryTournament_2(parent1, parent2, nnewPopulation)\n",
    "           \n",
    "           finalPopulation.append(chosen)\n",
    "           nnewPopulation.remove(chosen)\n",
    "            \n",
    "           print(len(finalPopulation))\n",
    "    \n",
    "    return finalPopulation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [],
   "source": [
    "def NueroEvolution2(population, generations):\n",
    "\n",
    "    best_overall_player_score = 0\n",
    "\n",
    "    chromosomes = []\n",
    "\n",
    "    #Initialise random population\n",
    "    for i in range(population):\n",
    "        chromosomes.append(evolutionary_player(i))\n",
    "    \n",
    "    count = 25\n",
    "    \n",
    "    for n in range(generations):\n",
    "        \n",
    "        print(\"Generation: \", n)\n",
    "\n",
    "        parent1, parent2 = parentSelection(chromosomes, \"binary_tournament\")\n",
    "\n",
    "        print(\"Parent 1\", parent1)\n",
    "        print(\"Parent 2\", parent2)\n",
    "\n",
    "        offspring1, offspring2 = uniform_crossover(parent1, parent2)  \n",
    "        print(\"Crossover complete\")\n",
    "\n",
    "        offspring1AfterMutation, offspring2AfterMutation = mutationNew(offspring1, offspring2, mutationRate=0.1)\n",
    "\n",
    "        parent1player, parent2player = createNeuralNetwork(offspring1AfterMutation, offspring2AfterMutation, count)\n",
    "        print(\"Mutation complete\")\n",
    "\n",
    "        newPopulation = chromosomes + [parent1player, parent2player]\n",
    "        \n",
    "        #newPopulation = calculateFitnessOffspring(parent1player, parent2player, chromosomes)\n",
    "\n",
    "        #calculateFitness(newPopulation)\n",
    "        print(\"Fitness Calculation complete\")\n",
    "\n",
    "        chromosomes = survivorSelection(newPopulation, \"truncation\", population)\n",
    "\n",
    "        \n",
    "        \n",
    "        print(\"Generation Scores\")\n",
    "        for i in chromosomes:\n",
    "            \n",
    "            print(\"wins:\", i.win, \"losses:\", i.loss, \"draws:\", i.draw, \"score\", i.score)\n",
    "        \n",
    "    \n",
    "\n",
    "        count += 2\n",
    "\n",
    "    max_fit = 0\n",
    "    player = None\n",
    "    for i in chromosomes:\n",
    "        print(i)\n",
    "        if i.score > max_fit:\n",
    "            max_fit = i.score\n",
    "            player = i\n",
    "    return player\n",
    "\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Generation:  0\n",
      "Tournament for Parent 1\n",
      "match start\n",
      "match start\n",
      "match start\n",
      "match start\n",
      "match start\n",
      "match start\n",
      "Parent 1 <__main__.Evol_Player object at 0x0000016B7CDCE3B0>\n",
      "Parent 2 <__main__.Evol_Player object at 0x0000016B7D558700>\n",
      "Crossover complete\n",
      "Mutation complete\n",
      "Fitness Calculation complete\n",
      "Generation Scores\n",
      "wins: 4 losses: 0 draws: 0 score 4\n",
      "wins: 2 losses: 0 draws: 0 score 2\n",
      "wins: 2 losses: 0 draws: 0 score 2\n",
      "wins: 0 losses: 0 draws: 0 score 0\n",
      "wins: 0 losses: 0 draws: 0 score 0\n",
      "wins: 0 losses: 0 draws: 0 score 0\n",
      "wins: 1 losses: 1 draws: 0 score 0\n",
      "wins: 0 losses: 0 draws: 0 score 0\n",
      "wins: 0 losses: 0 draws: 0 score 0\n",
      "wins: 0 losses: 0 draws: 0 score 0\n",
      "Generation:  1\n",
      "Tournament for Parent 1\n",
      "match start\n",
      "match start\n",
      "match start\n",
      "match start\n",
      "match start\n",
      "match start\n",
      "Parent 1 <__main__.Evol_Player object at 0x0000016B7CDCC040>\n",
      "Parent 2 <__main__.Evol_Player object at 0x0000016B7D5583D0>\n",
      "Crossover complete\n",
      "Mutation complete\n",
      "Fitness Calculation complete\n",
      "Generation Scores\n",
      "wins: 4 losses: 0 draws: 0 score 4\n",
      "wins: 5 losses: 1 draws: 0 score 4\n",
      "wins: 4 losses: 1 draws: 0 score 3\n",
      "wins: 2 losses: 0 draws: 0 score 2\n",
      "wins: 2 losses: 1 draws: 0 score 1\n",
      "wins: 0 losses: 0 draws: 0 score 0\n",
      "wins: 0 losses: 0 draws: 0 score 0\n",
      "wins: 0 losses: 0 draws: 0 score 0\n",
      "wins: 2 losses: 3 draws: 0 score -1\n",
      "wins: 1 losses: 2 draws: 0 score -1\n",
      "Generation:  2\n",
      "Tournament for Parent 1\n",
      "match start\n",
      "match start\n",
      "match start\n",
      "match start\n",
      "match start\n",
      "match start\n",
      "Parent 1 <__main__.Evol_Player object at 0x0000016B7D558B50>\n",
      "Parent 2 <__main__.Evol_Player object at 0x0000016B7CDCC040>\n",
      "Crossover complete\n",
      "Mutation complete\n",
      "Fitness Calculation complete\n",
      "Generation Scores\n",
      "wins: 6 losses: 0 draws: 0 score 6\n",
      "wins: 7 losses: 1 draws: 0 score 6\n",
      "wins: 5 losses: 2 draws: 0 score 3\n",
      "wins: 2 losses: 0 draws: 0 score 2\n",
      "wins: 2 losses: 0 draws: 0 score 2\n",
      "wins: 5 losses: 4 draws: 0 score 1\n",
      "wins: 0 losses: 0 draws: 0 score 0\n",
      "wins: 0 losses: 0 draws: 0 score 0\n",
      "wins: 3 losses: 4 draws: 0 score -1\n",
      "wins: 1 losses: 2 draws: 0 score -1\n",
      "Generation:  3\n",
      "Tournament for Parent 1\n",
      "match start\n",
      "match start\n",
      "match start\n",
      "match start\n",
      "match start\n",
      "match start\n",
      "Parent 1 <__main__.Evol_Player object at 0x0000016B7D5583D0>\n",
      "Parent 2 <__main__.Evol_Player object at 0x0000016B7D558FD0>\n",
      "Crossover complete\n",
      "Mutation complete\n",
      "Fitness Calculation complete\n",
      "Generation Scores\n",
      "wins: 8 losses: 1 draws: 0 score 7\n",
      "wins: 6 losses: 1 draws: 0 score 5\n",
      "wins: 7 losses: 3 draws: 0 score 4\n",
      "wins: 3 losses: 0 draws: 0 score 3\n",
      "wins: 7 losses: 5 draws: 0 score 2\n",
      "wins: 2 losses: 0 draws: 0 score 2\n",
      "wins: 5 losses: 4 draws: 0 score 1\n",
      "wins: 0 losses: 0 draws: 0 score 0\n",
      "wins: 0 losses: 0 draws: 0 score 0\n",
      "wins: 1 losses: 2 draws: 0 score -1\n",
      "Generation:  4\n",
      "Tournament for Parent 1\n",
      "match start\n",
      "match start\n",
      "match start\n",
      "match start\n",
      "match start\n",
      "match start\n",
      "Parent 1 <__main__.Evol_Player object at 0x0000016B7CDCBDF0>\n",
      "Parent 2 <__main__.Evol_Player object at 0x0000016B7CDCC040>\n",
      "Crossover complete\n",
      "Mutation complete\n",
      "Fitness Calculation complete\n",
      "Generation Scores\n",
      "wins: 8 losses: 1 draws: 0 score 7\n",
      "wins: 10 losses: 5 draws: 0 score 5\n",
      "wins: 8 losses: 4 draws: 0 score 4\n",
      "wins: 6 losses: 3 draws: 0 score 3\n",
      "wins: 3 losses: 0 draws: 0 score 3\n",
      "wins: 3 losses: 1 draws: 0 score 2\n",
      "wins: 6 losses: 5 draws: 0 score 1\n",
      "wins: 2 losses: 1 draws: 0 score 1\n",
      "wins: 0 losses: 0 draws: 0 score 0\n",
      "wins: 0 losses: 0 draws: 0 score 0\n",
      "<__main__.Evol_Player object at 0x0000016B7D558FD0>\n",
      "<__main__.Evol_Player object at 0x0000016B7CDCC040>\n",
      "<__main__.Evol_Player object at 0x0000016B7D5583D0>\n",
      "<__main__.Evol_Player object at 0x0000016B7CDCA590>\n",
      "<__main__.Evol_Player object at 0x0000016B7D559BA0>\n",
      "<__main__.Evol_Player object at 0x0000016B7CDCDBA0>\n",
      "<__main__.Evol_Player object at 0x0000016B7D558B50>\n",
      "<__main__.Evol_Player object at 0x0000016B7CDCBDF0>\n",
      "<__main__.Evol_Player object at 0x0000016B7CDCB610>\n",
      "<__main__.Evol_Player object at 0x0000016B7CDC9C60>\n"
     ]
    }
   ],
   "source": [
    "player2 = NueroEvolution2(12, 5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[-9.69265046e-01 -4.98168368e-01 -6.67685943e-01  4.48581290e-01\n",
      "  -3.41281152e-01  6.94004360e-01  6.14296069e-01 -1.02347458e-01\n",
      "   1.58466900e-01 -1.09662384e-01  1.06936624e-01 -4.64349554e-02\n",
      "   3.86711255e+00 -4.18765292e-01  7.36664844e-01  1.10342845e+00\n",
      "   9.65336093e-01 -2.45872562e+00  5.73693158e-01 -1.45311671e+00\n",
      "  -6.74454093e-01 -6.42142418e-01  8.61972655e-01 -1.17888858e+00\n",
      "   1.66971335e+00 -3.04485923e-01  1.02282704e+00  3.59004861e-01\n",
      "   9.44000713e-01 -1.08012468e+00  1.19699544e+00  2.11857079e-02\n",
      "  -5.12286321e-01 -9.41911776e-02  1.17379571e+00 -2.44977327e-01\n",
      "  -1.16761400e+00 -2.29159339e-01 -8.10052273e-01 -1.09612309e+00\n",
      "   1.47593829e+00  5.63108864e-01 -5.42279312e-02 -1.69009273e-01\n",
      "   4.22183605e-01 -5.17960415e-01 -2.75072871e-02  8.15805530e-04\n",
      "  -3.02788816e-02  1.42086326e+00  5.95263171e-01  1.98520714e+00\n",
      "   5.85769566e-01  2.17791672e-02 -8.94445079e-01  1.10013187e+00\n",
      "   1.14214911e+00  1.23930373e+00  1.09832675e+00 -1.45408332e-01\n",
      "  -7.98230719e-01 -1.06022992e+00 -8.13509032e-01 -5.81356793e-01\n",
      "   3.43482565e-01 -1.29313856e+00  4.07645186e-01  3.51574697e-01\n",
      "  -6.49760833e-01  1.10998219e-01  7.79913433e-01 -8.20612734e-02\n",
      "  -8.08931873e-01 -8.15389029e-01  2.59077295e-01  5.75479358e-01\n",
      "   1.22878697e+00  2.09521681e-01  4.34488179e-01 -4.98105124e-01\n",
      "   8.52272326e-01 -2.63566607e-02 -1.48810831e-01 -3.64559339e-01\n",
      "  -6.98899411e-01  7.46796237e-01 -7.29305926e-01  8.91099523e-01\n",
      "  -5.21998495e-01  4.75597608e-02]\n",
      " [ 2.39358505e-01  1.33005035e+00 -1.40519164e-01  1.05867440e+00\n",
      "   3.14450475e-01  1.61996717e+00 -1.04360303e+00  2.67998359e-01\n",
      "  -5.58420581e-01  6.53442845e-01 -4.59652959e-01  3.51952490e-02\n",
      "  -8.18456979e-01  6.55074377e-01 -2.26278751e-01  1.95764614e+00\n",
      "  -2.12278664e-01 -1.75420707e+00 -1.24512165e+00  1.98245160e+00\n",
      "   4.51254053e-01 -9.87090736e-01  1.42190513e-02 -4.39452552e-01\n",
      "  -9.84862039e-01  9.38877384e-01  1.09812121e+00 -5.80627813e-01\n",
      "  -3.99166736e-02  6.33600084e-02 -1.10856348e-01  2.01589632e+00\n",
      "   8.48235749e-01 -7.35512964e-01  4.12948473e-02  1.76089623e+00\n",
      "  -8.01808931e-01  3.97070224e-01  6.01426307e-01  2.35729666e-02\n",
      "   1.43559455e-01  5.76986709e-01 -1.56021537e+00  1.54342750e+00\n",
      "   1.36447237e+00 -1.02720711e+00 -5.81064767e-01 -1.56226720e-01\n",
      "   8.95428857e-01  2.09811148e-01 -1.02273706e-01  8.36538296e-01\n",
      "  -5.14285134e-01 -1.25349092e+00 -1.26051396e+00 -1.21722571e-01\n",
      "  -5.02791262e-01 -7.75082563e-01 -1.71810711e+00 -7.03500929e-01\n",
      "  -1.47427816e+00  1.09536119e+00  4.63632643e-01  1.04895172e-01\n",
      "  -1.89779763e+00 -1.37457941e-01  5.07560556e-01  3.87315807e-01\n",
      "   3.47760484e-01 -1.05226752e+00  2.40677714e+00  5.89930245e-01\n",
      "   1.56639532e+00  1.02320254e+00 -3.79345694e-01  3.02129889e-01\n",
      "   8.14198324e-01  7.25583179e-01 -6.84378840e-01  1.74338904e+00\n",
      "   2.69148404e-01 -8.38120686e-01 -1.03089247e+00 -7.06996037e-01\n",
      "  -1.16065562e+00  8.55572822e-01 -7.05061193e-01 -2.20122480e-01\n",
      "  -1.76991254e+00  1.53258343e-01]\n",
      " [ 1.16956509e-01 -9.43900074e-01 -4.88417460e-01 -3.88862834e-01\n",
      "  -7.31887370e-01 -1.67126785e+00  1.33793143e+00  4.67760026e-03\n",
      "   4.49053830e-02 -5.01775224e-01  3.41730311e-01 -1.59382420e-01\n",
      "  -7.90810558e-01 -1.33626944e+00  9.55364259e-01 -7.66068657e-01\n",
      "   1.25830965e+00  8.73940052e-01 -1.64623314e+00  1.20400675e+00\n",
      "  -3.43998247e-01  8.82387524e-01  2.64666705e-02 -1.69973406e-02\n",
      "   4.70183554e-01 -1.24546082e+00 -1.76810955e+00 -2.82765880e-01\n",
      "   3.39931505e-01 -1.52953584e-01 -1.11303988e+00  3.82748279e-01\n",
      "   1.16373857e+00 -5.24769773e-01  2.16137745e-01 -1.11095056e+00\n",
      "  -3.58307497e-01 -8.30042992e-01 -8.70295826e-01 -1.80252120e+00\n",
      "  -1.35715792e+00  1.09995181e+00  1.53536758e+00 -1.03379259e+00\n",
      "  -9.09286328e-01  3.97106108e-01 -1.18295772e+00  1.12552500e-01\n",
      "  -1.09786800e+00  1.36149622e+00  7.21538582e-01  7.69345829e-01\n",
      "   4.96970611e-01 -1.18639828e+00  9.40648745e-01  4.16020779e-01\n",
      "  -2.43587076e+00  3.00457055e-01  5.99035926e-01 -9.06706300e-01\n",
      "   8.57841026e-01 -8.00563126e-02 -9.07637033e-01 -3.57910297e-01\n",
      "  -9.93101069e-01 -5.66104546e-02  1.28293547e-01 -1.16210925e+00\n",
      "  -3.66581603e-01  8.35185122e-01  1.70558308e-01  4.04063885e-01\n",
      "   1.82399767e+00  6.68777562e-01  2.34782870e-02 -2.30338970e-01\n",
      "  -2.81144215e-01  1.43432700e+00 -7.99033700e-01 -7.88201830e-01\n",
      "   8.83377517e-01 -7.90554669e-01  3.25572875e-01 -6.29911338e-01\n",
      "  -4.40607669e-01 -3.23073805e-01  8.10414555e-01  1.36263870e+00\n",
      "   1.46724409e+00  1.91385099e-01]\n",
      " [ 5.60135569e-01 -1.10015030e+00  6.58521336e-02  3.28922286e-01\n",
      "   1.47635135e+00  2.44822386e+00 -5.98102351e-01 -1.77383583e-01\n",
      "  -1.65559884e+00  7.70077845e-02  2.59046602e-01  1.16319067e+00\n",
      "   1.21153313e+00  3.48314189e-01 -6.44298352e-01 -2.45047828e-02\n",
      "   1.84663923e-01 -2.94677212e-01 -1.85995279e-01 -1.27953040e-01\n",
      "  -1.43821963e+00  1.59125193e+00  3.53971965e-01 -5.95570171e-02\n",
      "  -3.59927771e-01  1.42635438e+00  9.13860634e-02  1.24190491e+00\n",
      "   5.20936077e-01  1.76445753e+00 -3.44383072e-01  6.13425864e-01\n",
      "   1.64923838e+00  6.28929212e-01  1.73786018e-01  2.16872717e+00\n",
      "   6.36401585e-01 -7.67069178e-01 -9.57021774e-01 -6.56516187e-01\n",
      "  -8.98262819e-01  1.03519138e+00 -1.38315908e+00  2.68051726e-01\n",
      "  -7.89949027e-01 -1.12147424e+00  1.86500888e-01 -5.15287444e-01\n",
      "  -3.99515869e-01 -8.21685446e-01  4.50006671e-01 -8.45152349e-03\n",
      "  -9.44150229e-01 -3.28499714e-01 -2.12894409e+00  7.28752846e-01\n",
      "   1.41351879e+00 -7.36103586e-01  5.25546998e-01  5.70886678e-01\n",
      "  -1.88302579e-01 -1.10498678e+00  6.36181005e-02 -1.99578263e+00\n",
      "  -1.72015108e+00  2.70251764e-01  1.69775091e-01  3.47246796e-01\n",
      "  -9.79313847e-01 -1.88325757e+00  6.21885057e-01  1.08759952e-01\n",
      "  -5.38398301e-01  5.54942544e-02 -7.77725127e-01 -3.38881745e-01\n",
      "  -7.07090811e-01  4.13537987e-01 -1.06161039e+00 -3.26078276e-01\n",
      "   6.96226494e-01 -6.20818726e-01  1.62819804e+00 -4.83613382e-01\n",
      "  -3.89384352e-01 -7.57577577e-01 -1.25931907e+00 -2.98723172e-01\n",
      "   1.80543200e+00  6.93621517e-01]\n",
      " [-1.27941132e+00  7.63672703e-01  1.06596442e+00 -2.19050378e+00\n",
      "  -2.85938000e-01  1.10444444e+00  1.88285429e+00  6.68747148e-01\n",
      "   1.71208589e+00 -2.05318730e+00  2.81315954e-01  2.01383154e+00\n",
      "   2.29134794e+00 -1.67974652e+00  8.09537286e-01 -4.57882424e-01\n",
      "   1.11598259e+00 -6.17821339e-01  6.29941561e-01  1.25505713e-01\n",
      "   1.71571870e+00 -1.46939159e-01  8.38987836e-01  1.27219793e-01\n",
      "  -2.94664639e-01  2.61468611e-01 -9.90624094e-01 -1.13956635e+00\n",
      "   4.10552092e-01  9.63031690e-01 -5.57128056e-01 -9.89506942e-01\n",
      "   1.40003064e+00 -1.01165164e+00 -1.30356617e-01 -3.07234677e-02\n",
      "   1.03680666e+00  8.64261406e-01 -1.78766058e-01 -5.28548490e-01\n",
      "  -3.44388591e-02 -6.09179439e-01  6.01205404e-01  1.06666479e+00\n",
      "   3.55741302e-01  2.22867973e+00 -1.01279905e+00  7.52897451e-01\n",
      "   7.56869167e-01 -8.55708039e-02  5.79171607e-01  8.53694804e-01\n",
      "  -3.19086266e-01 -4.49386349e-01  2.27473026e-01  6.18753797e-01\n",
      "  -1.47572971e+00  2.41717804e-01 -5.69660793e-01  3.97669239e-01\n",
      "  -3.43600625e-01  1.14384845e-01  9.55349188e-01  2.58157196e-01\n",
      "  -4.89719503e-01 -9.05601025e-01 -1.04246727e+00 -1.66077452e-01\n",
      "  -1.54208805e+00 -4.62698633e-01 -5.71645231e-01 -3.82148799e-01\n",
      "  -1.30838955e+00 -1.28003902e+00 -3.76723366e-01  1.06163187e+00\n",
      "   8.74596575e-01 -5.50214777e-01 -1.21271252e+00  1.52415919e-01\n",
      "   1.28549655e+00 -1.95907718e-01  1.50538222e+00 -1.12392649e-01\n",
      "   8.60408697e-01  1.37554220e+00 -9.78404814e-01  2.73664103e-01\n",
      "   1.32093766e+00 -5.14652114e-01]\n",
      " [-1.42527365e+00  1.18257514e+00  2.99518619e-01  5.60241526e-01\n",
      "   1.24085269e+00  1.37629457e+00  2.04040953e+00  4.97391398e-01\n",
      "  -1.11585786e+00  1.25367374e-01  1.45373854e+00 -7.31846008e-02\n",
      "   1.05114905e+00 -6.21379353e-01 -1.23712619e+00  1.34825716e+00\n",
      "  -1.68812117e+00 -1.78628042e-01 -1.85915027e+00 -1.04464397e+00\n",
      "  -6.09080663e-01 -2.27481149e+00  1.79499912e+00  1.94823016e-01\n",
      "  -3.46189704e-01 -8.98142224e-01  4.25787236e-01  4.19687771e-01\n",
      "  -1.54693278e+00  4.01272301e-01  8.55402526e-01 -3.90261492e-01\n",
      "  -1.19591516e+00 -1.64512356e+00 -1.87679597e-01 -1.02383964e+00\n",
      "  -2.85400516e-01 -5.55401593e-01  5.36890066e-01  1.03833476e+00\n",
      "   2.52948342e-01 -1.20630456e+00  2.41083765e-01 -7.02635788e-01\n",
      "  -1.51388019e+00  2.44456364e-01  2.37816786e-01  9.83987461e-01\n",
      "   1.42087727e+00  8.37471990e-01 -2.72163966e-01  8.41243115e-01\n",
      "  -1.13856397e+00 -7.87361479e-01 -2.69418329e-01 -1.24659926e+00\n",
      "  -6.02881311e-01  2.48046161e-01  9.07621973e-01  8.54479288e-01\n",
      "   7.00304427e-01  5.20233941e-01 -7.92209896e-01  2.40410309e+00\n",
      "   1.46707654e+00  4.28522979e-01  1.10851282e+00  1.70239789e-01\n",
      "   4.01456374e-01  1.18823857e+00  7.52335353e-01  7.72756558e-01\n",
      "   1.01827940e+00 -1.86468144e-01 -1.33460616e+00  1.74273360e+00\n",
      "  -2.54206371e-01  5.49930994e-01  1.90072759e-01 -1.03726292e+00\n",
      "  -1.51807670e+00 -3.61172770e-01  2.22041123e+00 -3.96833545e-01\n",
      "  -9.13985704e-01  3.10050786e-01 -1.39832234e+00 -1.15062658e+00\n",
      "   7.01966285e-01 -2.09195014e-01]\n",
      " [ 1.69601111e+00 -1.12844822e+00  2.69822910e+00 -1.20318264e+00\n",
      "  -5.74121166e-01 -1.04701863e+00 -7.54248467e-01  1.19162516e+00\n",
      "  -5.12579343e-01  7.24863775e-01 -2.60768283e-01  2.59128965e-01\n",
      "   1.11304083e+00 -2.06302198e-01 -1.06692300e+00  6.71459131e-01\n",
      "   3.07591910e-02  1.41141635e+00  2.01329998e-03 -6.44178423e-01\n",
      "   2.29344621e+00 -2.62863309e-01 -8.42627843e-01 -5.40790568e-01\n",
      "   1.90265519e-01  1.41087207e-01  1.79748869e-01 -8.54363441e-01\n",
      "   5.98196357e-01  2.21146233e-01  2.28348912e+00 -1.65992512e+00\n",
      "  -1.02185055e+00  6.71358201e-01  4.78241450e-01 -4.40307081e-01\n",
      "  -5.45726970e-01  5.49676683e-01  1.85432819e+00 -1.52178913e+00\n",
      "   7.24487465e-01  1.67222831e+00  2.05015129e-01 -5.47637235e-01\n",
      "   1.16121776e+00 -1.71743608e+00 -1.13695897e+00  1.38888825e+00\n",
      "  -7.47871326e-01  1.66961485e+00  8.95434990e-01 -4.31923683e-01\n",
      "  -1.37333710e+00 -4.90743537e-01  1.10981797e-01  2.89266419e-01\n",
      "   9.20635480e-01 -5.85404581e-01  9.16329538e-01 -1.63750988e-01\n",
      "   1.19866269e+00 -3.43992242e-01 -4.98200224e-02  7.10215959e-01\n",
      "  -4.29444083e-01  1.75925920e-01  7.40122630e-01 -1.09286209e+00\n",
      "  -3.45653039e-01  4.88382971e-01  3.29747823e-01  1.47285265e+00\n",
      "   7.67616335e-01  7.83108136e-01  1.41123973e+00 -1.17521980e+00\n",
      "  -1.18793812e+00  6.24973354e-01  1.89357109e+00  1.28926580e+00\n",
      "   1.82206203e+00 -9.10867964e-01  3.87192976e-01 -2.52283633e-01\n",
      "   1.00553050e+00 -1.15538837e+00 -5.31144346e-01 -6.44187803e-01\n",
      "   2.50974840e-01 -1.27961377e+00]\n",
      " [-4.39993297e-01 -1.14341000e+00  7.49911044e-01 -9.74660154e-01\n",
      "  -1.18560201e+00 -2.95545014e-01 -1.02326916e+00  8.76100737e-01\n",
      "   1.09550708e+00 -2.99288799e-03  8.72985308e-01  1.75333889e-01\n",
      "   2.92718790e-02 -3.20753477e-01 -8.91621520e-01 -3.67636524e-01\n",
      "  -4.95181427e-01 -1.04074219e+00 -1.05223567e+00  2.64876940e-01\n",
      "   1.18337720e-01  1.04053767e+00  5.50773961e-01  1.24066037e+00\n",
      "   2.12703936e+00 -8.59229121e-01  8.52488383e-01  1.81769654e+00\n",
      "  -4.53585549e-01 -3.54745874e-01  1.17156527e+00 -1.51004215e+00\n",
      "  -9.07276529e-01 -2.41003073e-01 -9.43200491e-01 -2.19275806e+00\n",
      "   9.92466980e-01 -1.68510482e-01 -6.35384982e-01 -1.08249669e+00\n",
      "   6.52333401e-02 -1.17912163e-01 -4.44696650e-01 -4.02141824e-01\n",
      "  -3.43433253e-02  2.09860181e+00 -8.93235060e-01 -2.17545206e-01\n",
      "  -2.30275784e-01 -7.24299981e-01 -4.01070384e-01 -2.05792493e-01\n",
      "  -3.83349429e-01 -1.97643222e+00 -2.45361003e+00  1.13970745e+00\n",
      "   1.41648399e+00 -1.22653638e+00 -3.66131744e-01 -1.63402430e-01\n",
      "  -2.38880475e-01  6.93600340e-01  1.32121184e+00 -2.15563048e+00\n",
      "  -1.40861074e+00  6.67342090e-01 -5.40874894e-02  1.32689233e+00\n",
      "  -2.12029400e-02 -8.38672907e-01  9.51390597e-01 -8.24038873e-01\n",
      "  -3.41477547e-01 -9.16782603e-01  1.81787845e+00  4.15289764e-01\n",
      "  -3.12771828e-01  5.53755248e-01  5.05826791e-01  1.06856856e+00\n",
      "  -9.47070097e-01 -5.09641445e-02  2.73644766e-02 -2.32021729e+00\n",
      "   1.93990099e-01 -9.11815922e-01  9.71089012e-01  2.37185462e-01\n",
      "  -8.14535625e-02  5.00153902e-01]\n",
      " [-1.42260039e-01  3.13982013e-01  6.01599398e-01  1.08068733e+00\n",
      "   7.71251664e-01 -1.12247016e+00 -9.32768556e-01  2.92763534e-01\n",
      "  -4.29795147e-01 -1.16642986e+00 -8.22340678e-02  1.41412473e-01\n",
      "  -1.34637539e-01 -3.63739286e-01  1.53500007e+00  8.09491479e-01\n",
      "  -1.09020493e+00 -1.04280152e+00 -1.54917870e+00  1.49619448e+00\n",
      "  -1.90579405e+00 -2.12668093e-01  1.20310765e+00  1.73343065e-02\n",
      "   2.21282321e-01  9.22956704e-01  1.85985120e+00  5.63064891e-01\n",
      "   9.23933361e-01  1.54070332e+00  2.36475602e-01  2.13249914e-01\n",
      "   1.15630740e+00  3.66515631e-01  3.02004128e-01 -1.54569911e+00\n",
      "   1.54072147e+00  6.81151546e-01 -1.07846426e-01  4.97883089e-01\n",
      "  -1.14524822e+00  1.51206536e+00 -3.71630912e-01 -1.38584043e+00\n",
      "  -1.04922890e+00 -5.45144122e-01  9.83057187e-02 -1.07848017e+00\n",
      "   4.45806968e-01 -1.92229471e-01 -1.39337685e+00 -1.52619251e+00\n",
      "  -7.25342720e-01  9.96499656e-01  1.01163305e-01  2.88645309e-01\n",
      "  -1.65254483e+00 -1.92496246e+00  1.49150618e+00  5.31776465e-01\n",
      "  -1.70451846e+00 -9.16314015e-01 -1.24647406e+00  4.59067703e-01\n",
      "  -2.30976520e-01  1.79086666e+00  8.56343049e-01  2.29347523e+00\n",
      "  -4.51125826e-01 -3.00655063e-01  2.00573012e+00 -1.42804296e+00\n",
      "   4.87865002e-01 -9.91714470e-02 -1.57164114e-01  1.64655687e+00\n",
      "  -7.01586666e-01 -7.11745988e-01  3.63575112e-01 -9.82706659e-01\n",
      "  -2.11102395e+00 -1.73247218e+00  3.00524033e-01 -1.06711048e-01\n",
      "  -5.99876004e-01 -1.76104572e+00 -1.17377376e+00 -4.11618573e-02\n",
      "  -2.73687784e+00 -2.36677110e+00]\n",
      " [-2.36206877e+00 -7.67840357e-01 -8.76895543e-01 -2.84598738e-01\n",
      "   2.46769588e+00 -2.60004533e+00  1.68378352e+00 -1.39527940e+00\n",
      "   3.85986946e-01 -1.07091196e+00 -1.38795182e+00 -7.22159236e-02\n",
      "  -1.16119196e-01 -1.33726763e+00  2.15005120e+00  7.51727614e-01\n",
      "  -5.01100017e-02  1.46588167e+00  7.49827741e-01  6.68272395e-01\n",
      "   1.94290106e-02  7.88680682e-02  2.22246120e-01  6.58116288e-01\n",
      "  -1.27589825e+00  8.37897177e-01  1.65904873e-01 -3.01260943e-01\n",
      "   6.46504879e-01  7.47062513e-01  4.06656221e-01  1.22314558e+00\n",
      "  -8.59944030e-02  8.77643211e-01 -1.10982246e+00 -3.36803402e-01\n",
      "   3.07543472e-01 -2.32385669e+00  7.31152087e-01  1.19722728e+00\n",
      "   1.76476926e+00  8.81830601e-01  3.80009950e-01  6.71381875e-01\n",
      "   1.46488141e+00  9.91323560e-01  8.05096148e-02  1.53428415e+00\n",
      "  -8.13920263e-01 -1.91917093e+00  2.89889451e-01  2.36696981e+00\n",
      "  -6.74791619e-01 -5.64485752e-01  6.36612764e-02 -3.38975819e-01\n",
      "  -1.16307059e+00 -7.95007938e-01  8.65716277e-02 -5.33271611e-01\n",
      "  -2.03222681e+00 -7.10588575e-01  7.15111798e-01  2.02099543e-01\n",
      "   1.20123075e+00 -2.89844974e-01  7.72614170e-01 -3.04825581e-01\n",
      "   4.50258505e-02  9.89277305e-02 -2.16231909e-01 -1.40558617e-01\n",
      "  -4.30312849e-01 -2.31143600e+00  1.06808845e+00  7.21736887e-01\n",
      "  -4.03948868e-02 -1.40451800e-01  2.39835182e-01  2.32225800e+00\n",
      "   1.30491739e+00  4.57754529e-02 -1.94554215e+00  1.19164980e-01\n",
      "  -1.67445335e+00 -1.17046075e+00  7.34542179e-01  1.51627246e+00\n",
      "   1.48777279e-01  3.74203725e-01]\n",
      " [ 1.09265427e+00  6.27271810e-01 -3.36363815e-01 -1.34563934e+00\n",
      "   8.80893355e-01 -1.54406642e+00  1.50736282e+00  4.21049081e-01\n",
      "  -1.21786434e+00 -1.40652151e+00 -1.22262329e+00  7.60552938e-01\n",
      "   4.31319356e-01  2.10849182e+00 -4.41940139e-01  1.27428931e+00\n",
      "  -1.04152630e+00  7.86008284e-01 -7.64177805e-01  4.67057743e-01\n",
      "   5.19460100e-01 -1.43490928e+00 -8.07740535e-01  1.06048241e+00\n",
      "   2.00315058e+00  3.08113706e-01 -2.37670786e-01  3.67992547e-01\n",
      "  -1.07041513e-01 -1.21335084e+00  4.96040113e-01  2.16580383e+00\n",
      "  -1.35302592e+00 -7.58838563e-02  4.87741388e-01 -8.79188013e-02\n",
      "  -1.67214714e-01  2.33533126e+00  1.07292155e+00  6.43352543e-01\n",
      "  -4.87487401e-01  5.21069471e-01  2.54918506e+00  1.15578500e-01\n",
      "   5.10493130e-01 -1.10730588e+00 -1.81219121e+00 -1.47187216e-01\n",
      "  -1.44133365e-01 -1.30310996e+00 -7.14291315e-01  1.21366727e+00\n",
      "  -1.78192560e+00  8.82841456e-02 -1.06418086e+00 -5.71813593e-02\n",
      "   1.34172553e+00  2.21390379e+00  2.48390785e-01  2.06215958e+00\n",
      "  -4.54929952e-01  7.95659815e-01  2.02662742e+00 -2.86733535e+00\n",
      "   3.69716210e-01 -2.83393239e+00 -1.20619190e+00 -5.15029616e-01\n",
      "  -8.60713326e-02  3.48037278e-01  9.45790091e-01  9.71509956e-01\n",
      "   4.79813382e-01  8.00613773e-01  3.85787055e-01 -6.59895948e-01\n",
      "  -9.90647776e-01 -7.64343704e-01 -5.71415323e-01  6.75987803e-03\n",
      "   9.32693709e-01  2.18592113e+00  8.98254687e-01  2.83480116e-01\n",
      "  -4.82408382e-02  5.91032972e-01  7.08145395e-01  4.42477929e-01\n",
      "   4.20833446e-01  6.50262592e-01]\n",
      " [ 6.80201567e-01 -2.41660614e+00 -1.73134262e-01 -1.82220466e+00\n",
      "   1.05673944e-01  1.74854678e+00  1.21633859e-02  1.06075842e+00\n",
      "   1.33405980e+00 -1.09843412e-01  9.81880241e-01 -9.89102331e-01\n",
      "   7.20812999e-01  1.91284575e-01 -6.54483799e-01  6.20574566e-01\n",
      "   5.45893553e-01 -7.30712027e-01 -1.06986295e+00  2.54623084e-01\n",
      "   4.18061693e-01 -1.12631092e+00  1.05755616e-01 -9.21777679e-01\n",
      "   1.44924319e+00  8.54182816e-01  7.97318418e-01  6.47021257e-01\n",
      "  -6.82463081e-01  1.75230540e-01 -1.74475939e+00 -1.39378238e+00\n",
      "   5.62789764e-02 -1.32516484e+00  4.99830284e-01  5.99193116e-01\n",
      "  -3.96105301e-01 -1.15258856e-01 -1.56757960e+00 -1.43961870e-01\n",
      "   2.74773713e-02 -5.03520085e-01 -1.36833798e+00 -9.08171099e-01\n",
      "  -1.58556656e+00  1.17433258e+00  9.45369536e-01 -2.33326096e-01\n",
      "  -1.20616449e+00 -1.49168817e+00 -1.51160411e+00  4.53792123e-01\n",
      "  -2.15258384e-01  3.88140910e-01 -1.56772948e+00 -4.86759580e-01\n",
      "   6.15083839e-02 -2.25929321e-01  1.15727476e+00 -2.12834101e+00\n",
      "   1.14235547e+00 -4.01437071e-02 -3.07926094e-01 -3.88451689e-01\n",
      "  -9.02393267e-01 -1.20858572e-01 -1.76148013e-01 -1.77711322e-02\n",
      "  -5.43771208e-01 -1.83451548e+00  1.69084764e+00 -2.76661308e-02\n",
      "  -1.53110877e+00 -5.65110448e-01 -5.64408666e-01 -4.40140408e-01\n",
      "   1.06410734e-01  1.02446409e+00  1.66071818e-01  1.58853180e+00\n",
      "   5.00620942e-01 -1.59535487e+00  1.54207729e+00  1.11469773e+00\n",
      "  -1.20740190e+00 -1.48662290e-01 -7.14760989e-01 -2.30957164e+00\n",
      "   1.11733801e+00  8.75830353e-01]\n",
      " [ 1.04918807e+00  4.95745469e-01 -1.65484941e+00 -2.03135844e-01\n",
      "  -1.66958294e+00 -5.10056109e-01 -2.18908297e+00 -6.37084233e-01\n",
      "  -1.84144123e+00  8.24183327e-01 -3.96756217e-01 -3.27666237e-01\n",
      "   4.15039034e-01 -9.16926165e-03  3.52643834e-01  6.61493506e-01\n",
      "  -6.51810004e-01 -1.01622441e+00  7.43215798e-01  5.61600672e-01\n",
      "  -2.01605328e-01  1.23639323e+00 -3.75249792e-01 -4.41302309e-02\n",
      "  -5.07805752e-01  3.34619692e-01  7.60042345e-01 -4.21994796e-01\n",
      "  -1.16311707e+00 -9.69049348e-01  7.93884865e-01  4.26628165e-01\n",
      "   1.35721441e+00 -1.62326671e-01  6.75521202e-01  1.68628893e-02\n",
      "  -6.96251476e-01  1.42014364e+00 -1.17307669e+00  6.16374406e-01\n",
      "   1.34322570e+00  1.94911089e+00  1.43517069e+00 -2.51482554e-01\n",
      "  -8.18020505e-01  7.44328459e-03 -4.19991927e-02 -1.18920204e+00\n",
      "   2.85578864e-01  1.18780582e+00 -6.09992672e-01  1.88379161e+00\n",
      "  -1.86596318e+00  1.21785520e+00 -4.79121938e-01 -2.58735000e-02\n",
      "  -1.71256908e+00  1.25001506e-01 -7.62464715e-01 -1.13297433e+00\n",
      "   8.27563182e-01  7.57343248e-02  1.12349821e+00 -1.73949746e+00\n",
      "  -9.42240116e-01  8.59980444e-01 -1.35591061e+00  2.16964165e+00\n",
      "   6.97889312e-01  4.44333465e-01  8.85505171e-01  4.63952390e-01\n",
      "  -1.47165883e+00 -4.61962561e-01  1.69981692e+00 -4.61681008e-01\n",
      "  -1.77181705e+00 -1.37295518e+00 -1.79480374e+00 -2.38209879e+00\n",
      "  -1.15928314e+00  7.66798181e-01 -1.14814388e+00  1.36321503e+00\n",
      "  -2.64342815e-01 -1.19065298e+00  1.69694273e+00 -5.95231015e-01\n",
      "  -1.64631890e+00  5.12975508e-02]\n",
      " [ 8.73930240e-01  1.51730840e-01  1.86944105e+00 -8.19093303e-01\n",
      "  -5.70140252e-01  7.20956008e-01  5.02397109e-02 -1.73723442e+00\n",
      "   1.36179976e+00  3.10068864e-01 -1.31778423e+00 -7.63243111e-01\n",
      "   1.64325372e+00 -8.54216166e-01  4.55706942e-01 -5.82294068e-01\n",
      "  -1.13535075e-01  3.79133061e-01  4.00402555e-01  1.43509353e+00\n",
      "   6.96889079e-01 -1.71483891e+00 -1.23201116e-01  7.46961435e-01\n",
      "   4.10496962e-01 -4.75889673e-01  4.02136919e-02 -3.60114196e-01\n",
      "   5.17424529e-01  6.30836105e-01 -9.81411964e-01 -1.39232731e+00\n",
      "  -1.09948448e+00  8.06159864e-02 -2.14987871e+00  1.84490408e+00\n",
      "  -8.71733510e-01 -1.25513072e+00 -3.15608981e-01 -6.54294459e-02\n",
      "   2.84878735e-02 -1.94359133e+00 -3.83420352e-01  1.89702990e+00\n",
      "   5.98371017e-01  3.24834802e-01 -2.47833327e-01 -8.92688261e-01\n",
      "   1.83357665e-01  5.88472773e-01  5.81742096e-01  2.22185880e-01\n",
      "  -2.58837543e-01 -8.30606780e-01 -5.13464272e-01  1.68763887e+00\n",
      "   1.48147568e+00  2.71675870e-01 -3.37142201e-03  1.39564753e+00\n",
      "  -1.58896142e-01 -8.47626734e-01 -4.43189021e-01 -5.34062073e-01\n",
      "  -9.64844994e-01 -6.91336146e-01  9.50394662e-01 -8.03890703e-01\n",
      "   6.75455743e-01  6.93734318e-01 -1.37781853e-01  5.33075438e-01\n",
      "  -2.86663538e-01 -1.07003516e+00 -5.73368896e-01  1.52285912e+00\n",
      "  -3.47899677e-01  1.41041134e-01  3.90457547e-01  1.05551833e-01\n",
      "   7.02816310e-01  6.94871734e-01  1.21053529e+00  3.83942437e-02\n",
      "   1.17131554e+00 -8.21890196e-01  4.51944168e-01 -1.37182067e+00\n",
      "  -1.51156756e+00  7.39120384e-01]\n",
      " [-4.83822238e-01 -3.07178662e-01  1.43970029e+00  7.24003192e-01\n",
      "   6.93627687e-01  2.32950627e+00  1.89702932e-03  5.76017837e-01\n",
      "  -7.20577430e-01  2.61770854e-01  1.25266397e+00 -9.04657472e-01\n",
      "  -7.47460933e-01 -7.66369185e-01 -8.73291393e-01 -1.83252644e-01\n",
      "  -1.63544421e-01  3.42877212e-01  6.78940453e-01  3.45331621e-01\n",
      "  -1.66834437e+00  2.23767745e-01  7.73303609e-03  6.30946208e-02\n",
      "   1.89245124e+00 -2.17487039e+00  1.01000124e+00  4.94590650e-02\n",
      "  -3.58557788e-01 -1.42156111e-01  6.91668362e-01 -1.50145516e+00\n",
      "  -4.42953906e-01 -5.30199671e-02 -1.36837076e-01  1.09475972e+00\n",
      "   4.63681516e-01 -5.44525311e-01  4.21423246e-02 -4.82149225e-01\n",
      "  -1.51001888e+00 -1.42904314e+00  5.11517374e-01  7.79062891e-01\n",
      "   1.15307340e+00 -1.08552995e+00  1.47866112e+00 -8.30604443e-01\n",
      "   1.76161389e-02  7.70321053e-02  9.06726474e-01 -1.20651735e-01\n",
      "   1.99891986e+00 -1.19192787e+00 -1.17981948e+00  1.73866395e+00\n",
      "  -1.91743146e+00 -9.40958073e-01  1.07123325e+00 -1.39888718e-01\n",
      "  -2.73942935e-01 -8.97298571e-01  1.12747469e+00  1.04077993e+00\n",
      "  -3.13788240e-02  8.04238577e-01 -1.60396421e-01  3.47376153e-01\n",
      "  -1.92836365e+00  7.37767573e-01  4.75945002e-01 -4.13204890e-02\n",
      "   6.25749998e-01 -6.11568969e-01  5.11875726e-01 -3.95874418e-01\n",
      "   1.65841621e-01 -1.08528777e-01 -7.04715135e-01  2.02977895e+00\n",
      "  -1.16066471e+00 -3.80254328e-01  9.51373709e-01 -7.16056228e-01\n",
      "   8.59020974e-01 -6.70392639e-02  1.15722667e+00 -2.06385110e+00\n",
      "  -7.61490445e-01  8.27083398e-01]\n",
      " [ 5.88498195e-01 -9.75230513e-01  1.08539907e+00 -2.15908589e-01\n",
      "   4.54234924e-01  1.55782668e+00 -1.49856206e-01  1.84431442e+00\n",
      "  -6.80567707e-01 -4.73861862e-01  2.98431147e-01  8.76738829e-01\n",
      "   3.45876101e-01 -1.06092791e+00  5.65503161e-01 -5.64603065e-01\n",
      "  -3.54444547e-01  1.75499738e-02 -7.08331075e-01 -6.01797483e-01\n",
      "  -1.94808804e+00 -7.72852743e-02  2.49816682e+00 -9.79167718e-02\n",
      "  -9.30946428e-01 -4.33194023e-01 -1.89715696e+00  3.81773400e-01\n",
      "   1.72999027e-01  1.53198973e+00  7.09667452e-01 -1.98088503e-01\n",
      "   2.45854695e+00  3.93323141e-01 -1.61311463e+00 -7.15281292e-01\n",
      "   4.88249198e-01  1.86819451e-01 -1.23054274e+00 -1.85475857e-01\n",
      "  -7.75532467e-01  1.94896050e-01  1.09044919e+00  3.37291838e-01\n",
      "   1.21809971e-01  1.47466022e-01  8.01070779e-01 -3.48751626e-01\n",
      "   2.24098547e-01 -5.11100569e-01  7.36069626e-02 -8.14052625e-01\n",
      "  -4.34803524e-01 -8.45983263e-01 -6.21968024e-01 -8.92757778e-01\n",
      "   2.47537589e-01  5.98341824e-01  1.46532179e+00 -1.43216626e+00\n",
      "   1.14147800e+00 -1.31085466e+00 -5.76036449e-01  6.28012721e-01\n",
      "   1.24638291e+00  5.65481290e-02  4.62498809e-01  1.35582785e+00\n",
      "  -2.85675802e-01  8.02966629e-02 -1.43432136e+00  1.00136636e-02\n",
      "  -5.01215651e-01 -1.41599832e+00 -1.55853627e+00  6.26171509e-01\n",
      "   1.33706749e+00  6.84336055e-01 -4.29262091e-01  1.61792359e+00\n",
      "   2.92780081e-01 -5.81358672e-01 -6.23350811e-01  5.40176324e-01\n",
      "  -6.79904588e-01  2.69508768e-01 -1.61121036e+00 -1.39692378e+00\n",
      "  -5.57656461e-01  1.78925930e-03]\n",
      " [ 1.08521026e+00 -1.67085669e+00 -2.44025610e-02  7.36098473e-01\n",
      "  -5.45414305e-02  8.44026253e-01  1.76929656e+00 -8.38890021e-02\n",
      "  -9.30246576e-01 -2.61350684e-02 -9.45282323e-01 -2.05010897e-01\n",
      "  -7.76449499e-02 -1.89273494e-01 -9.26352236e-01  6.15754349e-01\n",
      "  -1.20505737e+00 -1.07991296e+00 -2.51553152e-01  8.17512011e-01\n",
      "  -1.15610915e+00 -1.28719618e-01 -1.38305911e-01 -2.28896757e+00\n",
      "  -1.01592483e+00 -1.83910524e-01 -5.77709214e-01  1.13304410e+00\n",
      "  -1.58111844e+00  1.13201604e+00 -5.92383268e-02 -8.13124353e-01\n",
      "  -8.39520232e-01 -4.29914536e+00  3.65197620e-01 -4.06203710e-01\n",
      "   1.46237907e+00 -1.53520071e+00  3.77972995e-01  2.38572760e-01\n",
      "  -7.46248639e-01 -1.39118005e-01  1.35653453e-01  8.99869685e-01\n",
      "  -3.97940724e-01  5.07761812e-01  8.59203990e-01 -1.51271669e+00\n",
      "  -1.46830927e-01 -3.87373738e-02 -1.76483915e+00  2.11805807e-01\n",
      "  -1.15512567e+00  4.89255645e-02  7.99111877e-02 -8.04998021e-01\n",
      "   3.05637719e-01  1.49586712e-01 -2.57727888e+00 -4.44109746e-01\n",
      "  -3.43378204e-01  3.84835921e-01  1.34122245e+00  4.79101993e-01\n",
      "   2.17376611e+00 -1.13143811e+00  5.44583112e-01 -8.21625649e-02\n",
      "   7.30966857e-02  1.20135059e+00  1.35528512e-02 -8.12379811e-01\n",
      "   1.54720824e+00 -4.73053195e-01  1.22246087e+00 -7.24956780e-01\n",
      "  -9.12407839e-01 -8.45140477e-01 -7.78657918e-01  1.33075140e+00\n",
      "   2.70544982e-01 -3.17786534e-01  7.91366945e-01 -2.41662313e-01\n",
      "  -5.59073380e-02 -8.82913120e-01  1.43221785e+00 -8.35657949e-01\n",
      "  -1.85995765e-01 -1.45382703e+00]\n",
      " [ 4.60799740e-01 -2.70994921e-01  2.23543620e+00 -1.19249606e+00\n",
      "   4.14492334e-01  5.16959066e-01 -1.87209727e+00 -1.34674340e+00\n",
      "   1.30319996e+00  2.11233028e-02 -9.44265229e-01 -2.64438981e+00\n",
      "   7.89539306e-01  6.53103978e-01  6.21583501e-01 -3.43875680e-01\n",
      "  -1.14599935e+00  1.75966711e+00  4.52577531e-02  3.66274460e-01\n",
      "   1.28259839e+00 -9.33551470e-01  1.45839575e+00 -6.45357323e-01\n",
      "  -5.26753115e-01  1.98326593e+00 -6.49968766e-01 -8.45346549e-02\n",
      "   2.21638301e-01  8.79389882e-01 -5.75932020e-01 -1.23432392e-01\n",
      "  -7.41046766e-01  3.21620206e-02 -9.88068986e-01 -5.03370449e-01\n",
      "  -1.29827514e+00 -4.26991513e-01  1.79176926e+00 -1.11516728e+00\n",
      "  -8.61601389e-01  1.79733541e+00  2.30352616e+00  1.42189843e+00\n",
      "   5.05621982e-01  2.38792109e+00 -7.30102511e-01  4.21794354e-01\n",
      "   1.28244175e-01 -1.52537220e+00  1.23734343e+00 -2.27520593e+00\n",
      "   4.37248284e-01  2.50552432e+00  1.39684810e+00 -9.41195486e-02\n",
      "   6.06282212e-01  7.08513659e-01  4.22979833e-01 -1.75307937e+00\n",
      "   5.33836614e-01  8.29200918e-01 -1.73015454e-01 -6.34815241e-01\n",
      "   9.84355241e-01  1.29934294e+00 -1.31676354e+00  1.52227827e+00\n",
      "   8.34310475e-01 -1.94106937e+00 -3.04413044e-01  2.86223798e-01\n",
      "   3.68630305e-01 -4.70405179e-01 -8.06654574e-02  7.57403195e-01\n",
      "  -1.97333216e+00 -3.52779072e-01  5.95332635e-02 -9.59521045e-02\n",
      "  -1.74370085e-01  6.16924490e-01 -1.48387828e+00 -1.20189343e+00\n",
      "   3.35516147e-01  4.78471522e-01  1.45893071e+00 -7.37783683e-01\n",
      "  -2.30983170e+00  1.10349636e+00]\n",
      " [-5.83351271e-01  3.49667136e-01  5.02798721e-01 -5.39068543e-01\n",
      "   3.91420768e-01 -8.47188893e-01  4.64848651e-01 -3.97840806e-01\n",
      "   4.93927034e-01 -1.05426685e-02  1.39035524e+00  9.79345975e-03\n",
      "   4.73459761e-01 -7.97933212e-01  1.18708170e-01  8.59348229e-02\n",
      "   1.22186437e+00  3.76731413e-01  1.82725040e+00  5.71874376e-01\n",
      "  -6.02993844e-02 -1.70616939e+00 -1.43711836e+00 -4.16566141e-01\n",
      "   1.26395550e+00 -4.70583423e-01  1.91986103e+00 -1.42586858e+00\n",
      "   7.35936992e-01 -1.38633847e+00 -5.43283451e-01  7.01707410e-01\n",
      "   8.05051746e-01 -1.84460192e-01 -3.73101324e-01 -1.45333420e+00\n",
      "  -3.71006859e-01 -9.31248251e-01 -2.13912448e-01  8.10430404e-01\n",
      "   2.47977427e-01  1.92040018e-01 -2.85659311e-01  2.11094780e-01\n",
      "  -2.93578038e-01  1.37338520e+00  1.40665618e-02  1.02382490e+00\n",
      "   6.29387879e-01 -4.92420940e-01  9.47899097e-01 -1.68429851e+00\n",
      "   2.16224498e-01 -1.09043595e+00 -8.53509757e-01 -5.50916584e-01\n",
      "  -1.54287678e-01 -4.34618364e-01 -1.18351945e+00 -2.16220093e+00\n",
      "  -1.32059295e+00 -7.43647003e-01 -2.66564066e+00  2.07690956e+00\n",
      "  -4.74374169e-01 -2.80947567e-01  1.38152687e+00 -1.35248827e+00\n",
      "  -5.88506218e-01  1.04125078e+00 -4.33441141e-01 -7.16737519e-01\n",
      "   6.40818978e-02  9.67663146e-01 -1.19395836e+00 -1.85979306e+00\n",
      "  -5.37313196e-01  6.37978382e-02  4.51746836e-01 -1.26790028e-01\n",
      "   2.95544249e-01  7.78021644e-01 -1.03789840e-01  4.29126819e-01\n",
      "  -8.15045222e-01 -1.45929886e+00 -1.17334639e+00  5.30715399e-01\n",
      "  -1.70774586e+00 -6.50551111e-01]\n",
      " [ 1.10956971e-01  5.88443255e-01 -8.75768300e-01 -2.51943331e-01\n",
      "   1.05469888e+00  5.34353859e-02 -4.02164166e-01 -4.88339299e-01\n",
      "   1.17587341e-01 -5.26390889e-01  1.92130804e-01 -7.27718063e-01\n",
      "  -2.82729772e-01 -5.75708574e-01 -1.79260863e-02  1.59425101e+00\n",
      "  -3.18836728e-01 -5.35099451e-01  8.82442016e-01 -1.81064670e+00\n",
      "   4.48460822e-01  1.88354243e+00  2.40383736e+00 -2.36049878e+00\n",
      "   3.44257874e-01 -1.26939217e+00  1.74528694e-01 -1.10273971e+00\n",
      "   4.41459294e-01  3.58464242e-01  4.30067454e-01  1.58094353e+00\n",
      "  -8.17814372e-01  1.82025501e-01 -8.38350341e-01  3.15454574e-02\n",
      "  -7.46837273e-01 -8.21320716e-01  1.52914035e-01  3.66661457e-01\n",
      "  -2.18691522e-01 -2.54560516e-02  5.93519807e-01 -1.51200973e+00\n",
      "  -7.30835174e-01  1.30614555e+00 -2.10289233e-01 -3.19962527e-01\n",
      "  -6.72746952e-01  1.68038807e+00  3.89737410e-01  8.43124907e-02\n",
      "  -1.24743881e+00 -4.73965070e-02 -6.65148168e-01 -2.61538884e-01\n",
      "   1.26154123e+00 -5.63810264e-01  9.14892510e-01 -1.32952555e+00\n",
      "  -9.34423425e-01  9.76853916e-01  4.51745370e-01 -9.52339373e-01\n",
      "   4.08821417e-01  5.13044698e-01  1.34165593e+00  8.74712918e-01\n",
      "   3.22372163e-01  8.17819234e-01 -3.68300497e-01 -1.10431352e+00\n",
      "  -2.25182515e-02  3.87260194e-01 -2.29328766e-01 -1.04080359e+00\n",
      "   1.60606803e-01 -1.56570779e+00  8.38931275e-01  5.77847694e-01\n",
      "   3.17410357e-01 -3.24207905e-01  1.00712285e+00 -4.62945186e-01\n",
      "   8.35845633e-01  1.24106131e+00  1.67008810e+00  5.62435161e-01\n",
      "   1.65687220e+00  3.30783721e-01]\n",
      " [ 1.17440987e+00  8.46990331e-01  2.13263305e-01 -3.35138325e-02\n",
      "  -5.66207167e-02  6.53677159e-01  1.89880625e-01  1.41808529e+00\n",
      "   1.56680638e+00  2.05336097e-02 -1.09886398e+00 -6.92142843e-01\n",
      "   2.30001057e-01  2.92685240e-01  1.74861247e-01 -2.19727784e+00\n",
      "  -3.24543200e-01 -1.87923069e-01  1.19584887e+00  2.34381100e+00\n",
      "  -6.61532258e-01  4.79502296e-01  3.06454868e+00  4.73611336e-01\n",
      "  -2.63518899e+00 -7.15238627e-01  2.15983983e-02  1.56111163e+00\n",
      "  -4.69881293e-01 -1.82015037e-01 -9.20272394e-02 -3.24914160e-01\n",
      "   1.43810887e+00  4.27762281e-01  6.93807265e-01  1.51366259e+00\n",
      "  -1.70524464e-02  9.24767461e-01  1.09491623e+00 -1.02830457e+00\n",
      "  -2.41605505e+00  5.37002734e-01  2.43684652e-01  4.91577227e-01\n",
      "   4.12435695e-01 -1.09760728e-01 -2.16437903e-01  9.64681260e-02\n",
      "  -1.58753892e+00 -4.80971964e-01 -1.13859618e+00  6.14650164e-01\n",
      "  -1.19746237e+00 -1.75209167e+00  3.89056555e-01 -2.77220941e-01\n",
      "   7.96300298e-01  8.87881934e-01 -5.01707852e-01 -1.02823622e+00\n",
      "  -1.67896166e+00 -1.29612285e-01  1.29018790e-01 -2.57456915e-01\n",
      "  -1.13037216e+00 -1.11714159e+00  1.94046105e-01  5.01091269e-01\n",
      "  -1.24558240e+00 -1.42911523e+00  3.00828443e-02  7.01999766e-01\n",
      "  -9.53108930e-01 -9.95164486e-01  1.40418806e+00  7.08870048e-02\n",
      "  -1.03878730e+00 -2.58919986e+00 -1.04864171e+00 -4.08853413e-01\n",
      "   1.49869058e-01 -2.88355459e+00  3.98030818e-01  1.31299765e+00\n",
      "  -5.10579192e-01 -1.91075142e-01  3.46885022e-01  1.25073659e+00\n",
      "   1.79709703e+00 -2.12640552e-01]\n",
      " [-7.55784961e-01  2.27407188e+00  1.16423187e-01 -5.07819895e-01\n",
      "   1.53621162e+00 -1.69578837e+00 -6.22276755e-02 -7.12222554e-01\n",
      "  -1.15984529e+00  3.39253408e-01  2.25489790e+00 -2.18245884e-01\n",
      "   1.28018243e+00  8.50582188e-01  6.08037713e-01 -3.68936915e-01\n",
      "  -5.02823961e-01  7.15613243e-01 -3.85621469e-01  7.00627546e-01\n",
      "   4.07573354e-01 -4.03491457e-01  9.76421332e-01 -1.22252741e+00\n",
      "   5.70283790e-01  8.55549238e-01  1.32536185e+00 -2.78202128e+00\n",
      "   2.27018116e-02 -2.36119225e-01 -1.64848373e+00  1.04951170e-01\n",
      "  -1.45678968e+00 -1.37784631e+00 -7.19968352e-01  1.88163896e+00\n",
      "  -5.60852958e-01 -8.39989197e-01 -9.95171454e-01  1.77295071e+00\n",
      "  -3.49077787e-01 -1.62606924e+00 -8.04895685e-01 -9.41482832e-01\n",
      "   1.24087685e+00  1.03544688e+00  1.71822552e-01  1.06233638e+00\n",
      "  -1.06126214e+00 -8.46617291e-01  4.30816651e-01 -1.26001394e-01\n",
      "  -2.19068793e+00 -4.00189472e-01 -4.23600837e-01  1.60055250e+00\n",
      "   1.28830287e+00 -6.51005896e-02  7.43186719e-02  7.62853042e-01\n",
      "  -8.71608289e-01  3.00128131e-01  8.92765045e-01 -3.17937222e-01\n",
      "  -1.44160862e+00 -8.62471428e-02 -1.08880072e+00  1.65285404e+00\n",
      "  -2.89090902e-02  6.62064411e-01 -1.51350662e+00 -2.89506231e+00\n",
      "   4.84362101e-01 -3.08994607e-02 -1.08807553e-02  1.08240955e+00\n",
      "  -6.89613916e-01  2.13478577e-01 -1.09530219e+00  1.04375440e+00\n",
      "   5.59834221e-01  6.70849682e-01  9.41862703e-01 -7.97276094e-01\n",
      "   6.46020394e-01  6.89439516e-01 -5.32453292e-01 -1.65492622e+00\n",
      "  -3.11744833e-01  7.55307423e-01]\n",
      " [ 2.74213904e-01 -1.52361731e+00  2.70895324e-01  1.34057805e+00\n",
      "  -7.45432532e-01  1.95883632e+00 -2.73886167e-01 -7.63154041e-01\n",
      "  -6.15513740e-01 -5.03020903e-01 -9.31086297e-01  1.20306823e+00\n",
      "   2.09015489e+00  8.72989035e-01 -2.32541434e-01  3.48961072e-01\n",
      "   4.73566646e-01 -7.31620851e-02  3.61048862e-01  6.69876556e-01\n",
      "  -7.77627035e-01 -4.58142529e-01  2.32577490e+00  5.89264529e-01\n",
      "  -1.37456875e+00 -6.47441842e-01  4.51389129e-01 -2.73687961e-01\n",
      "  -1.46952127e+00 -6.54755462e-01  4.91421876e-01 -2.61258437e-01\n",
      "  -1.45161238e+00  8.16558947e-01  8.63666011e-01  2.51598920e-01\n",
      "   9.25653415e-01 -1.01823916e+00 -1.44447027e+00  1.40208688e+00\n",
      "  -1.19010489e+00 -1.98067763e+00  5.20726053e-01 -1.04619877e+00\n",
      "   1.91600113e-01  4.74476358e-01 -1.55070467e+00 -9.03806423e-02\n",
      "  -1.88735785e+00  6.54421989e-01  2.87568423e-02 -9.35514555e-01\n",
      "   9.48332372e-01  2.04360602e+00  5.65201051e-02  2.03684639e+00\n",
      "  -8.82127746e-01 -3.61082215e-01 -8.53859405e-01  1.80734862e+00\n",
      "  -3.19070055e-01 -7.66952962e-01  4.28484735e-01  5.24389231e-01\n",
      "   4.71643145e-01 -1.08734838e-01  4.54909451e-01 -1.35892887e+00\n",
      "   6.41838322e-01 -1.06399431e+00 -6.34525759e-01 -7.60474993e-01\n",
      "   2.97094182e-01 -3.78524673e-01  2.01043381e-01  4.41091708e-01\n",
      "  -6.48453648e-01 -7.01144015e-03  2.33558595e-01 -5.31322865e-01\n",
      "  -7.49661437e-01 -8.26826677e-01 -1.50691242e+00  9.92013866e-02\n",
      "  -9.19322941e-01  1.23676194e-01  1.19835126e+00 -1.09164490e+00\n",
      "   1.17261287e+00  7.07160883e-01]\n",
      " [-1.29771923e+00 -1.31929070e+00 -1.09294450e+00 -2.87825955e-01\n",
      "  -1.27432604e-01 -3.22700910e-01  1.54315273e-01 -1.62877702e-01\n",
      "  -3.28685412e-01 -1.77597190e-01 -5.27927325e-01 -6.60034055e-01\n",
      "   6.32375651e-01  3.20731845e-01 -3.28885726e+00  3.88713279e-01\n",
      "   8.55670505e-01  1.65445879e+00  7.47362714e-01 -8.30605213e-01\n",
      "   4.99411516e-01  2.74895213e-01 -6.49651859e-01 -3.32235183e-01\n",
      "   1.34037901e-01  7.83841092e-01 -6.85917011e-01 -8.00262325e-01\n",
      "   1.47532013e+00  2.47788538e-01 -1.37740175e+00 -3.30195702e-02\n",
      "  -3.55763196e-01  1.33184526e+00  7.33666971e-01  3.19761034e-01\n",
      "  -5.00095214e-01 -1.58574477e+00  4.25457562e-02  1.04316620e+00\n",
      "  -8.09611837e-01 -3.43581552e-01 -2.59582799e+00  6.77640547e-01\n",
      "  -3.64150491e-01  1.03653046e+00  7.42250171e-01 -4.45397172e-01\n",
      "  -7.64184224e-01  1.32947677e+00 -3.15403924e-01 -1.39538710e+00\n",
      "  -7.11651962e-01  4.17311822e-01  6.14716654e-01 -3.56806188e+00\n",
      "   2.13073085e-01  6.97438202e-01  1.05087313e+00  2.01522925e+00\n",
      "   2.12461154e+00  2.10828782e+00 -9.24021344e-01  5.91603496e-01\n",
      "   5.36377252e-01 -4.42120053e-02  6.17362276e-01 -1.55403239e-01\n",
      "  -1.68896272e+00 -6.50420971e-01  8.71489701e-01 -4.01183414e-01\n",
      "   1.44895966e-01  6.09979853e-01  5.06525770e-01 -4.63773052e-01\n",
      "  -1.39839224e+00  1.23364721e+00 -3.55197926e-01 -6.24045809e-01\n",
      "  -1.04574442e+00 -4.89631805e-02  5.29265036e-01  1.51183956e+00\n",
      "  -1.06983936e+00 -7.19849219e-01  8.07645015e-01 -1.04241165e+00\n",
      "   1.19589766e+00 -2.67112292e-01]\n",
      " [ 2.37899630e+00  1.25950073e+00  7.80677414e-01  2.77137156e-01\n",
      "   1.45106034e-01  1.48065953e+00 -2.01218456e+00  8.05933960e-01\n",
      "  -8.67722792e-01 -1.41058687e+00 -1.74815296e+00  1.60500509e+00\n",
      "  -6.71199337e-01  5.31125232e-01  1.11960373e+00  5.89781885e-01\n",
      "  -8.19036176e-02  1.75786351e+00  6.84216522e-01  4.74112707e-01\n",
      "  -2.12570574e-01 -1.51056914e-01 -5.29836601e-01  5.30651877e-01\n",
      "   1.39652289e+00 -9.58712690e-02 -1.68512281e+00 -3.81809912e-01\n",
      "   5.24748104e-01 -6.86299399e-01  1.50077071e-01  2.14234876e+00\n",
      "   7.01974306e-01  2.12007725e+00  7.74957983e-01 -2.24610863e+00\n",
      "  -4.20481273e-01  1.18131254e+00  2.18539915e-01 -5.02292583e-01\n",
      "  -9.72391243e-01  9.57320548e-01 -3.25734815e-01  6.03630938e-01\n",
      "   1.21425995e+00  2.17744985e-01  3.24098211e-01 -7.26812396e-01\n",
      "   7.04981976e-01  1.09620128e-01 -1.78773244e+00  7.80034063e-01\n",
      "  -4.50342099e-01 -1.63225962e+00 -7.43081479e-01  5.07831337e-02\n",
      "  -4.81972411e-01  7.32902495e-01 -1.41043735e+00  8.19034273e-01\n",
      "   1.14537717e-01  4.48178584e-01 -1.67341871e-01 -1.06164394e+00\n",
      "  -1.02130371e+00 -1.14753016e+00 -2.03846437e-01  1.18392889e+00\n",
      "  -9.82062487e-01 -9.38632242e-01  1.50806316e+00  4.86657639e-01\n",
      "  -5.13510595e-01 -4.43361391e-01 -2.93972329e+00  3.16912825e-01\n",
      "   3.55061987e-02  1.69824513e-01  1.60730916e+00 -1.36729259e+00\n",
      "   1.20787542e+00  7.23548634e-01 -2.58905101e+00 -8.36285416e-02\n",
      "   2.44900846e-01  6.44242319e-02  2.33622396e-01 -3.91307256e-01\n",
      "  -1.10646561e-01 -1.87388835e+00]\n",
      " [ 1.69498890e+00 -1.34784626e+00 -8.41840614e-01 -2.07270388e-01\n",
      "  -4.72496800e-01 -6.02454184e-01 -5.44592921e-01 -1.27448068e+00\n",
      "   1.60949603e+00 -8.29014119e-02 -1.50033233e+00  1.14589506e-01\n",
      "  -8.52890314e-01  1.98435653e-01 -1.38804433e-01  4.53216004e-01\n",
      "  -3.98573914e-01 -4.25945929e-01  6.80663798e-01 -6.04461751e-01\n",
      "   4.37309418e-02  4.83492858e-01 -2.92614782e-01 -1.26827280e+00\n",
      "   2.90456108e-02  1.34811845e+00 -6.04467133e-01 -9.02137547e-01\n",
      "  -4.47388761e-01 -2.20811273e-01 -1.40231253e+00 -3.86014503e-01\n",
      "   5.91138207e-01  1.05413266e+00 -3.40578754e-01 -1.33829034e+00\n",
      "  -1.17041843e+00  2.06717156e+00 -1.97503095e-01 -1.58583244e-01\n",
      "   1.53779859e-01 -1.84263168e+00  1.11386552e+00 -2.75355665e-01\n",
      "   9.09992712e-01  1.63746834e+00  1.75996942e+00 -9.19957874e-01\n",
      "   1.38578337e+00  6.90338689e-01  7.35970395e-01  1.55663161e-02\n",
      "   2.96900429e-01 -2.19462426e-02  5.27850061e-01  3.08601202e-01\n",
      "   4.52731682e-02  3.91307118e-01 -1.50198604e+00  5.79988300e-01\n",
      "   1.12264506e+00 -8.69628877e-01 -1.47496399e+00  3.59253661e-02\n",
      "   1.55855504e+00  4.25790799e-01 -1.57035069e+00  9.43391107e-01\n",
      "   3.68981417e-01  6.61690139e-01  1.36303534e+00 -5.58798896e-01\n",
      "   6.72362655e-01  8.12827270e-02  1.87340327e-01 -2.28976557e-01\n",
      "   3.47915304e-01  6.97028099e-01  1.31015096e+00 -7.74546491e-02\n",
      "  -2.19811500e+00  1.80956130e-01  8.86573155e-01  4.13207160e-01\n",
      "  -8.59043279e-01  1.49918538e+00  1.60567440e-01 -1.30850170e+00\n",
      "  -1.23246303e-01  5.22971241e-01]\n",
      " [-3.33773584e-01 -1.80187012e+00  7.71891455e-02 -7.00324962e-01\n",
      "  -1.30482680e+00 -4.54968817e-01 -1.14237984e+00  5.42407128e-01\n",
      "  -1.23484502e+00 -1.43939073e-01 -1.56153398e+00 -6.79231136e-01\n",
      "   9.72350690e-01  1.53681736e+00  1.45807274e+00 -4.72352737e-01\n",
      "  -1.16626118e+00  8.11754939e-01 -2.48820708e-01 -1.03078170e+00\n",
      "   2.10804454e+00  3.03150277e-01  9.01238950e-01  6.53986123e-01\n",
      "   2.31756196e-01  1.03286747e+00  1.67565125e+00  2.01883494e-01\n",
      "   6.61510289e-01  2.08037832e+00 -6.63588220e-01 -3.91580261e-01\n",
      "   3.85940792e-01 -5.13481017e-01 -3.86074182e-01 -2.55889340e+00\n",
      "  -1.87306178e-01 -2.52855866e+00 -1.37747317e+00  5.04525514e-02\n",
      "  -9.87885245e-01 -3.29178695e-01 -9.75791331e-01  5.26573724e-01\n",
      "   3.82952755e-01  1.49154756e+00  3.05031325e-01 -1.74851130e+00\n",
      "   1.40040178e-01  7.62010761e-01  8.51200919e-01 -2.89436941e-01\n",
      "   1.96679568e-01 -1.11918847e+00  8.54108210e-01 -2.89025831e-01\n",
      "   1.41232502e+00  1.12381901e-01 -1.15958594e+00  1.38620381e+00\n",
      "   2.20258515e+00 -7.41683225e-01 -1.95906322e+00 -1.42134689e+00\n",
      "  -1.99147333e-01 -2.47404150e+00  9.24680129e-01 -5.32935647e-01\n",
      "   1.71681091e-01 -5.05330121e-01 -4.04497339e-02  1.97225359e-02\n",
      "   7.08650755e-01 -7.62295032e-02 -2.93354868e+00 -4.06075787e-01\n",
      "   1.59595906e+00 -1.82932578e-01 -1.58561627e+00  1.00091054e+00\n",
      "   1.54320280e+00 -3.36381558e-01  5.63304135e-01 -3.24445027e-01\n",
      "  -2.51570009e-01  2.36723738e-01  3.99519114e-01 -6.91974056e-01\n",
      "   7.70692599e-02  8.52369874e-01]\n",
      " [-7.87829995e-01  9.86928862e-01  5.46208542e-01 -1.11791255e+00\n",
      "  -4.55337587e-01  7.58978841e-02 -4.81248105e-03  7.39944437e-01\n",
      "   1.48572124e+00  2.00719230e-01 -1.98196754e-01  5.19553919e-01\n",
      "  -3.35004388e-01 -9.75760703e-01  1.35531147e-01  1.24291791e+00\n",
      "   1.87703441e+00  5.48493241e-01  1.63291717e-01  3.46433195e-01\n",
      "  -7.14846470e-01  1.00585615e+00 -2.54933639e-01 -6.57339062e-01\n",
      "   7.89453821e-01 -4.67229788e-01 -7.81385925e-01  1.36442771e+00\n",
      "  -5.25214303e-01  6.02499877e-02  1.38577005e+00  4.24117065e-01\n",
      "   1.09760683e-01 -7.96191019e-01 -1.86294559e+00  7.89156420e-01\n",
      "  -8.59395148e-01  6.42088669e-01 -7.18080130e-01 -1.02572977e+00\n",
      "   2.73108353e-02 -1.32455904e+00 -7.26079134e-01  1.16540049e+00\n",
      "   2.23688987e-01  1.30802451e+00  9.85571188e-01  1.39190195e+00\n",
      "   4.25702511e-01 -1.36660580e-01  7.37474347e-01  1.33649070e+00\n",
      "  -2.55501122e-01  1.73163129e+00 -4.92387962e-01  9.92153829e-02\n",
      "   8.00852844e-01  1.73456941e+00 -1.55771698e+00 -3.46442446e-01\n",
      "  -1.21963128e+00  1.53852302e+00  1.50195977e-01  6.32992304e-02\n",
      "   8.09925605e-01  3.75984198e-01  3.32935537e-02  2.61356915e-01\n",
      "  -1.17046922e+00  1.68808607e+00 -9.30995176e-01  8.62033808e-01\n",
      "   4.93590831e-01 -1.49583629e-01  5.22074576e-01 -1.88122455e+00\n",
      "  -1.56482947e+00  1.07623956e+00 -3.44472940e-01  3.21428620e-01\n",
      "   1.16242624e+00  6.19743276e-01  7.97775859e-01 -1.78067332e-01\n",
      "   4.01268336e-02  2.29478323e+00 -5.19903284e-01  6.98974144e-01\n",
      "   3.64691134e-01  1.38871307e-01]\n",
      " [ 2.20439016e+00 -7.99734677e-01  2.95666895e-01  3.45254971e-01\n",
      "   8.87040193e-01 -2.45442555e-01 -1.09293518e+00 -1.17512906e+00\n",
      "  -5.50413355e-01 -1.08885209e-01 -3.76111993e-01 -2.26687633e+00\n",
      "  -5.11835951e-01  1.17136538e+00  6.71075998e-01  1.50897896e+00\n",
      "   9.13355121e-01  1.72602088e-01  1.43056030e-02  1.58500334e+00\n",
      "   5.95504867e-01  2.88202042e-01  6.27357217e-01  2.48905652e-01\n",
      "  -1.80688390e+00  7.01730786e-01  1.40074810e+00  5.94302595e-01\n",
      "   5.78193053e-01  8.10175242e-01 -1.38040961e+00 -1.21971383e+00\n",
      "  -1.14403952e-01  9.92258790e-01 -1.57090971e+00  8.01393341e-01\n",
      "  -1.28013527e+00 -3.21124941e-01  4.17604302e-01 -2.42519195e-01\n",
      "   1.27730709e+00 -2.68991427e-01 -8.06813997e-01  8.68742076e-01\n",
      "   4.21173361e-01  3.06645555e-01 -1.22943533e+00  1.03843776e+00\n",
      "   2.29846868e-01 -1.43075853e+00  2.18362596e-01 -2.36446004e-01\n",
      "   6.08960994e-01  9.41317146e-01  7.77388115e-01 -4.23073444e-01\n",
      "   1.00879329e-01  3.88706057e-01 -4.54877257e-01 -3.50407852e-01\n",
      "  -1.76426079e+00 -4.54028045e-01 -1.97414095e+00 -1.23471074e+00\n",
      "   1.71759790e-01 -2.10904683e+00  1.75042227e+00 -3.10785645e-01\n",
      "  -4.28698961e-01 -6.00990832e-01  2.40898675e+00  6.63183376e-01\n",
      "   3.77679450e-01  1.44597299e+00  1.45904678e+00 -9.93197391e-03\n",
      "   1.27716893e+00  4.45459173e-01  6.68076624e-01  3.10016349e+00\n",
      "  -3.31302651e-02 -1.35369224e+00  1.46260092e+00 -1.94804743e+00\n",
      "  -5.39978713e-01 -6.39470621e-01  1.24901413e+00 -6.68992380e-01\n",
      "   8.19539785e-01 -4.80034486e-01]\n",
      " [-7.77983157e-01 -2.15825948e+00 -7.80990055e-03 -3.40377083e-01\n",
      "  -6.37624959e-01  1.74606462e+00 -5.18847402e-02  6.39378031e-01\n",
      "   8.85234597e-01 -1.24520011e+00 -1.36639742e+00  1.54708826e-01\n",
      "   9.58722949e-01  1.39668392e+00 -1.54277360e+00  2.77588371e+00\n",
      "  -1.43274186e+00 -5.11179638e-01  3.57489545e-01  8.25690236e-01\n",
      "   5.88429659e-01  9.96312142e-01  1.25478373e+00  8.25341410e-01\n",
      "  -4.19170599e-01 -9.03323360e-01 -2.86980506e-01  2.96696059e-01\n",
      "  -9.10884269e-01  9.01868992e-02 -1.58358017e+00  7.62831118e-02\n",
      "  -2.58978146e+00 -2.10391516e+00  9.32493119e-01 -5.75274304e-02\n",
      "   2.41366943e+00 -4.04626127e-01  4.57951758e-01  1.49412788e-01\n",
      "   1.15895006e+00 -2.49486798e-01 -1.71600434e-03 -2.12482878e-01\n",
      "   1.92075059e+00  1.76993429e+00  4.68577027e-01 -1.68425210e+00\n",
      "  -5.38327142e-01  8.83564528e-01 -8.00827984e-01  9.85555821e-01\n",
      "   8.35363670e-01 -1.57155986e-01 -1.00788897e+00  6.01898200e-02\n",
      "   1.87579174e+00  1.28735161e-01  1.28438446e+00 -2.68888984e-01\n",
      "  -3.54927506e-01  2.21709634e+00 -9.25434802e-01  7.17392322e-01\n",
      "   4.70328470e-01 -4.34291797e-01 -1.59274687e-01 -2.25201289e+00\n",
      "   1.22970389e-01  6.25078018e-01  1.81080957e-02  2.47264699e+00\n",
      "  -1.01527792e+00  4.70436969e-01  8.55059891e-01 -1.93806815e+00\n",
      "  -2.48880488e-01 -5.02747590e-01  1.18964687e+00  2.40248640e+00\n",
      "   1.00284177e+00 -2.25251601e+00  6.00871833e-03 -5.73559155e-01\n",
      "   3.07999595e-01  6.84412676e-01  1.97960559e+00 -7.29725062e-01\n",
      "  -3.72610944e-01  3.47401253e-01]\n",
      " [ 7.16072885e-01 -1.81053794e+00  2.67558789e+00 -2.89865458e-01\n",
      "   2.51931754e-01 -4.29794702e-04 -1.48548160e+00  9.61320916e-02\n",
      "   1.77525951e+00 -2.48940874e-01 -9.83782937e-01  1.29658789e+00\n",
      "   2.41946362e-03  9.71776308e-01  3.48261555e-01  2.74165236e-01\n",
      "   1.69231124e-01  1.18825336e+00  2.19399578e-01  4.79928877e-01\n",
      "  -6.77392565e-01  3.16122860e-01  9.90488814e-01  1.02805548e+00\n",
      "  -1.33148107e+00 -6.18131929e-01 -1.35605127e+00  1.80674630e+00\n",
      "  -1.39274648e+00 -1.00638978e+00 -5.83448133e-01  3.81010920e-01\n",
      "   3.34646646e-01  7.38697579e-01 -1.32914186e+00 -2.09532674e-01\n",
      "  -1.14264272e-01 -1.54520896e-01  8.72106532e-01 -1.60376110e+00\n",
      "   3.85164880e-02  3.57992019e-01  1.81962615e-01  1.90248773e+00\n",
      "   2.03769311e+00  1.18302301e+00  1.80642550e+00 -5.37070576e-02\n",
      "  -1.58950730e+00 -8.15214439e-01  3.87465159e-01  2.21513677e+00\n",
      "  -2.16696900e-02 -1.16198818e+00 -2.82037519e-01  1.64196382e-01\n",
      "   6.11729062e-01 -2.36220438e-01 -1.70322410e-01  5.59891935e-01\n",
      "   1.41210962e+00 -4.44135425e-01  9.13294925e-01  1.25837421e+00\n",
      "  -1.46089199e+00 -3.61857489e-01 -5.43156065e-01 -6.03097542e-02\n",
      "  -1.09314023e+00  1.60591051e-01  7.30543743e-01  7.87849067e-01\n",
      "  -6.35570951e-01 -1.34389964e+00 -1.31572236e+00 -2.37288984e-01\n",
      "  -6.48226594e-01  1.69727262e+00 -6.62819559e-01 -2.04050782e+00\n",
      "  -2.20500781e-01  9.54700553e-01  2.42122804e+00  7.61718638e-02\n",
      "  -1.49837571e+00  1.16406992e+00  4.87790730e-01  9.03739331e-01\n",
      "  -1.66561052e+00 -4.59051227e-01]\n",
      " [ 7.48628641e-01 -3.70038982e-01  1.41952319e+00 -1.56289093e+00\n",
      "  -7.46598961e-01  3.27707788e-01  1.35416737e+00  9.47445213e-01\n",
      "   3.80163316e-01  6.13794045e-01  9.97648078e-01  5.50388182e-01\n",
      "  -2.54409055e+00  1.45746871e+00  1.47860226e+00  4.83428688e-01\n",
      "  -6.59793853e-01 -2.53507878e-01  2.68543778e-02  7.90843909e-01\n",
      "   1.88557568e+00  3.72589986e-01 -2.40014423e-02 -2.50000800e-01\n",
      "  -1.58562212e+00 -1.69063278e+00 -5.86124267e-01  2.07215345e-01\n",
      "  -5.95937372e-01  2.54847618e-01 -3.75511527e-01  1.69825456e-01\n",
      "  -1.01584206e+00 -1.28414939e+00  1.79774643e+00 -1.34594858e+00\n",
      "  -1.73276075e+00  2.01548270e-01  4.28708635e-01  4.52010245e-01\n",
      "   1.66511705e-01 -3.67118224e-01  5.62083419e-01  7.49211727e-01\n",
      "  -1.37974177e+00  1.86584687e+00 -2.51752320e-01  5.28384165e-01\n",
      "   1.42258666e+00 -2.66990487e-01  1.43907249e-01  4.31514030e-01\n",
      "  -2.58028677e-01 -7.16666139e-01 -2.03213237e+00  1.62037811e-01\n",
      "   4.40696106e-01  5.97897053e-01  6.11730339e-01 -4.13498103e-01\n",
      "  -1.14154017e+00 -1.02128119e+00  1.96546612e+00 -6.06448896e-01\n",
      "   5.50355038e-01  2.93167276e-01 -1.62366227e-01 -3.82453220e-01\n",
      "  -5.77152070e-02 -1.68650073e+00 -3.65613505e-01 -2.95773313e+00\n",
      "   1.20190548e+00  2.05867093e-01 -5.29710796e-01  1.56583807e-01\n",
      "   3.63028369e-01  2.17995208e-01 -2.63871567e-01 -4.70083597e-01\n",
      "  -2.38268112e-01  2.59933096e-01 -8.41878086e-01 -5.17369495e-01\n",
      "   2.59525364e-01 -3.23260816e-01  2.43557309e-01  4.72271039e-01\n",
      "   1.72513119e+00 -4.25322964e-01]]\n"
     ]
    }
   ],
   "source": [
    "import sys\n",
    "Sample_array_2 = np.arange(100)\n",
    "np.set_printoptions(threshold=sys.maxsize)\n",
    "print(player2.first_layer_weights)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 5.48061868e-01 -5.83050248e-01 -6.70093106e-01  1.02406384e+00\n",
      "   7.55442763e-01 -1.61725233e-01  7.17694354e-01 -1.30670637e+00\n",
      "  -1.13838248e+00 -1.27632240e+00  1.18303808e+00 -1.10038106e+00\n",
      "  -7.21898846e-01  1.12569564e+00 -5.62474853e-01 -7.53049714e-01\n",
      "  -6.26879301e-01 -1.51085799e+00 -2.96551662e-01  1.29803859e+00\n",
      "   6.41615013e-01  3.47613421e-01  6.58515131e-02  4.38420467e-01\n",
      "   1.37092196e+00  1.20426707e+00 -9.24182685e-01 -8.59012869e-01\n",
      "  -1.25678712e-02 -1.04780892e+00  1.21158024e-01  1.23047311e+00\n",
      "  -1.69932616e+00 -2.02180635e-01  3.79349481e-01  3.55917811e-01\n",
      "   2.14667612e+00 -2.86499371e-01 -1.76824400e+00 -3.08680434e-01]\n",
      " [ 1.28364548e+00  3.62955942e-01 -4.57877228e-01 -1.27049165e+00\n",
      "   4.54742687e-02  4.21733932e-01 -1.92890070e+00 -2.60480300e-01\n",
      "  -1.42145015e+00  5.18123631e-01  7.48340621e-01 -1.14605056e+00\n",
      "  -1.52692211e+00 -6.43206770e-01  8.93183657e-01 -1.26959396e+00\n",
      "  -1.60660941e+00  5.93584391e-01 -1.73159411e-01 -1.23258028e+00\n",
      "  -2.15150345e-01 -6.53636267e-01  1.39639875e+00 -1.16399833e+00\n",
      "  -1.71119698e-01  2.70414520e+00 -7.44794418e-01  6.04843144e-01\n",
      "   8.98400080e-01 -6.78190267e-01 -2.67924903e-01 -4.73040414e-01\n",
      "  -9.13716222e-01 -1.69359636e-01  5.50767024e-01 -1.61138444e+00\n",
      "  -7.10447569e-01  1.90281752e+00 -5.76900068e-01 -1.12405945e+00]\n",
      " [-1.06291065e+00  1.48380218e+00  3.28603847e-02  1.11720143e+00\n",
      "   2.33368819e-02  4.64828143e-01  1.11733660e+00 -2.32121673e-01\n",
      "  -1.16987841e+00  1.93478497e+00  5.54131110e-01  7.13914876e-01\n",
      "  -1.97719718e-01 -3.39041965e-01  3.71438600e-01 -9.25783188e-01\n",
      "   2.18157505e-01  1.18447923e-01 -1.22167379e+00  4.61900075e-01\n",
      "  -1.19195933e+00 -2.57042722e-01  1.39272919e-01  9.03795492e-01\n",
      "   5.72763331e-01  2.67861724e-01  1.55411073e+00  9.61176961e-01\n",
      "   9.65794169e-02 -7.65471448e-01  3.65238169e-01 -1.37650140e-02\n",
      "  -5.72524557e-01 -7.15110459e-01  1.05673450e+00 -1.81342799e+00\n",
      "  -1.20015628e+00 -1.11806366e+00  6.51129478e-01  1.92378884e-01]\n",
      " [ 4.22402156e-01  2.87010752e-01 -1.02918866e+00 -4.62359501e-01\n",
      "   1.74019234e+00 -4.89339366e-01 -6.73464310e-02  8.18311858e-01\n",
      "  -1.61973634e-01  2.38209213e+00 -2.39426995e-01  5.40550199e-01\n",
      "   8.17569683e-02 -9.67234727e-01  1.99531527e+00  8.37489540e-01\n",
      "   9.90045868e-01  8.23787227e-02 -2.29757056e+00 -1.18792258e+00\n",
      "  -3.42529363e-01  3.91056886e-01  7.55582457e-01  2.67468788e-01\n",
      "   1.11300497e+00 -1.58732022e+00 -7.68092854e-01 -9.38831299e-01\n",
      "  -6.45899469e-01 -7.33886431e-01 -1.12705612e+00  2.89328335e-01\n",
      "   1.10697882e+00 -3.03335387e-01 -2.00339793e+00  3.25212145e-03\n",
      "  -6.21078331e-01 -9.54479228e-02 -1.74613480e-01  1.28040540e-01]\n",
      " [-9.76595846e-01  9.19692718e-01 -1.74513523e+00  7.59041423e-01\n",
      "   9.61180756e-01 -4.41465526e-01 -3.82058559e-01  6.10054000e-01\n",
      "  -1.45352299e+00 -1.51479746e+00 -2.80728892e-01 -5.93238496e-02\n",
      "   1.09754089e+00  2.40013529e-01  2.72164197e-01 -1.42660279e+00\n",
      "  -4.20707870e-01 -1.09216814e+00 -1.00537595e+00  1.85738794e+00\n",
      "  -7.20802109e-01 -1.34594166e-01 -3.94890195e-01 -4.56493768e-01\n",
      "  -4.67961334e-01 -9.18364899e-01  1.72848443e+00 -2.25366435e-01\n",
      "  -1.69361862e+00 -1.22462149e+00  3.71246637e-01  9.81853371e-01\n",
      "  -7.32894994e-01 -3.39173271e-01 -9.71892865e-01  2.15959093e+00\n",
      "  -1.83433494e-01  8.54776031e-01 -1.37686877e-02  1.74998854e+00]\n",
      " [-1.13203751e+00  5.60521757e-01  8.85237500e-01  1.07327689e-01\n",
      "   8.49697288e-01  4.52823467e-01  9.65462635e-01 -1.35589932e+00\n",
      "   1.90825877e+00 -1.64399780e+00 -5.69991357e-01  3.73958247e-01\n",
      "  -2.19325635e+00 -1.83025409e+00 -1.50869021e+00  1.49193630e+00\n",
      "  -7.70190965e-01 -1.19309706e+00 -2.65141575e+00 -7.46185548e-01\n",
      "  -1.01178475e-01 -4.93244534e-02  2.47429389e+00 -2.59401968e+00\n",
      "  -1.15985329e+00 -2.94606927e-01 -1.61928143e+00  6.72720860e-01\n",
      "   1.40683327e+00  6.89315291e-01 -1.59484767e+00  9.22675248e-01\n",
      "  -1.64810898e+00  4.31581736e-03  9.76219705e-01 -4.97318886e-01\n",
      "  -2.00061623e+00  1.00048142e+00 -8.52421552e-01 -5.51448498e-01]\n",
      " [ 1.51755669e+00 -1.00758097e+00 -1.58182790e+00  3.32894296e-01\n",
      "   1.03899954e+00  1.72184139e+00 -1.03076674e+00 -2.31067907e-01\n",
      "  -9.67578066e-01 -1.11687801e-01  2.22311845e+00 -4.44514379e-01\n",
      "  -4.39996387e-01  5.90680041e-01  1.22730506e+00  1.14885030e+00\n",
      "   7.28949984e-01 -7.59343031e-01 -1.47477009e-01 -6.70004318e-01\n",
      "  -1.16388798e+00  2.12084741e-01 -9.15461795e-01 -4.02005141e-01\n",
      "   2.56562400e-01 -9.67238856e-01  1.61168421e+00 -1.91330644e-01\n",
      "   1.79290387e-01 -1.12307739e+00  5.23992751e-01  4.49502798e-01\n",
      "   2.77615023e-01  1.75480282e+00 -2.99135054e-01  2.51916227e+00\n",
      "   4.24930635e-01  2.04696652e+00  5.42808705e-01 -1.17266158e+00]\n",
      " [ 5.81028742e-01 -9.67612002e-01  1.47315231e+00  7.96112451e-01\n",
      "  -1.17462718e+00  9.32954434e-01 -7.73734116e-01 -4.68030219e-01\n",
      "  -4.50839911e-03 -6.50231438e-01  7.82639021e-01 -6.66958887e-01\n",
      "  -3.13735589e-01 -7.12953866e-01 -8.72356928e-01  2.04793723e-02\n",
      "  -4.38607952e-01  9.20597839e-01  8.58413445e-01 -3.56287362e+00\n",
      "   1.89532662e-01  3.08376026e-01  1.00323872e-02 -2.21066972e-01\n",
      "  -6.65230777e-01 -2.72126922e+00  5.16691737e-01 -7.56182089e-01\n",
      "  -2.23441193e+00 -6.40213484e-01  9.43217687e-01  1.27986910e+00\n",
      "  -1.08670720e+00  7.12415178e-02 -1.66207711e-01  2.32388026e+00\n",
      "  -4.87743274e-01  3.63456916e-01 -8.42434978e-01  8.19586190e-01]\n",
      " [-9.14295342e-01 -1.01263609e+00  4.60654705e-01 -1.07447187e+00\n",
      "  -7.93403117e-01 -1.77083601e-01 -9.04739068e-01  7.37504751e-01\n",
      "  -2.48509786e-01  1.35949039e-01  3.09725204e-02 -1.24247325e+00\n",
      "  -1.64145134e+00 -7.03748054e-01  7.20357377e-01 -1.68013596e-01\n",
      "   1.16771093e+00 -1.91739906e+00  1.90658311e+00 -1.49718368e-01\n",
      "  -1.57549739e-01  8.41678607e-01  2.64113064e+00 -4.91966896e-01\n",
      "  -1.29802465e-01 -3.86006282e-01  5.57521203e-01  7.03635783e-01\n",
      "   1.15405474e+00  8.83079194e-01  3.07258385e-01 -9.14735579e-02\n",
      "  -3.08393635e-01 -2.42050378e-01  6.09589387e-02  5.84079151e-01\n",
      "   2.30096468e-01 -2.03512649e-01  5.38192903e-01  4.59385951e-02]\n",
      " [ 1.07093421e+00  7.12684445e-01  1.25231402e+00  1.33956428e+00\n",
      "  -3.48622453e-01 -9.08853212e-01 -6.71154691e-01  4.90583566e-01\n",
      "   1.33490411e+00 -2.15640401e-01  1.40587393e+00 -4.58460518e-02\n",
      "  -1.31330193e+00 -1.76361671e+00  4.10736210e-01  7.61605379e-01\n",
      "   3.46732284e-01 -3.19511116e-01 -1.12198554e-01 -8.07136325e-01\n",
      "  -1.31824690e+00  8.99079818e-01 -1.59885866e-01  1.29597714e+00\n",
      "   4.54988968e-01  1.51661833e+00 -5.63428752e-01 -1.92884138e+00\n",
      "   3.53532441e-01  8.71813417e-01  1.60506849e+00 -1.50369858e+00\n",
      "   6.32989419e-01  3.12734914e-01  1.59050352e+00  1.27815013e+00\n",
      "  -4.59190464e-03 -3.74700365e-01  9.91609001e-02 -5.83171282e-01]\n",
      " [-9.96421589e-01 -1.17991351e-02 -7.79875524e-01 -9.60474314e-01\n",
      "   8.11829812e-01 -1.89496516e+00  1.40940409e+00 -1.07241424e+00\n",
      "  -1.03528467e+00 -7.54530334e-01 -5.47339933e-01  2.19251175e-01\n",
      "  -7.71454311e-01  2.30418228e-02  6.22057429e-02 -6.59426979e-01\n",
      "   2.98270608e-01 -2.21246735e+00  1.48540081e+00 -1.11154629e-01\n",
      "  -1.08176048e+00  1.63840794e+00  5.06981897e-01 -3.05956448e-01\n",
      "  -4.33394590e-01  7.23468842e-01  9.58520776e-01  1.02968231e+00\n",
      "  -7.76017118e-01  7.39852912e-01 -6.17858191e-01 -1.28538990e+00\n",
      "  -7.55897957e-01 -9.57698853e-01  4.08714903e-01  6.58244704e-01\n",
      "  -2.98172441e-01 -1.95512662e-01 -5.08229172e-01 -1.69817219e+00]\n",
      " [-7.18097390e-01 -1.78074649e-01  1.10185264e+00 -8.43011963e-01\n",
      "   1.14016224e+00  1.27087982e+00 -5.49374983e-01 -8.27880326e-01\n",
      "   2.46434063e-01  1.29805353e+00  1.15232607e-01 -4.38926867e-01\n",
      "  -1.14596957e+00  2.38189234e+00 -8.29226753e-02  8.34211106e-01\n",
      "   4.75999616e-01 -4.00521771e-01  3.22157557e-01 -3.67199191e-01\n",
      "  -2.02472829e+00  7.82640897e-01 -7.40199797e-01 -9.46245306e-01\n",
      "  -3.97213467e-01 -2.92149758e-01 -9.87583282e-01  1.73272172e+00\n",
      "   1.24010388e+00 -6.32325627e-01  1.12592267e+00  6.71149442e-01\n",
      "  -9.99809613e-01 -4.58654260e-01  1.39795726e+00 -6.06896225e-01\n",
      "   1.26628149e-01 -7.69705073e-01 -7.09587269e-01 -2.57693184e-01]\n",
      " [ 3.32521863e-01  1.33926143e+00 -1.10647632e+00 -1.39966908e+00\n",
      "   9.95903639e-01  4.51145585e-01 -1.15174376e-02  1.93194544e+00\n",
      "  -1.09045585e+00 -9.68464647e-01 -1.20353931e+00 -1.27262566e+00\n",
      "  -5.93862208e-01 -1.88043600e-01  1.08935843e+00  1.81408727e+00\n",
      "  -2.68349318e-01  1.39978499e+00  3.69868826e-02  1.24996869e-02\n",
      "  -1.54377015e-01 -2.04736956e-01 -3.62190321e-01 -1.67043394e-01\n",
      "   3.86028278e-01 -1.43308229e+00  7.92560460e-01  5.19377871e-01\n",
      "   8.69062915e-01  2.62182213e+00  9.24644061e-01  8.81224403e-01\n",
      "  -8.90060505e-01 -1.19322793e+00 -1.28256740e-01 -4.41261009e-01\n",
      "   9.95861556e-01 -2.20596834e+00 -4.76965549e-01  1.05423395e+00]\n",
      " [ 3.96042821e-01  4.35879050e-01 -2.89964598e-01  1.13516983e+00\n",
      "   6.58820279e-01  7.71989518e-01 -4.32589740e-01  2.83235461e-01\n",
      "  -2.20967880e-01  1.10120882e+00  5.70866030e-01 -1.53251613e+00\n",
      "  -3.09012725e-01 -2.18886491e+00 -2.91069115e-01 -4.29097910e-02\n",
      "  -7.54301896e-01 -7.97783571e-01 -6.45916316e-01  1.19344813e+00\n",
      "   3.02346820e-01 -1.86433573e+00 -8.33810161e-02 -1.14748549e+00\n",
      "  -1.63615414e-01 -1.47649578e+00 -1.02413647e+00 -1.60552311e+00\n",
      "  -1.09419967e+00  1.33299708e-01  4.45092621e-01  1.81244624e+00\n",
      "   3.30561743e-01 -5.04036577e-01  1.83166678e-01 -4.08309824e-01\n",
      "  -2.04801744e-01 -6.57500322e-01  1.92794173e+00 -6.11867929e-01]\n",
      " [-4.24014968e-01 -3.93170874e-01 -1.45037517e+00 -1.18707116e+00\n",
      "  -1.45577115e+00 -2.99727121e-01  3.34804830e-01 -8.24435752e-01\n",
      "   3.47658759e-01 -1.07139672e+00 -3.52362346e-01 -4.27631425e-01\n",
      "  -1.22926880e+00 -1.10208395e+00 -3.09215209e-02 -1.56987757e+00\n",
      "   5.25665786e-01 -1.61501072e-01 -1.00979528e+00  6.80031329e-02\n",
      "   2.17700802e+00  8.31490738e-01 -2.65777473e+00 -3.76263962e-01\n",
      "  -1.43493498e+00 -1.83039028e+00 -7.65772837e-01  8.16625356e-01\n",
      "  -2.12325609e+00  5.70001623e-02  1.77801028e-01 -4.57056142e-01\n",
      "   1.80078763e-01  3.36820117e-01  8.86908375e-04 -1.42095890e+00\n",
      "   1.70550177e-01 -1.05907050e+00 -4.11860087e-01  3.71237976e-01]\n",
      " [-2.17620272e-01 -7.80872802e-01  1.28729312e+00 -1.82336864e+00\n",
      "   3.25281711e-01  2.37992144e-01  1.22407221e+00 -5.63049283e-01\n",
      "   2.92818592e-01  2.05846509e-01  1.52095426e+00 -2.42647489e-01\n",
      "   5.80751194e-01  9.20385043e-01 -1.20875306e+00 -4.11339592e-01\n",
      "  -6.26751035e-01 -5.75211836e-01 -1.65789524e+00 -3.77583623e-01\n",
      "   4.78699750e-01 -2.60626314e+00  1.04731836e+00 -4.41134549e-01\n",
      "  -5.37072534e-01  6.10516423e-01 -1.26039898e+00 -8.03289298e-01\n",
      "   5.49363410e-01 -1.54695571e+00  2.34701593e-01  7.13324008e-01\n",
      "   5.87920884e-01 -1.70426770e-02 -1.80417412e+00  2.42506841e-01\n",
      "  -1.24096189e+00  3.47593719e-01 -1.32783225e+00  1.93814439e+00]\n",
      " [ 4.61489159e-01  1.82548934e-01  1.54504803e-01 -1.44913848e-01\n",
      "   7.88197951e-01  6.85191855e-01  1.02882767e+00 -1.09043107e+00\n",
      "   6.96237082e-01  7.97862928e-01 -9.97262724e-01  2.82202666e-01\n",
      "  -2.43184055e+00  2.69509580e-01 -3.14638138e-01 -1.44527385e+00\n",
      "   7.43637601e-02 -8.08563871e-01 -5.50886073e-01  7.71384037e-01\n",
      "   1.45447490e+00  1.09637439e+00 -3.47756334e-01  1.36966952e+00\n",
      "  -2.96146063e-01 -1.66119085e-01 -1.82755178e-01 -2.18723355e+00\n",
      "  -8.75915603e-01  4.09061753e-01  6.42600693e-01  1.03186930e-01\n",
      "   4.65786219e-01  2.14380924e+00 -7.40163632e-02  1.42025165e+00\n",
      "   9.76223532e-01  6.27827851e-02  1.65478956e+00  7.21959096e-01]\n",
      " [ 4.80296319e-01  1.02913148e+00  1.53661626e+00 -2.75372136e+00\n",
      "   4.05223962e-01 -1.52949381e+00  3.25642288e-01 -1.46985699e+00\n",
      "  -2.64042908e-02 -7.27371356e-01 -2.87816506e-01  4.83894444e-01\n",
      "   1.20258110e-01 -1.11426297e+00  2.43189592e-01  8.35144174e-01\n",
      "   4.01582790e-02 -4.12828183e-01 -2.71268231e+00  3.77291856e-01\n",
      "   1.35414123e+00  4.94374702e-03 -8.63085200e-01  1.77676865e-01\n",
      "  -4.86587886e-01 -1.88811704e+00 -5.04356152e-01  1.84796863e+00\n",
      "  -1.11709955e+00  3.07920474e-01  1.08528429e+00 -3.23899862e+00\n",
      "   6.64540345e-01 -5.40033488e-02  3.37430926e-01 -9.41850993e-01\n",
      "  -4.54506173e-01  6.39534467e-01 -1.92610004e+00  5.04560806e-01]\n",
      " [-1.24572264e+00  6.86281149e-01 -5.68819173e-01 -1.73984546e-01\n",
      "   2.01787222e-01 -1.81061596e-02 -4.70591558e-01  6.56592322e-01\n",
      "   2.35923599e+00 -7.76359959e-01  1.43137733e+00  1.55266529e-01\n",
      "  -2.26970595e+00  9.09895303e-02 -2.93725946e-01  2.75853958e+00\n",
      "   2.68562510e-01 -1.16014342e+00  7.94214125e-02  2.40662543e-01\n",
      "  -1.15353689e-02  1.16974578e+00  9.58796121e-02  3.47312811e-01\n",
      "  -1.57164070e+00  2.19935412e-01 -1.47951834e+00 -1.26292950e-01\n",
      "  -2.21945854e+00 -4.50588741e-01 -1.78986710e+00  7.47463143e-01\n",
      "  -7.39192894e-01 -4.10654095e-01 -1.16444522e+00 -2.05928431e-01\n",
      "   1.74704396e+00 -1.87546457e-01 -9.70033677e-01 -4.87434885e-01]\n",
      " [-1.87108718e+00 -8.86015370e-01  2.14475015e-01  1.25130620e+00\n",
      "  -8.40044794e-01  5.90503551e-01 -1.29966408e+00  6.96404242e-01\n",
      "  -6.56224348e-01  6.74743928e-02  5.13952255e-01  6.52843718e-01\n",
      "  -1.83922358e+00 -1.00224337e+00  1.07452449e+00 -2.04685881e+00\n",
      "  -5.04667871e-01 -5.08217860e-01 -8.07741893e-01 -2.35545154e+00\n",
      "   1.38561945e+00  5.97706056e-01  6.01989806e-01 -1.49592744e+00\n",
      "   2.88241895e-01 -7.63515195e-01 -5.44272211e-02 -8.06758034e-01\n",
      "   4.19115155e-01 -1.48199143e+00 -1.28209855e+00 -4.00031763e-01\n",
      "  -1.30657020e+00 -1.64080094e+00 -1.00824277e+00 -1.61302035e+00\n",
      "  -1.10811174e+00 -1.78886796e+00  1.33611832e-01  2.88647041e-01]\n",
      " [ 7.80104941e-01 -1.19304990e+00 -2.88503635e-01 -8.35127067e-01\n",
      "   5.50483770e-01 -2.24580955e+00 -1.21477219e-01 -1.20241006e+00\n",
      "  -4.88435284e-01  6.85153862e-01  7.02976404e-01 -2.03994659e-01\n",
      "  -1.97987004e+00  5.48333400e-01 -6.19975488e-01  1.34468441e+00\n",
      "  -3.10904376e-01  1.11437880e+00  4.49607043e-01  1.73423138e+00\n",
      "  -7.42512279e-01 -9.14981173e-01  2.77682483e-01  2.70187745e-01\n",
      "  -1.78998727e+00  1.45388695e-01 -7.87673731e-01  2.13672055e-01\n",
      "   4.95961757e-01 -3.83525483e-01 -1.25729781e+00  8.83232744e-01\n",
      "  -1.32909085e-01  1.02463962e+00 -3.87455056e-01  1.64047886e+00\n",
      "   4.59374822e-01  7.25656664e-01  2.58471447e-02  1.97215921e-01]\n",
      " [ 3.61577704e-01 -1.13650229e+00  1.33961690e-01  3.28706921e-01\n",
      "   1.48525334e-01  1.94843086e-01 -7.02680677e-01  5.90900639e-01\n",
      "  -1.04919522e+00 -7.39725695e-01 -5.00720361e-01 -3.16319339e-01\n",
      "   1.37997121e+00 -3.76178388e-01 -4.53130997e-01 -9.84551646e-01\n",
      "   1.00050120e+00  5.01453549e-01 -1.03223439e-02 -3.33858024e-01\n",
      "  -7.31299792e-01  2.00979607e+00  2.86514543e-01  1.01186759e+00\n",
      "   4.11482837e-01  2.18090115e-01 -8.07445563e-01  1.61089600e+00\n",
      "   4.34447155e-01  2.10851767e-01 -6.34881006e-01 -7.06006786e-01\n",
      "   1.86486298e+00 -1.45835640e+00  9.80190160e-01  3.41634348e-01\n",
      "   9.64229087e-01 -2.04758954e-01  4.19296916e-01  1.54864173e-01]\n",
      " [-7.65814785e-01 -4.81113899e-01 -2.36853260e+00 -5.99054305e-01\n",
      "   5.53633929e-01 -1.34786860e+00 -4.33956396e-01  4.76411527e-01\n",
      "   5.40324770e-01 -1.19686138e-01 -7.64005344e-01  9.08388004e-01\n",
      "  -3.75266421e-02 -1.07236588e+00 -1.41549365e+00  3.12337167e-01\n",
      "  -1.59949386e+00  2.00430006e+00  5.70358230e-02 -1.93884691e-01\n",
      "  -3.12401530e-01 -1.12456965e+00  1.38289777e+00 -1.97455171e+00\n",
      "   1.40033924e-01  4.35766960e-01  2.26014583e-01 -2.01696306e+00\n",
      "  -9.62031000e-01  4.82352310e-01 -1.02805234e+00  1.61776038e-01\n",
      "  -1.19140930e+00  1.07085797e+00 -3.36665746e-01 -1.58612203e+00\n",
      "   9.97359545e-01 -9.16531900e-01 -1.27560042e-01  8.31683075e-02]\n",
      " [ 8.86963869e-01  1.00790692e+00  1.33945584e+00 -3.65382380e-02\n",
      "  -1.85736702e-01  1.28500047e-01 -3.14057269e-01  1.20382141e+00\n",
      "   8.48157224e-01  3.27730952e-01  9.99796589e-01 -7.48976362e-01\n",
      "   5.53370138e-01 -7.62476097e-01 -6.90805680e-01 -2.60835266e+00\n",
      "  -6.33586112e-01 -1.24878251e+00 -3.95754601e-01 -2.54534950e-01\n",
      "  -7.90762252e-01 -1.83830975e-01  5.47384518e-02 -3.71200872e-01\n",
      "  -1.38032203e+00  1.09786345e-01 -2.59735175e-02 -3.60509130e-01\n",
      "  -5.36979696e-01  2.25848236e+00  6.38312417e-01 -1.23597411e+00\n",
      "   5.49088980e-01 -1.48127546e-01 -1.70401873e+00 -2.01296464e+00\n",
      "  -1.32563415e+00 -6.37350430e-01  1.52767473e+00  4.40195901e+00]\n",
      " [ 1.44519587e+00 -1.29344328e+00  8.26221295e-01  2.50653937e+00\n",
      "   3.98853545e-01 -2.25024744e+00  1.13904973e+00 -3.51780789e-01\n",
      "   3.60815882e-01 -1.40116404e+00 -5.33120931e-02  6.28732366e-01\n",
      "  -1.77395228e-01 -3.45117685e-01 -2.38774682e-02 -1.90513748e+00\n",
      "  -1.18364471e+00 -1.58505178e-01 -8.36258235e-03  4.34835228e-01\n",
      "   4.87322200e-01  1.19253005e+00 -4.41084332e-01  2.15228420e+00\n",
      "  -6.50860766e-01 -2.22750831e-02  9.84497275e-02 -1.01427766e+00\n",
      "   1.16515394e+00 -2.28832394e-01  8.33702557e-01 -9.04175463e-01\n",
      "  -2.35214331e-01  3.26235113e-01 -6.79953650e-01 -5.61196528e-02\n",
      "  -5.46932684e-01 -5.30120598e-02  7.02259654e-01  4.34098094e-01]\n",
      " [ 1.52427188e+00  2.42948179e-01  4.14809287e-01 -5.40627536e-01\n",
      "   4.57613223e-01  3.87680789e-01  1.54489722e-01 -1.28078807e-01\n",
      "   3.37771217e-01 -1.57213700e+00  5.55409270e-01  4.14081253e-01\n",
      "  -1.98644117e-01  4.40043160e-01 -2.20024543e-01  7.43393609e-01\n",
      "   2.08599244e+00  7.40003309e-01  6.81119422e-01  9.57441526e-01\n",
      "  -1.62596433e+00  2.81718401e+00 -4.58864022e-01 -8.48219734e-01\n",
      "   7.15639508e-01  1.53543315e+00  1.56694741e+00 -8.31382697e-01\n",
      "   7.03317367e-01  6.62802684e-01 -2.87132018e-01 -9.29677571e-02\n",
      "  -8.87999431e-02 -1.27259656e+00  1.28124068e+00 -9.43241423e-01\n",
      "   2.49175719e-01 -8.39482588e-01  6.29525032e-03  2.22491469e+00]\n",
      " [-2.19796754e+00  8.12362138e-03 -9.76740914e-01  2.29192915e+00\n",
      "   1.45606529e+00  8.73300975e-02  2.97612068e-02 -6.58793375e-01\n",
      "  -1.13286328e+00 -1.02882259e+00  1.30018198e+00 -2.82181487e-01\n",
      "   7.28344286e-03 -9.27309324e-01 -6.14288617e-01 -1.46559547e+00\n",
      "  -7.21267961e-01 -9.16072237e-01  1.44911296e+00  3.11112385e+00\n",
      "   6.79913327e-01  1.38865392e+00  1.09526414e+00  1.47403945e-02\n",
      "   1.01293694e-01  4.68106183e-02 -3.90011015e-01  1.45916076e+00\n",
      "   3.01097977e-01  1.99130482e+00 -1.29873876e+00 -3.39569365e-01\n",
      "  -9.45593256e-02  2.05727706e-01 -2.75665503e-01  1.04183286e+00\n",
      "   7.58340344e-01  1.05624125e+00 -7.03192267e-02 -1.49774367e+00]\n",
      " [-3.23969042e+00 -1.20780287e-01  1.23415833e+00 -3.37443001e-01\n",
      "  -1.28057286e+00 -1.65430003e+00  1.73605344e-01  1.84863507e-01\n",
      "  -1.31620021e+00 -1.02619932e+00  1.39160198e-01  1.70162807e+00\n",
      "  -1.11340823e+00 -4.27186253e-02 -1.46469285e+00 -5.34005449e-01\n",
      "   3.57704050e-01 -7.36157534e-02  1.00914581e+00 -1.88221718e-01\n",
      "  -1.81173448e+00  4.28878645e-01  1.48206871e+00  2.96333463e-01\n",
      "   4.55572495e-01 -3.55215766e-02 -3.21547785e-01  9.19962087e-01\n",
      "  -7.86133968e-01  1.21556143e+00 -2.54243545e-01  6.69687069e-01\n",
      "   1.65548318e+00 -1.22991396e+00 -2.10035057e-01  1.58673733e+00\n",
      "  -7.87378205e-01 -6.15296816e-01 -5.43388386e-02  2.65061141e-01]\n",
      " [-9.65772846e-03 -1.11850132e+00 -1.22233917e+00 -1.02767016e+00\n",
      "   2.86222461e-03 -5.55465298e-01  1.58637567e-01  3.53598976e-01\n",
      "  -1.10161258e+00 -1.07455674e+00  1.90473075e+00 -1.18015775e+00\n",
      "   6.38494795e-01  1.68699350e+00  9.75969586e-01  5.63204881e-01\n",
      "  -1.35244728e+00  3.63391462e-01  1.05590140e+00  6.40339376e-01\n",
      "   3.40302635e-02 -1.10919300e-01 -8.70113457e-01  4.27029314e-01\n",
      "   1.17763867e-03  1.50273210e+00 -8.48438473e-02  2.03651369e+00\n",
      "  -1.01003969e+00  8.15618814e-01  2.08289989e+00 -1.92789139e-01\n",
      "   1.99647803e+00 -2.08653919e+00 -7.39362252e-01 -1.40862333e+00\n",
      "   7.35719830e-01 -1.56763787e+00 -1.30217879e+00 -4.27659329e-01]\n",
      " [-7.69696874e-01  1.34872952e+00  4.86988155e-01  2.11612036e+00\n",
      "   6.39751315e-01 -8.57031750e-01  3.27928943e-01  4.38283797e-01\n",
      "  -3.98518927e-02 -1.50968623e+00 -1.11715625e+00 -3.76088452e-01\n",
      "  -8.07440395e-01  7.68190220e-02  1.76593659e+00 -8.12655709e-01\n",
      "  -8.93576685e-01 -1.95266556e+00  2.57849753e-02 -1.25323734e+00\n",
      "   8.82158869e-01 -9.82762306e-01  1.15465851e+00 -3.71450860e-01\n",
      "   1.50892537e-01  1.30283585e+00  1.21737505e+00  1.45348101e+00\n",
      "  -2.38304100e+00 -8.51253477e-01  5.79386630e-02  1.23973960e+00\n",
      "   1.40031506e-01  1.01055149e+00  2.27814338e+00  5.77908177e-02\n",
      "  -1.03954167e-01  4.13536913e-01 -9.47525464e-01  2.89134638e-01]\n",
      " [-7.56076896e-01 -1.40659130e-01 -9.03061163e-01 -5.69926671e-01\n",
      "   6.56414991e-01  1.12314424e+00  6.37709259e-01 -8.53350786e-01\n",
      "  -2.75896842e-01 -5.97582225e-01 -1.19039219e-01 -7.54568181e-01\n",
      "  -1.45514091e+00  3.06320719e-01  3.01152812e+00 -1.53746363e+00\n",
      "  -1.95867620e-01 -1.65288123e+00 -1.99074422e-01 -1.35863703e+00\n",
      "  -5.26752712e-01 -7.53997764e-01  6.33224804e-01 -6.02325377e-01\n",
      "   2.56888769e-01  1.12627904e+00 -1.38479673e-01  7.04903030e-02\n",
      "  -8.38857978e-01 -8.75477935e-01  1.94860078e-01  1.35128397e+00\n",
      "  -1.45200924e-01 -5.42334272e-01  1.10518959e+00 -1.51738931e+00\n",
      "  -7.79665074e-01  1.33168218e+00  1.46934163e+00  6.60001415e-01]\n",
      " [ 6.86916760e-01 -3.06503885e-01 -4.03481007e-01  5.53742558e-01\n",
      "  -1.32890838e+00 -2.36921502e+00  1.12539738e+00  1.08333828e+00\n",
      "   2.33362453e+00 -6.05062593e-01 -1.30398911e+00  2.01917146e+00\n",
      "  -7.24010986e-01  7.80712870e-01 -1.19565548e+00  9.40311871e-01\n",
      "  -4.22936876e-01  4.81495470e-01 -9.29600443e-02  2.94126672e-01\n",
      "   1.66131076e-01 -9.61202440e-01  2.61398868e-01 -7.55450722e-01\n",
      "   6.56459256e-02 -7.85640634e-01  1.14942105e+00  7.49645342e-01\n",
      "   4.97458261e-01  2.52856841e+00 -1.26971191e+00  3.36772391e-01\n",
      "  -7.39924748e-01 -7.50716057e-01  3.01455556e-01  7.79619226e-01\n",
      "   5.61590394e-01 -1.17777017e+00  9.06129058e-01 -1.81479637e-01]\n",
      " [-1.35342926e-03  1.59241079e+00  9.44452513e-01 -1.31942583e+00\n",
      "  -6.14466051e-01 -2.42631125e-01 -1.39905936e+00  3.13961063e-01\n",
      "   1.47184206e+00  4.87164957e-02 -5.31778574e-01 -1.25269453e+00\n",
      "  -3.71671133e-01 -2.61454268e-01 -1.53172240e+00 -7.44866585e-01\n",
      "  -3.41274851e-03 -1.00907712e+00 -8.85185832e-01  9.97816414e-01\n",
      "  -4.70930207e-01 -6.43489421e-01  6.33918826e-02 -7.91439814e-01\n",
      "  -9.46937993e-01 -1.11849696e+00 -5.96936295e-01 -1.64184683e+00\n",
      "   1.78246413e+00 -1.93778972e-02 -1.92003154e+00 -1.07696864e+00\n",
      "   6.42653039e-01 -5.26686887e-01  5.46288823e-01 -8.67138870e-02\n",
      "   1.70612016e-02 -1.11712736e+00 -4.33754551e-01  1.18098240e+00]\n",
      " [-7.50438430e-01  7.24143727e-01  1.69584137e-01  1.76148143e+00\n",
      "  -1.38824915e+00  2.36562106e+00 -1.20302642e+00 -3.26163365e-01\n",
      "  -3.49333833e-01  3.77603503e-01  6.42452195e-01  1.23671536e+00\n",
      "  -3.62472806e-02  1.07211000e-01  2.47291919e-02  9.03154720e-01\n",
      "   4.10650402e-01  7.26364333e-01 -1.17669167e-01  1.09243462e+00\n",
      "   2.25481552e-03  7.10871095e-01  8.16675519e-01 -4.70151232e-01\n",
      "   1.36855768e-01  7.91028432e-01  7.90270505e-01 -8.76512128e-01\n",
      "   2.52077348e-01  2.17786417e-01 -1.22370586e+00  3.37343793e-01\n",
      "   1.68961786e-01  4.86015977e-01 -1.62783221e+00 -9.85296550e-01\n",
      "  -4.62812115e-01  1.68676721e+00 -6.75206699e-02  3.64555470e-01]\n",
      " [ 1.34019023e+00  2.05204447e+00 -3.32328186e-01 -7.97347560e-01\n",
      "   2.51391908e-03 -1.03023630e-01 -1.56384710e-01  1.22024136e+00\n",
      "   1.45358343e-01 -1.35488393e+00  1.13683067e+00 -6.47333756e-01\n",
      "   2.17938753e-01  2.27677363e+00  1.58247494e+00 -1.60272778e-01\n",
      "   5.53336749e-01  3.72222336e-01  5.18689426e-01 -1.33816045e+00\n",
      "   1.22744877e+00 -4.36005155e-01 -6.67279075e-01 -3.10652757e-02\n",
      "  -1.91894225e+00  9.09366924e-01 -7.44594154e-01  1.53572215e+00\n",
      "   5.91282955e-01 -6.29359389e-02 -5.76742057e-01 -1.40220150e+00\n",
      "  -1.65986155e-01 -7.86758336e-01  7.29932164e-01 -8.71995045e-02\n",
      "   7.13850977e-01 -2.10624235e-02  1.74845164e+00  2.00618153e+00]\n",
      " [ 4.85588833e-01  1.75532349e-01 -6.30528412e-01 -1.39984045e+00\n",
      "   1.18653831e+00 -1.27334045e+00 -1.23007521e-01  1.27633802e+00\n",
      "  -8.22355269e-01 -4.27877850e-03 -1.33354132e+00 -1.42549698e+00\n",
      "  -6.57449641e-01  1.45842480e+00 -6.38998934e-03 -6.31588066e-02\n",
      "  -2.89285667e-01 -5.94907404e-01  6.38775742e-01 -3.63593641e-01\n",
      "  -7.35774813e-01 -8.63327974e-01  1.91873819e+00 -8.03359138e-01\n",
      "  -5.49767694e-01  4.34976788e-01  6.61632472e-02  1.06812918e+00\n",
      "   7.95852569e-01  1.50696099e-01 -3.33441595e-01 -1.64718397e-01\n",
      "   1.49828788e-01 -2.87989442e-01 -1.45536409e+00  1.31200155e+00\n",
      "   1.69049679e+00  1.26268796e+00  1.64607103e+00  6.83266537e-01]\n",
      " [ 6.40586870e-02  2.97824075e-01 -2.16694960e-01 -8.72255834e-01\n",
      "  -5.37140620e-01 -2.74978519e-01 -8.27807193e-01  8.37092002e-01\n",
      "   7.73628668e-01  2.07099398e+00 -6.02240890e-01  2.86452308e-01\n",
      "   1.10258629e+00  6.72949817e-01 -2.51316768e+00  5.14228172e-01\n",
      "   4.87840633e-01 -1.59960567e-01 -1.40344120e+00 -7.57585430e-02\n",
      "   1.88844878e+00  3.53224346e-01 -1.37438823e+00 -5.18234718e-01\n",
      "  -1.51561584e+00  6.10317541e-01 -7.80430593e-01  1.26012671e+00\n",
      "  -3.25659038e-01  1.25744529e+00 -9.06878715e-01  9.88880034e-01\n",
      "  -7.44416531e-01  2.95162267e-01  3.09210040e-01  1.66542366e+00\n",
      "  -1.58006542e+00  3.58259962e-01  9.05864359e-01 -4.93397569e-01]\n",
      " [ 2.24127366e+00  1.06844684e+00  8.27933266e-01 -1.02151329e+00\n",
      "   1.16730316e-01  8.38523449e-01  5.20432112e-01  4.93955256e-01\n",
      "   1.20909934e+00 -1.31004013e+00  7.01794847e-01  2.29311770e+00\n",
      "   7.25525220e-01 -4.82182707e-01 -7.42290929e-01 -1.15835997e+00\n",
      "   4.93652116e-01  7.17905288e-02  1.39250245e+00 -1.23570984e+00\n",
      "  -4.31093890e-01 -7.12730418e-01 -4.61639265e-01 -2.95763486e-01\n",
      "  -2.01292018e+00 -6.02877575e-01  4.28612924e-01 -9.52499114e-01\n",
      "  -1.37011832e+00  2.45458237e+00  5.87885857e-03 -1.36390509e+00\n",
      "  -2.92094027e-01  2.49009340e+00  1.78538482e+00  7.21983103e-01\n",
      "  -1.07020454e+00  1.10783039e+00  1.77461897e+00  1.25190804e+00]\n",
      " [ 1.26606958e+00  2.16247360e+00  1.09872300e+00  2.68326811e+00\n",
      "  -2.47979181e+00 -1.19168763e+00  1.11405184e+00  1.94924686e+00\n",
      "   3.22245639e-01  2.17215762e+00  2.97502967e-01 -2.92635235e-01\n",
      "   3.55417710e-01 -6.99506172e-01  1.13608900e+00 -3.92275367e-01\n",
      "   6.24582139e-01 -8.91406333e-01 -2.62593232e-01 -1.38153885e-01\n",
      "  -2.33785823e-01 -2.11365870e+00 -6.17091673e-01 -7.36076550e-01\n",
      "   4.75807356e-01 -1.88300252e-01 -2.02733537e+00  4.65539608e-02\n",
      "  -1.99650517e+00  3.04959376e-01  6.60960163e-02 -1.99372582e+00\n",
      "  -7.28496613e-01 -9.21446748e-02  4.08361814e-01  1.38421603e+00\n",
      "   4.25631827e-02  4.91963958e-01 -7.17310211e-01 -2.77995238e-01]\n",
      " [-1.72326010e+00  3.14827710e-01  6.41710930e-01 -2.40367501e-01\n",
      "  -5.34412015e-01  2.38625732e-01 -7.58415220e-01  4.45024371e-01\n",
      "   2.96034724e+00  1.31435482e+00 -2.48044788e-01 -1.44671267e+00\n",
      "   2.92206433e-01  7.85884701e-01 -9.85907482e-01 -4.59619033e-01\n",
      "  -1.11512306e+00  1.49447368e-01  1.78762050e+00  1.40490296e+00\n",
      "   3.70736696e-01  1.79087516e+00 -2.24659773e-02  3.17959274e-01\n",
      "  -1.58245150e+00 -1.17136108e+00 -2.04082687e+00 -1.11811019e+00\n",
      "   9.43996171e-01  6.29455864e-01  7.75967548e-01 -1.67252084e+00\n",
      "  -2.43587191e-01 -3.53519148e-02 -2.84282985e-01  2.06590330e-01\n",
      "  -1.49579524e-01  1.40946392e+00  2.16459900e-01 -2.64691345e-01]\n",
      " [ 3.54279274e-01  2.77867003e+00 -1.04016601e+00 -7.03101154e-02\n",
      "   5.31408400e-01 -2.03572386e-01 -1.76443913e+00 -5.86113021e-02\n",
      "  -8.00351989e-01  7.46540911e-01 -9.21782205e-01  9.11197510e-01\n",
      "   1.14403504e+00 -1.49537176e+00 -1.26571961e+00 -8.85892350e-01\n",
      "  -4.82227620e-01 -1.86603476e+00 -2.20347410e+00  1.23582482e+00\n",
      "   1.57381368e+00  3.93794140e-01 -1.25597462e+00  8.36964814e-01\n",
      "   1.18823315e+00 -6.46979592e-01 -1.08557671e+00  1.39991180e-02\n",
      "   8.47392329e-01 -2.47974389e+00 -1.32822817e+00 -3.53727873e-01\n",
      "   1.46303686e-01 -1.41375442e+00  2.33263919e-01 -1.13418564e+00\n",
      "  -3.75961542e-01 -5.39826446e-01 -3.93450907e-01  3.40604989e-01]\n",
      " [-9.40960661e-02  8.14496020e-01 -4.07920605e-01  9.14640893e-01\n",
      "  -8.36075394e-01  1.34624482e-01 -7.38256078e-02  4.79394450e-01\n",
      "   2.64503984e-01 -1.93654371e+00  8.92965258e-01  9.59054855e-01\n",
      "  -8.00225538e-01  9.68827142e-01 -2.12082871e-02 -7.14926512e-01\n",
      "  -5.53456344e-01 -2.80200039e-01 -3.40616864e-01 -6.04299629e-01\n",
      "  -2.35881299e-01 -8.68970657e-01  9.53588678e-01  1.38509053e+00\n",
      "   8.27596107e-01  1.69833420e+00 -1.06867060e+00 -3.88693173e-02\n",
      "  -3.69132227e-01  8.58590610e-01  3.83064520e-01  1.30573573e+00\n",
      "   1.33026147e-02 -2.08910928e+00  1.10717961e+00  1.35692002e+00\n",
      "   5.99046149e-01  8.19665926e-02  7.01164974e-01 -6.95497647e-01]\n",
      " [-6.68173360e-01  1.05962132e+00  1.26443324e-01  9.80583034e-01\n",
      "   9.44369303e-01 -1.29058168e+00 -2.00965852e-01  2.85099390e+00\n",
      "   1.62951064e+00  1.89089178e+00 -1.55573033e+00 -2.81124510e-01\n",
      "  -4.91735284e-01  8.71065439e-01  5.81140808e-01 -7.88801058e-02\n",
      "  -1.31246248e-01 -1.11494052e+00 -1.02155057e+00 -6.61087356e-01\n",
      "  -1.63191266e+00  2.80195241e+00  1.26877780e-01  3.41336405e-01\n",
      "  -6.49798357e-01  8.65923461e-02  2.73697390e-01  3.63590566e-01\n",
      "   3.43958678e-01  1.19771604e+00 -1.53276654e-01 -7.79224903e-01\n",
      "   2.58241683e-01  1.17266442e+00 -1.65180387e-01  1.73683554e+00\n",
      "   4.92139741e-01 -2.88608334e-01  4.64917228e-01  1.78361014e+00]\n",
      " [ 1.32521831e+00  9.09053888e-01 -2.13096695e-01  5.33583778e-01\n",
      "  -1.30816209e+00  8.61049781e-01 -9.35068131e-01 -9.35137098e-01\n",
      "   1.56384666e+00  1.40457238e+00  7.29441485e-01  9.06015506e-01\n",
      "   1.06929740e+00  8.78431576e-01 -7.62207379e-01  6.77363639e-01\n",
      "   1.34698466e+00  1.45283975e+00  1.65758391e-01  4.65130624e-01\n",
      "  -2.72814757e-01 -5.20046595e-01  2.49644948e-01  7.48746715e-01\n",
      "   1.02877737e+00 -2.17308141e+00  1.36377444e+00  1.25438743e+00\n",
      "  -1.71395934e+00  1.38886662e+00  1.08435139e+00  6.02799725e-01\n",
      "  -7.78287094e-01 -5.82088753e-01  1.33220943e+00  7.76345524e-01\n",
      "  -8.57064388e-01 -1.42787944e-01 -1.46458966e+00  2.14748864e+00]\n",
      " [ 6.37936904e-01  5.17789517e-03 -1.92953340e+00  8.94178953e-01\n",
      "  -1.56199210e+00  7.49749392e-02 -2.73351511e-01  3.70193848e-01\n",
      "  -1.06294080e-01  8.12745187e-01  7.51292641e-01 -3.01932947e-01\n",
      "  -2.29372250e-01  1.04600603e-01 -1.25113783e+00 -1.88730724e+00\n",
      "  -3.16744288e-01  6.68755679e-01  9.42210809e-01 -1.12456944e+00\n",
      "  -5.53596202e-01  7.99745676e-01  1.50585303e+00 -6.26834037e-01\n",
      "   9.86347412e-01  5.35978761e-01  5.23811694e-01  1.84031796e+00\n",
      "  -4.13516708e-01 -2.37735957e+00  1.39759304e+00 -1.36619195e-01\n",
      "  -4.78814845e-01  6.73013042e-01  2.01289684e-01  2.14755924e-01\n",
      "   8.13088512e-01 -1.31563234e+00 -4.84683720e-01  1.08102366e+00]\n",
      " [-3.24516527e-01  2.78462499e-01 -2.83988675e-02 -4.26073175e-02\n",
      "  -1.55139074e-01 -4.59603303e-01 -1.54513151e+00 -1.19259842e+00\n",
      "   5.08471368e-01  3.62701657e-02  1.41410195e+00 -2.59297375e-01\n",
      "   1.57451713e-01  6.85582970e-01  2.15291043e+00  1.99837365e-01\n",
      "   1.93616308e-01  8.90676496e-01  1.05946124e+00 -5.09728645e-01\n",
      "  -1.48659323e-01 -5.09083242e-02  1.25780049e+00 -2.93433380e-01\n",
      "   2.65934572e-01 -1.64044997e+00  4.29350317e-01 -1.69260661e+00\n",
      "  -5.28693301e-01 -3.70269681e-01  3.71165059e-01 -3.46846157e-01\n",
      "   9.59787774e-01  1.14206155e-01  6.66915570e-01  8.12121148e-01\n",
      "   8.09073869e-01  3.16892695e-01  1.07558696e+00 -2.74202548e+00]\n",
      " [-5.53015144e-01 -4.06806824e-01 -6.04163267e-02 -1.70323648e-01\n",
      "   8.75207043e-01  1.41371570e+00 -1.10770924e+00  3.01180716e-01\n",
      "   5.92414891e-01  6.51242041e-01 -2.19680095e+00  1.30470913e+00\n",
      "   1.98936617e+00 -1.68092217e-01 -1.05779559e+00 -6.36710254e-01\n",
      "   1.63895642e+00  1.05879297e+00 -1.87948702e-01  4.11182012e-01\n",
      "  -9.96060595e-01 -9.36154931e-01 -2.90539796e+00  1.12784020e+00\n",
      "   2.44743488e-01  4.94682783e-01 -1.07320663e+00 -4.66004519e-01\n",
      "  -4.82748777e-01 -1.88804767e+00 -1.89878224e+00 -9.19435720e-01\n",
      "  -4.90921691e-01  7.87198890e-01  1.59416645e+00 -1.31225504e+00\n",
      "  -1.08165581e-01 -1.12397306e+00 -1.32395221e-01 -7.64999056e-01]\n",
      " [-7.70766799e-01  7.81388619e-01 -4.51485112e-01  9.13024017e-02\n",
      "   1.59518643e+00  1.38014564e+00  7.86913828e-01  9.94682692e-01\n",
      "  -1.37332800e-02  1.61163960e-01  3.31969993e-01 -2.64105313e-01\n",
      "   1.58368781e+00 -2.86146538e-01  3.14362691e-01  1.86572991e+00\n",
      "   1.20475249e+00  1.17436799e+00 -1.57881526e+00  6.15098521e-01\n",
      "  -1.05545991e+00  7.80429703e-02  4.86497165e-01  6.55779741e-01\n",
      "   1.32850396e+00  7.88791744e-03  8.39419456e-01 -1.18924367e+00\n",
      "   3.34378098e-01  1.86061771e+00  1.62423561e-02 -4.65819285e-01\n",
      "   1.75981045e-02 -1.33903066e-01 -7.74420998e-01 -2.11347818e+00\n",
      "   1.72451603e+00  5.75713603e-02  1.80902564e-01 -8.14558093e-01]\n",
      " [-2.03633480e+00 -3.07271947e-01  1.51793747e-01  5.15760863e-01\n",
      "  -1.34278879e-01 -2.64648072e-01 -3.73181450e-01  6.54831451e-01\n",
      "  -1.58243356e-01 -1.11073187e+00 -2.43435062e-01  8.40204205e-01\n",
      "   1.63406949e+00 -6.60284199e-01  2.33715049e+00  1.05681840e+00\n",
      "   1.30985040e+00 -2.06514325e+00  3.03267701e-01 -1.27075821e+00\n",
      "   1.17923500e+00 -1.49080032e+00  3.96548431e-01 -1.37816685e+00\n",
      "  -1.51656057e+00  2.70083769e-01 -4.00754857e-01  6.04226857e-01\n",
      "  -1.03963424e+00 -6.34368473e-02 -1.26464576e+00 -6.05531945e-01\n",
      "   2.31174937e-03 -5.53224708e-01 -9.71457342e-01  1.74723410e-01\n",
      "  -2.83502169e+00 -1.43995761e+00  2.06763116e+00 -6.26366092e-01]\n",
      " [-6.11429667e-01  1.03860381e+00  9.61827339e-01  8.54289808e-01\n",
      "   7.12034705e-01 -1.39134086e+00 -9.75161900e-02  1.01559001e+00\n",
      "   2.59435860e-01  7.43590800e-02 -1.29013624e-01 -3.64978088e-01\n",
      "  -5.18880257e-01 -9.71957433e-01  6.64212216e-01 -8.43980609e-02\n",
      "   1.27053608e+00  3.10171608e-01 -7.42729584e-01  1.17381594e+00\n",
      "  -1.11243833e+00 -7.29165203e-01  1.37639693e-01 -6.66978814e-01\n",
      "   1.49618874e-01  4.04409396e-03 -2.06093684e+00 -2.05519603e+00\n",
      "  -1.23035441e+00  2.02495479e+00  9.15656260e-02 -3.61434236e-01\n",
      "  -6.12797862e-01 -2.69180650e-01 -1.00173897e-01  1.55527221e+00\n",
      "   1.22895307e-01 -2.51548096e-01 -1.95837511e-01 -6.61278920e-01]\n",
      " [-1.89380691e+00  3.34369023e-01 -1.06739322e+00 -1.00402009e+00\n",
      "   1.69808859e+00 -6.18704553e-01  1.35982459e+00  1.59772840e-01\n",
      "   2.69274728e-01  2.13903029e-01  1.85949485e+00 -3.39344676e-01\n",
      "  -3.59931126e-01 -3.13605336e-02  2.35539781e+00  6.63605525e-01\n",
      "   1.53169363e+00  6.84670342e-01  3.56333361e-01  1.16051672e-01\n",
      "  -1.21492348e+00  1.01353183e+00 -1.02871920e+00  2.41319794e-01\n",
      "  -2.78896598e+00  1.51017248e+00 -3.15649030e-01 -2.14442600e+00\n",
      "  -1.19760959e-01  2.41602995e+00 -5.02840166e-01  1.46460984e-01\n",
      "   7.05585591e-01  1.66557900e+00  3.36923109e-01 -7.84089519e-01\n",
      "   1.19928104e+00 -4.68318939e-01 -7.40742723e-01  1.17744893e+00]\n",
      " [-1.62577485e-02  2.18634901e-01  7.95151747e-01  7.56954153e-01\n",
      "   1.79783495e+00  1.32716638e+00  9.95388377e-01  2.18603223e-01\n",
      "   1.79498751e-01 -1.18097467e+00  8.05068694e-02 -1.16185426e+00\n",
      "   9.02105673e-01 -1.29102258e+00 -5.60654957e-02  7.36852437e-02\n",
      "   1.15354258e+00  4.41331006e-01 -6.36276147e-02  5.14797432e-01\n",
      "  -1.55776253e+00 -2.13217207e-01 -4.56108680e-01  1.06106060e+00\n",
      "   9.74761983e-01  9.11275359e-01 -1.20237119e+00 -1.24502277e+00\n",
      "   1.17643972e-01  2.60385438e+00 -5.98057312e-01  6.48195515e-01\n",
      "  -1.00659622e+00 -7.76123961e-01 -2.53302876e+00  6.92891000e-01\n",
      "  -7.79368059e-01 -6.23203019e-02  5.40935501e-01 -7.74138361e-01]\n",
      " [ 2.51841628e+00  1.08507253e+00 -2.47782881e-01 -6.49185065e-01\n",
      "   1.00473410e+00 -1.03827121e+00 -2.27991379e+00 -4.43141567e-01\n",
      "   5.63267430e-01  3.67038709e-01 -4.75231516e-01  4.17560259e-01\n",
      "  -6.56365832e-01  1.36139048e-01 -7.61049283e-01 -4.82142036e-02\n",
      "   1.17311526e+00 -9.69279564e-01 -3.52027108e-01  1.64394040e+00\n",
      "   3.89772264e-01  5.83185485e-01  6.99108509e-01 -8.48091473e-02\n",
      "  -1.24771280e+00 -2.00221141e+00 -3.90978902e-01  9.57299898e-01\n",
      "   4.46534798e-01 -4.26062983e-01 -2.23314408e-01 -2.75155963e-02\n",
      "  -1.15392263e+00  1.26682060e+00  1.89278069e+00  3.24076478e-01\n",
      "  -4.60956752e-01  9.43161237e-01  8.53914934e-01 -7.57384608e-01]\n",
      " [-6.24685866e-01 -1.58999670e+00 -1.05449534e+00 -2.64499943e-01\n",
      "   6.45105290e-01  8.21741249e-02  1.86813537e-01  4.54100202e-02\n",
      "   8.58313677e-01  1.25425373e+00 -2.12207564e+00  5.14213232e-01\n",
      "  -1.30220569e+00 -1.67511520e+00  1.18107408e+00 -5.76971415e-01\n",
      "   5.06975029e-01  1.34073517e-01 -1.20973233e+00  6.40299838e-01\n",
      "   1.42991715e+00  1.78313368e+00 -3.80671350e-01  6.80020874e-01\n",
      "   1.46437254e+00  1.45692338e-01 -2.06323140e+00  1.41192567e+00\n",
      "   7.82882868e-02 -1.93265145e+00 -8.19520473e-01  9.82511114e-01\n",
      "   4.09459249e-01  6.81660845e-01 -3.81353129e-01 -7.14244531e-01\n",
      "   4.93954606e-01  4.60506162e-01 -2.91718393e-01 -2.20525523e+00]\n",
      " [-2.02974113e+00 -1.05690521e+00 -5.28850796e-01  3.65667765e-01\n",
      "   5.78628407e-01  1.56155439e+00  1.49938839e+00 -8.09417641e-01\n",
      "   4.48665077e-01  3.88860878e-01 -1.00138438e+00  1.73014728e-01\n",
      "   7.18531600e-01 -1.23034326e+00 -8.45231798e-01 -8.39984480e-01\n",
      "   6.25038073e-01 -5.22919479e-01 -7.04845708e-01 -2.86930209e-02\n",
      "  -4.48277502e-01 -1.44503377e+00 -8.01286859e-01 -1.52849693e+00\n",
      "  -1.16739077e+00 -1.73512145e+00 -1.26542046e+00 -2.36045064e+00\n",
      "   4.91663795e-01  2.07381974e-01  3.07132963e-01  9.10657839e-01\n",
      "   1.26763234e+00  1.28131962e+00 -9.66840021e-01 -1.64204283e-01\n",
      "   8.79610166e-01  3.23114434e-01 -1.73152739e+00  1.31566803e+00]\n",
      " [-2.07996109e+00 -1.17841427e+00 -1.18786892e-01  5.69424786e-01\n",
      "  -2.08612008e+00 -1.41799720e+00 -8.85788665e-01 -9.34224209e-01\n",
      "  -1.23587137e+00  1.05582870e-01 -1.86143433e-01 -2.99249827e-01\n",
      "  -1.09383624e+00  9.82958788e-01  1.19912187e-01  1.59782943e-01\n",
      "   1.50466190e+00 -6.47937314e-01 -6.47107831e-01  1.51200758e-01\n",
      "   2.85442872e-01  8.42617326e-01 -2.69339498e-01  2.51342734e+00\n",
      "  -1.46556939e+00  6.27365764e-01 -1.01136367e+00 -8.87103367e-01\n",
      "  -7.47024133e-01 -3.38223753e-02  6.81744850e-01  2.05547401e-01\n",
      "  -5.92403495e-02 -6.34088992e-01 -2.22917230e-02 -9.57055222e-01\n",
      "  -3.16696260e+00  1.25503083e+00  1.06863553e+00 -6.54267644e-01]\n",
      " [ 8.03290944e-01 -7.28849562e-01 -1.49301116e+00  5.35279327e-01\n",
      "  -9.30126090e-01 -2.13455335e+00  1.99458632e+00 -1.69555456e+00\n",
      "   3.49269077e-02 -9.77466581e-01 -1.76233922e-01 -2.10857948e-01\n",
      "   1.85206697e+00 -1.00341812e+00 -7.79971863e-01 -1.28295291e+00\n",
      "  -5.86707775e-01 -1.32893222e+00 -8.78446742e-01  2.48896422e-01\n",
      "  -6.90989251e-01 -2.64196012e-01  1.39087441e+00 -6.49564639e-01\n",
      "  -7.75005618e-01  6.66442194e-01 -1.50887048e+00  1.55950641e+00\n",
      "   7.10624522e-01  7.62842502e-02 -1.33975083e+00 -1.85367584e+00\n",
      "  -1.29734810e+00 -5.36089776e-01 -6.36297273e-01  8.36350818e-02\n",
      "  -5.65740006e-01 -1.84965873e+00  6.83685822e-01 -2.12891420e-01]\n",
      " [-1.43793579e-01  8.03011358e-01  1.27192844e+00  1.22783088e+00\n",
      "   1.15188507e+00  7.60215512e-01 -6.88970993e-01 -4.34014140e-01\n",
      "   7.29900406e-01 -2.13616380e-01 -7.51457490e-01  1.53570556e+00\n",
      "   1.21521236e+00  4.73600053e-02 -8.24620990e-01 -2.38125612e-01\n",
      "  -1.04469047e+00 -7.83212608e-01  1.58558956e-02 -6.78618624e-01\n",
      "   1.23404095e+00  2.28802163e-01  8.62772322e-01 -8.45529001e-01\n",
      "  -7.85613038e-01 -7.17724762e-01 -7.93736624e-01 -1.24183675e+00\n",
      "  -5.53838018e-01 -7.78162699e-01 -1.06886522e-01 -1.24809952e+00\n",
      "  -1.06834022e+00  7.84911299e-01 -8.78535375e-01 -2.05891370e-01\n",
      "  -5.93527003e-01 -1.19896198e+00 -1.17134620e+00 -1.26844906e+00]\n",
      " [ 3.46579146e-01  1.10909620e+00  1.64277455e-01 -2.68153037e+00\n",
      "  -3.28367753e-01  1.98548595e-01  1.53592260e-01 -8.69435051e-02\n",
      "   1.04151382e+00 -7.29669743e-01 -2.37142777e-01 -3.06959353e-01\n",
      "   1.14331921e-02 -6.46711468e-01  8.02660619e-01 -5.70064812e-01\n",
      "   1.47599048e+00  5.02010501e-01 -5.14090012e-02  6.23063466e-01\n",
      "  -3.09336160e-01 -7.83526573e-01 -1.53270669e-01  3.38943538e-01\n",
      "  -1.32547750e+00  1.45696182e+00  9.65684363e-01 -1.09366751e+00\n",
      "   7.09704787e-01 -5.79676838e-01 -8.75192566e-02 -8.43964507e-01\n",
      "  -4.75085193e-01  6.83636552e-01 -8.96410578e-01 -5.98070660e-01\n",
      "  -6.89964254e-01 -5.57246135e-01 -3.92942858e-01  6.28404130e-01]\n",
      " [-6.63973289e-02 -7.42439818e-01 -9.53224680e-01 -9.75637245e-01\n",
      "   5.09726886e-01  4.37707324e-03  7.92176873e-01 -8.57440350e-01\n",
      "  -7.68257425e-01  4.21229379e-01  3.40560477e-01 -1.79944902e+00\n",
      "  -5.21650617e-01  7.40124801e-01 -1.34151854e+00  4.20146922e-01\n",
      "   8.85380558e-01  2.15413653e-01  2.81458267e-01 -5.20253966e-02\n",
      "   4.11138349e-01 -3.65762659e-01  4.65692790e-01 -1.92711015e-01\n",
      "   1.34398304e+00  1.30770711e+00 -1.19209082e-01 -1.16754330e+00\n",
      "  -6.57471314e-01  3.68729032e-01  1.61712546e+00 -6.40381253e-01\n",
      "  -3.09868746e-01 -1.67237129e-01  1.58970539e+00 -1.20151046e-01\n",
      "   5.95561400e-01  8.55466110e-01  2.47298820e-01  4.66707278e-01]\n",
      " [ 5.03477673e-01  1.55194434e+00  6.17661971e-01 -7.14646155e-01\n",
      "   1.75154641e-01  1.11677907e+00 -8.65541308e-01  6.29042232e-01\n",
      "  -2.45134685e-02  1.21411473e+00 -2.21542652e-01  2.34856950e-01\n",
      "   7.06965908e-01 -2.15364293e+00 -1.80255185e+00 -2.06376874e+00\n",
      "   1.80840036e+00  2.47286567e-01  2.16329535e+00  3.38414228e-01\n",
      "   7.92581972e-01 -1.43585988e+00 -1.55352899e-01 -1.15848034e+00\n",
      "  -2.42319251e-01 -1.40661265e-01  1.04437295e+00  2.59570121e-01\n",
      "   4.42378444e-01 -2.87167086e-01  1.72442431e-01 -1.43281659e+00\n",
      "   3.50225182e-01 -1.82663262e+00  7.74188070e-01 -3.15109795e-01\n",
      "  -4.53391611e-01  1.17705509e+00  2.14621269e+00  3.13107406e+00]\n",
      " [ 9.72622978e-01 -1.19450175e+00  6.22364840e-01 -4.61984960e-01\n",
      "  -5.03760086e-01  9.95242491e-02  1.33659470e+00 -1.97340866e-01\n",
      "  -1.43756920e+00  1.46213582e-01  1.05821284e+00  4.05758531e-02\n",
      "   3.00696549e-01 -1.70100942e+00  1.71708111e-01  5.08980764e-01\n",
      "  -7.19901271e-01 -7.72298625e-01  1.54049931e+00 -1.41504719e+00\n",
      "  -1.16367330e+00  1.96402382e+00  1.00355448e+00 -4.13637007e-02\n",
      "  -8.02955712e-01  9.63529439e-01 -5.90786308e-01 -8.05471735e-01\n",
      "  -1.08208847e+00  6.36718214e-01  4.44216904e-01 -3.98513734e-01\n",
      "   7.28138207e-01 -2.25422552e-01  4.70783292e-01 -9.25058758e-01\n",
      "   6.42869142e-01  9.09125227e-01  1.22448936e+00 -5.44017205e-01]\n",
      " [-3.61800637e-02  2.53905895e-01  1.47425690e+00  1.72661343e+00\n",
      "  -2.04462746e+00  4.96594695e-01  1.40762405e+00 -4.95480583e-01\n",
      "  -3.58816880e-01  1.41355723e+00  8.21015828e-01 -3.64355006e-01\n",
      "  -7.26766813e-01  4.43284928e-01 -5.00154764e-01 -1.84028352e+00\n",
      "   1.24483309e+00  9.91351603e-01 -3.38481446e-01 -4.40674930e-01\n",
      "  -3.91019940e-01  5.40160660e-01  1.12771629e+00  5.27064340e-01\n",
      "   1.05935701e+00  1.71998925e+00 -3.67597738e-01  1.35409454e+00\n",
      "  -2.69425898e-01 -4.63758969e-01 -9.00321503e-01  5.02443148e-01\n",
      "  -8.47430725e-01 -7.24883839e-01  2.06941717e+00 -6.59181774e-01\n",
      "   3.83595834e-01  1.17253842e+00  1.92086034e-01 -1.00228004e+00]\n",
      " [-2.13692032e+00  1.06737070e+00  7.84734507e-01  2.43689451e-02\n",
      "   3.07206841e-01 -8.76200791e-01 -1.37527104e+00  7.24653624e-01\n",
      "  -1.67380558e+00  5.20536472e-01  6.86902229e-01 -2.23447200e-01\n",
      "  -1.18619162e-01  3.13852440e-01 -1.53410119e+00 -8.07324303e-01\n",
      "   1.29509646e+00  2.15669910e-01  1.18722834e+00  9.13564869e-01\n",
      "   8.40453574e-01  2.66777876e-01 -7.11219302e-01 -1.34700931e+00\n",
      "   1.02289575e+00  1.32715746e+00  1.10451577e+00  2.02338682e+00\n",
      "   1.27760615e+00  4.58303533e-02 -2.96951158e-01 -5.19734184e-01\n",
      "   2.06615950e+00  1.25579137e+00 -1.94505225e+00  4.50928032e-01\n",
      "   4.13154454e-01  8.42264655e-01  5.77886430e-01 -7.96208841e-01]\n",
      " [ 1.83572303e-01  4.27119567e-01  1.02191671e+00 -5.12358946e-01\n",
      "  -9.20329345e-01  8.62006163e-01 -1.17524397e+00  6.88044015e-01\n",
      "   2.38660395e-01 -2.23653851e-01 -2.73736176e-01 -2.65639679e-01\n",
      "  -8.32519960e-01  4.12314744e-01 -2.26053845e-01 -4.95027169e-01\n",
      "   4.19469194e-02 -6.65308814e-01 -1.62223061e+00 -2.24206579e-01\n",
      "  -6.80566796e-01 -4.49746395e-01  2.40008026e-01 -3.48740618e-01\n",
      "  -3.45948520e-01 -3.35235904e-02  9.65239263e-02  1.38646027e+00\n",
      "   5.05165058e-01  8.98681549e-02  1.11384179e+00 -3.36389746e-02\n",
      "  -2.11639937e+00  1.30836567e-01  2.10161572e+00 -3.63838552e-01\n",
      "   3.30271588e-01 -1.68780042e+00 -3.79711227e-01 -6.49383259e-01]\n",
      " [ 5.91072469e-02  6.84163095e-01  7.95968048e-01 -5.19325492e-01\n",
      "   1.14216784e+00 -1.41547963e+00 -1.01745944e+00 -6.84599387e-01\n",
      "   7.30749596e-01 -8.83549002e-01 -7.82896519e-01  2.31727772e-01\n",
      "   1.61730092e+00 -1.39002019e+00 -1.39610052e-01  8.29117397e-01\n",
      "   7.89035221e-01  1.72885786e-02  1.93795735e-03 -3.87863869e-01\n",
      "   1.39469440e+00 -1.20908146e+00  3.86737803e-01  6.82889673e-01\n",
      "   1.50454384e+00  1.15296955e+00 -7.80708566e-01  5.30626558e-01\n",
      "   3.85313396e-01  2.48785396e+00  6.35779479e-01 -9.08878054e-01\n",
      "  -1.19381753e-01  1.70229478e+00  1.17374654e+00  6.60729851e-01\n",
      "   1.12743274e+00  3.73778220e-01 -1.13589816e-01 -1.87715104e-01]\n",
      " [-7.78236634e-01  2.69058209e-01 -4.50866834e-01 -2.96585213e-01\n",
      "  -1.62358867e-01 -1.05374715e+00 -7.63184440e-01  5.55869631e-01\n",
      "   6.91192080e-01 -7.41858554e-01  3.27040891e-01 -1.51147132e+00\n",
      "  -5.23062537e-02 -1.03939103e+00 -3.17443668e-01  1.48444910e+00\n",
      "   7.84772095e-01  2.67730986e-01  1.28309460e+00  2.20463739e-01\n",
      "   1.77116969e+00  7.56138704e-01 -1.79416676e-02 -3.27552371e-01\n",
      "  -6.66607297e-01 -9.15187238e-01 -7.98229153e-01  9.91605827e-01\n",
      "  -3.35177606e-01 -5.71391442e-01  1.39180919e+00 -3.47025011e-01\n",
      "   3.43628484e-01  1.32072944e+00 -3.90123161e-02 -5.22591465e-01\n",
      "   7.32256528e-01 -2.75334514e+00  1.42243311e-01 -7.05148534e-01]\n",
      " [ 7.78416173e-01  1.04940366e-01  1.43875061e+00  3.70736618e-01\n",
      "  -7.54927666e-01 -1.93679886e+00  3.02683968e-01  7.33059754e-01\n",
      "   6.35206884e-01  6.41696390e-02 -1.87831837e-01  9.22534946e-01\n",
      "  -1.55698154e+00 -2.35112613e-01 -1.82818034e+00 -1.04045687e-01\n",
      "   5.26114619e-01  4.83660016e-01 -3.67037295e-01 -5.13689218e-01\n",
      "  -3.85946544e-01 -1.46301969e-01  2.82919192e-01  5.19211164e-01\n",
      "   1.65277672e+00 -8.59939914e-02  1.01536898e+00 -1.05755668e+00\n",
      "   4.67010605e-02 -9.43255120e-02  3.87451162e-01 -1.72480850e-01\n",
      "   1.17103172e+00 -2.82811216e-01  1.51732893e-01  9.73366794e-01\n",
      "   1.84197925e-01 -5.40226278e-01  4.33317605e-01  1.86609800e+00]\n",
      " [ 1.40944841e+00  1.86482696e-01 -1.59497495e+00  9.58139440e-01\n",
      "  -7.61360945e-01 -1.43730124e+00  6.68313592e-01 -3.25494098e-01\n",
      "   1.21636597e+00 -6.26730437e-01 -3.88202895e-01 -6.02591610e-01\n",
      "   2.59193415e-01 -2.19439373e-01  8.10829749e-01 -4.69267778e-02\n",
      "   2.72221338e+00 -9.35020378e-01 -1.27098390e+00 -1.26582238e-01\n",
      "  -7.55663468e-01  7.86505541e-01  9.32438980e-01  1.21557885e+00\n",
      "   8.32819599e-01  7.55927993e-01 -5.36373065e-01 -1.73307611e+00\n",
      "   9.03934621e-01  6.62697786e-01 -1.59278044e+00 -2.06395125e-01\n",
      "  -6.02195043e-01 -1.95292626e+00 -1.74888315e+00 -2.88484533e+00\n",
      "   3.65564089e-01  5.76588977e-01  1.67574454e-01  2.91378436e-01]\n",
      " [ 7.69159493e-01  9.21235517e-01 -1.57438278e-02 -2.55986945e-01\n",
      "  -6.29475666e-01  1.82117048e-01  1.52076571e-01 -9.09473040e-01\n",
      "   6.63967107e-01 -1.19157290e+00  1.04601311e+00  4.85364089e-01\n",
      "   9.50551648e-02 -9.58283749e-01  6.12417115e-01 -2.17370354e+00\n",
      "   9.05175797e-01  1.32952156e+00 -1.34092601e+00 -1.42863409e+00\n",
      "   7.77621422e-01 -1.56282274e+00 -1.54754566e+00  1.59889675e+00\n",
      "  -1.98775000e+00  8.38625609e-01 -5.43041824e-01 -1.92518309e+00\n",
      "  -4.29782557e-01  5.94790112e-01  3.26241341e-01  1.14461050e+00\n",
      "   1.03040829e-01 -4.35219491e-01  1.55168043e-01 -8.91640349e-01\n",
      "   1.59115134e+00 -1.47663044e+00 -7.19264223e-02 -1.62955755e+00]\n",
      " [ 1.74604062e-01  8.80572087e-01 -5.71979434e-01 -1.35474810e+00\n",
      "  -1.47513932e+00  1.33788464e+00 -5.80926807e-01 -8.30427778e-01\n",
      "  -1.36588263e+00 -1.39622503e-01 -3.53931677e-01 -1.11734990e+00\n",
      "  -1.52944486e-01 -1.75235530e+00 -1.51145769e+00 -1.21807138e+00\n",
      "  -4.92424087e-01 -1.06461379e+00 -1.15923669e+00  1.00115728e+00\n",
      "  -2.05821588e+00  2.82870152e-01 -6.54927984e-01 -7.88847655e-01\n",
      "   4.07318378e-01 -1.05063446e+00 -5.92230243e-01 -5.62424265e-01\n",
      "  -6.21031690e-01  7.11189521e-02  7.47497363e-01  2.25904369e-01\n",
      "  -6.81869943e-01  1.59655882e-02  9.63943272e-01 -1.19685190e+00\n",
      "  -3.99508124e-02 -9.05673827e-02  1.43770149e+00  1.74729618e+00]\n",
      " [-5.93386653e-01  5.51916687e-01 -8.38898114e-01 -1.96927865e+00\n",
      "   2.68116208e-01  9.40715055e-01 -1.17474957e-01  1.25931392e+00\n",
      "  -1.21121248e+00 -1.41755844e+00 -3.79982403e-02  8.75584707e-01\n",
      "  -8.70809598e-01  3.56157657e-01 -2.17773407e+00 -9.48849277e-01\n",
      "   2.95912412e-01  1.94765487e+00  1.87153275e-01 -9.09055954e-01\n",
      "   1.94278985e+00 -4.45422546e-01 -2.16219247e-01  1.04105904e-01\n",
      "  -9.35502596e-01 -1.27345257e+00  7.48007916e-01  9.90308149e-01\n",
      "  -8.56794546e-01  1.86376780e-01 -8.35158847e-01 -4.31080146e-01\n",
      "   3.11774047e-01  2.90856452e-01 -4.85535455e-01 -6.98422226e-01\n",
      "  -1.24878639e+00 -3.42299436e-01  9.16185837e-01  1.26290848e+00]\n",
      " [ 1.08634465e+00 -3.46408773e-01  4.60963357e-01  1.56217046e+00\n",
      "   1.43155327e+00 -1.70824740e+00 -4.75105656e-02  9.63660797e-01\n",
      "  -3.86401075e-01  6.69633257e-01 -3.73250231e-01 -9.55476232e-01\n",
      "  -4.64630073e-01  4.67081303e-01 -2.35924253e+00  5.12824917e-01\n",
      "   1.85496329e-01  8.76100311e-01 -1.05185586e+00 -8.43666740e-01\n",
      "   1.27163135e+00  4.93632965e-01 -1.89474563e-01 -7.92511755e-01\n",
      "  -1.91919048e+00  7.26574484e-01 -3.20965448e-01 -1.42563506e+00\n",
      "  -3.13278738e-01  2.73955653e-01  1.06116747e+00 -3.39863345e-01\n",
      "  -2.03896921e+00  3.98884497e-01  5.83797944e-01  1.06135236e+00\n",
      "   1.33509823e+00 -5.76972166e-02 -5.07934046e-01  6.90064100e-01]\n",
      " [-2.91689942e+00  7.92154298e-01  1.51283451e+00 -2.47400445e-01\n",
      "   1.25758276e-02  1.62437444e+00 -8.84949314e-01 -4.65535230e-01\n",
      "  -2.35465122e-01  2.91955971e+00  1.29869810e+00 -2.03176463e+00\n",
      "   4.45409259e-02  6.12995595e-01 -5.74703847e-01 -9.00699669e-01\n",
      "   1.28697904e-01 -2.21310479e+00 -7.99673824e-01  6.49961435e-01\n",
      "   8.20880369e-01  6.67550121e-02  1.30218192e+00  5.11933075e-01\n",
      "  -8.96698924e-01  8.02877084e-01 -1.97693341e-01  8.98631369e-01\n",
      "   6.16639126e-01  1.93402792e+00 -2.84787536e-01 -4.79585179e-02\n",
      "   9.62880790e-01 -8.78590192e-01 -8.30166350e-01 -2.09703572e+00\n",
      "   3.45616221e-01 -9.96030036e-01  7.58077441e-02 -1.16690929e+00]\n",
      " [ 6.28866797e-01 -3.71814802e-01 -3.29839931e-01 -7.71031571e-01\n",
      "   8.33792888e-01 -6.27074456e-01  1.72172708e+00 -2.45907731e-01\n",
      "  -1.34892649e+00  7.55057366e-01 -3.02552799e-01 -1.14385260e+00\n",
      "  -1.34706493e+00  5.08536748e-01 -4.21763516e-01  3.55253861e-01\n",
      "  -5.82579467e-01 -1.15315800e+00 -1.90721943e-01  1.03596413e+00\n",
      "  -8.51208203e-01  2.36945664e-01  4.86452852e-01  3.53715778e-01\n",
      "   1.01087792e+00  6.72556453e-01  1.71800161e+00 -1.27154719e+00\n",
      "   3.83803681e-01  6.35226417e-01  1.25573599e-01 -4.20177268e-01\n",
      "   6.73076756e-02  9.10769325e-02 -6.86966495e-01 -9.33260994e-01\n",
      "  -1.41640134e+00  2.32398560e+00  8.30810302e-01 -6.58369450e-02]\n",
      " [ 2.66563084e-01  3.22666629e-01  5.98609247e-01 -4.45241401e-01\n",
      "  -1.50267215e-02 -2.56894896e-01  1.59163347e+00 -1.13022115e+00\n",
      "   5.54416310e-01 -8.61957083e-01 -1.67643548e+00 -6.92731244e-01\n",
      "  -2.34023941e+00  9.75064265e-01  9.49192078e-01 -1.03477071e+00\n",
      "  -1.50977605e+00 -3.45036545e-01 -4.91682402e-01  1.36898768e-01\n",
      "  -1.16423415e+00 -7.51609439e-01 -2.00507664e-01  5.36384867e-01\n",
      "  -1.28336995e+00 -3.51134185e-01  4.68142740e-01 -4.48648267e-01\n",
      "  -6.29128940e-02 -1.16682765e+00  2.96411594e-01 -1.53027037e+00\n",
      "  -9.00712863e-01 -1.21773200e+00 -6.18722690e-02  1.08049327e+00\n",
      "  -1.31411240e+00  3.07198927e+00 -4.86575428e-01  1.08449683e-01]\n",
      " [ 9.41399429e-02  4.00725540e-01  6.62944793e-01 -6.04586599e-02\n",
      "   5.17993873e-01 -1.10834305e+00  3.89420187e-01  1.11491164e+00\n",
      "  -4.96826532e-01 -1.72250934e-01 -1.13328076e+00 -4.50200657e-01\n",
      "   1.07820504e+00 -7.08964091e-01  3.22652217e-01  4.21136618e-01\n",
      "  -5.95926297e-01  2.66825550e-02  1.08670659e-01 -1.81253173e-01\n",
      "   2.13260102e+00 -1.16631009e+00 -1.25956462e-01  1.35112808e+00\n",
      "   2.32897435e-01  1.87794954e+00  1.83493466e-01  1.02915224e+00\n",
      "  -9.88350039e-01  5.30382720e-01 -8.81264484e-02  3.14143165e-01\n",
      "  -1.05142831e+00 -2.48771449e+00  4.22942738e-01 -1.13254955e+00\n",
      "   5.19431261e-01  8.03158387e-01 -1.15623419e+00  9.48378357e-01]\n",
      " [-6.90899319e-01 -1.54180744e-01 -1.76014015e+00  3.47153282e-01\n",
      "   7.09482145e-01  2.38526799e-01 -1.81825108e-01 -6.95783979e-01\n",
      "  -8.33926300e-01  2.38921291e-01 -7.39710731e-02 -1.75903259e+00\n",
      "   5.48898385e-01 -6.09494500e-02  1.00078496e+00  2.45996405e+00\n",
      "   8.32355622e-01 -7.64064822e-01 -3.91126769e-01 -1.00943606e+00\n",
      "  -1.02703333e-01 -1.14654957e-01 -2.14668551e-02 -8.63500203e-01\n",
      "  -9.62589642e-01 -1.10882580e+00  1.62780480e+00  5.09091699e-01\n",
      "   1.11868852e+00 -2.70088447e-01  3.44327775e-01  1.75940421e-01\n",
      "   4.43752233e-01  2.14199422e-01 -1.35984285e-02  9.58419740e-01\n",
      "   1.50506917e+00 -5.43917039e-01  1.68599164e+00 -3.64161731e-01]\n",
      " [-7.38600458e-01  7.51032547e-01 -2.71494865e-01  1.56478387e+00\n",
      "  -1.04732131e-01 -3.20154225e+00  1.44273245e+00  1.23122719e+00\n",
      "  -4.05812212e-01 -1.52682247e-01  1.06222945e+00  8.82187943e-01\n",
      "   9.26378508e-01 -1.61415916e+00  2.45865174e-01 -1.46093761e+00\n",
      "   2.27552999e+00  9.68332276e-01 -4.02987185e-01  1.25774882e+00\n",
      "  -1.01647120e+00  3.99702248e-01 -1.58060113e+00  3.72746236e-01\n",
      "   7.60212125e-01 -6.77254821e-01 -1.06167897e+00 -8.49877878e-01\n",
      "   1.20196754e+00 -2.26649681e+00  5.38115974e-01 -1.81698438e+00\n",
      "   2.29836923e-01 -1.08925146e+00  1.02590722e+00 -2.52810643e+00\n",
      "  -1.46187920e-01 -5.37278790e-01 -1.42309433e+00  1.39475632e+00]\n",
      " [-7.91692104e-01  9.58140483e-02 -7.81239861e-01  3.03722710e-01\n",
      "  -8.19124075e-01 -1.15990475e+00  4.66783920e-01 -1.85428911e+00\n",
      "  -1.10902610e-01  2.91138700e+00  7.96171327e-01 -2.76254976e-01\n",
      "   1.74232823e-01  1.75700005e+00  7.06093508e-01 -3.57483521e-02\n",
      "  -3.82768741e-01 -5.64778423e-01  1.13768182e+00  5.42578879e-01\n",
      "  -1.46130984e-01 -2.37693276e-01  1.05817205e+00  2.38686215e+00\n",
      "   4.20545093e-01 -8.04223131e-01 -1.22520668e+00  1.89502900e-01\n",
      "   8.58593124e-01  6.23472443e-01 -2.02572848e-01  1.58600505e-01\n",
      "   3.41664462e-01  1.31549940e-01 -9.32144182e-01 -4.90943703e-01\n",
      "  -7.53875953e-01  1.37342690e+00 -5.19934646e-02 -4.90562656e-01]\n",
      " [-8.56465267e-02  6.77781519e-01 -1.91436225e+00  1.04858480e+00\n",
      "   5.33335170e-01  8.14747245e-01  6.95453071e-01 -2.39206227e-01\n",
      "  -4.05178873e-01  1.67933735e+00  4.01545945e-01  7.72401833e-01\n",
      "   7.19061668e-01 -4.60127883e-01  1.26349408e+00  1.92759866e+00\n",
      "  -2.67545701e-01 -2.68500738e-01  8.76093549e-01 -1.02467051e+00\n",
      "  -2.11736896e-01  8.68344371e-01  5.52939675e-01 -1.46193357e+00\n",
      "   2.72023549e-01  6.14487541e-01 -1.04111890e+00  3.39648259e-01\n",
      "   2.04376162e-01  2.22346225e-01 -9.69907069e-01  1.99934115e-01\n",
      "   1.67433901e+00  8.11334961e-01 -3.93348659e-01 -3.81888162e-01\n",
      "  -4.64691014e-01 -6.96511066e-01 -1.15881248e-01  1.19583713e+00]\n",
      " [-5.60288195e-01 -1.98974178e+00 -7.23933033e-01 -7.88716069e-01\n",
      "  -8.08840237e-01  1.17487084e+00 -3.45094869e-01 -1.07577574e+00\n",
      "   1.98259888e-01  1.05623981e-01 -5.88771077e-01 -1.39076087e+00\n",
      "   1.47910973e+00 -1.41906570e-01 -5.89356173e-01 -3.10888883e+00\n",
      "  -1.38774599e+00  4.24643348e-01 -1.27149656e+00  4.82094297e-01\n",
      "   1.50698989e-01  6.70077161e-01 -1.26830557e+00 -1.05461044e+00\n",
      "  -6.50836933e-01  5.53813556e-02 -1.15448435e+00  2.93139759e-01\n",
      "   1.08594188e-01  2.07193883e+00  3.84805968e-01  6.29950750e-01\n",
      "  -5.45620119e-01  1.92261625e-01 -8.19443543e-01 -1.37159483e+00\n",
      "   1.00727008e-01  2.58006777e+00  5.84815326e-01 -8.38594094e-01]\n",
      " [ 6.32769054e-02 -1.09645389e-01 -1.22862608e-01  4.00289726e-01\n",
      "  -9.39356930e-01  5.71055773e-01 -1.64688725e+00 -3.61688780e-01\n",
      "   8.41815456e-02  3.31543051e-01 -1.02391797e+00 -1.61813736e-01\n",
      "   1.42740089e+00 -1.61062708e-02  4.25027417e-01  6.39399626e-01\n",
      "   8.94609605e-01 -5.20548344e-01  5.97050458e-01  8.23751847e-01\n",
      "  -8.04375792e-01 -6.19695783e-01  1.37424188e-01 -1.46589206e+00\n",
      "   9.64627452e-01 -4.72998718e-01  1.01091386e+00  1.24049267e+00\n",
      "   1.67642547e+00  4.94948800e-02  4.56773221e-01 -1.61435933e+00\n",
      "  -1.08655193e+00 -1.06289869e+00  1.33931170e+00  9.96825275e-01\n",
      "   1.02603464e+00 -6.94249942e-01 -9.66847563e-02 -4.01410900e-01]\n",
      " [-1.01793508e+00 -9.51366431e-01  1.65083780e+00  2.13062866e-01\n",
      "   1.66424896e+00  1.09990709e+00 -1.54994658e+00 -2.72443570e-01\n",
      "   2.81483231e-01 -8.89099055e-01  8.43933340e-01  3.82774507e-01\n",
      "   5.26915829e-01  4.67377054e-01 -3.56447816e-01  1.02140504e+00\n",
      "  -4.52455506e-01  7.16385869e-01  1.49410941e+00 -5.62165121e-01\n",
      "  -5.75771988e-01  5.69409877e-01 -9.68138502e-01  9.83448641e-01\n",
      "   4.89856118e-01  1.25722799e+00  1.14700300e+00 -7.65272640e-02\n",
      "   1.41203322e+00  6.86117299e-01  9.42925200e-01 -4.91741316e-01\n",
      "   3.29578733e-01  3.25780337e-01  1.29548293e+00  6.89665679e-01\n",
      "   1.94638093e-01  4.67682934e-01 -3.37576495e-01  2.07945095e-01]\n",
      " [ 2.10230994e-01 -5.32665994e-01 -5.96716586e-01  1.37732151e+00\n",
      "  -9.63965316e-01  4.46454286e-01  7.10979838e-01 -1.31062267e+00\n",
      "  -5.57737954e-01 -1.02086973e+00 -1.08306160e+00  3.07659079e-01\n",
      "   1.76897233e-01 -6.64066654e-01 -4.39571469e-01  1.21695667e+00\n",
      "  -1.45451633e+00 -1.02171590e+00  2.52647239e+00  4.91192696e-01\n",
      "   2.43357766e+00  1.16492136e+00 -2.27441530e+00  1.79508366e-01\n",
      "   2.19296962e+00  7.02001285e-01 -6.99165458e-01 -1.30342276e+00\n",
      "   1.40854499e-01  6.79152828e-02  2.97354711e-01 -2.14810385e-01\n",
      "   6.68754598e-01 -5.56852390e-01 -5.73757509e-01 -1.04917109e-01\n",
      "   6.14242557e-01 -1.09519886e+00  2.39833281e-01 -1.05869340e-01]\n",
      " [-6.50873715e-01 -1.04265202e-01  8.03684561e-01  1.04694913e+00\n",
      "  -1.90883669e-01  1.09415216e+00 -1.02757534e+00  3.70676850e-01\n",
      "  -1.45019618e+00 -2.81913152e-01  1.58813155e+00  1.75686074e+00\n",
      "  -2.85742848e-01 -1.71884282e+00  1.22185675e+00 -3.02668498e-01\n",
      "   2.91345893e-01 -1.94685079e+00  7.84130091e-01  2.70636395e-01\n",
      "   3.72471175e-01  5.08459342e-01 -5.43338628e-01  1.20785431e+00\n",
      "  -1.01634123e+00  7.63785071e-01  1.95022120e-01  2.37723452e+00\n",
      "  -7.30785110e-01 -3.44933769e-02  2.75462576e+00 -1.27281116e+00\n",
      "  -1.36110896e+00  1.30747358e+00  1.15856351e+00  1.47062896e+00\n",
      "   1.03672266e-01  9.65029561e-02 -8.94220847e-01 -8.39258550e-01]\n",
      " [-1.98810909e+00 -1.15989184e-01 -7.99494303e-01 -8.61906665e-01\n",
      "  -2.51061460e-01 -4.88582416e-01  3.14714093e-01  7.45143636e-02\n",
      "   7.83064197e-01 -1.08805250e+00  1.15408656e+00  5.54418355e-01\n",
      "  -4.09633765e-01 -7.34212240e-01 -8.80247277e-01 -6.70725645e-02\n",
      "  -4.38123632e-01 -8.07762456e-01  5.27419941e-01 -1.00014104e+00\n",
      "   7.11934948e-01  6.22357860e-02 -1.58204917e-01 -1.06318089e+00\n",
      "   7.65645069e-02  1.47979096e+00  5.54429023e-01 -7.02089472e-01\n",
      "   2.23268491e-01  9.20144888e-01  1.05185455e+00  2.63435110e-02\n",
      "  -5.87499127e-01 -1.60778950e+00 -7.80337186e-01  2.68497575e-01\n",
      "   9.26026567e-01 -7.72226859e-01 -3.36339314e-01 -1.10485670e+00]\n",
      " [ 7.76280444e-01 -9.44704297e-01  1.74408722e+00 -8.57149584e-01\n",
      "  -8.18230795e-01  6.83204647e-01  1.84113741e+00 -2.56961983e-01\n",
      "  -1.24861918e+00 -1.00219345e-01  1.04750407e-01  6.74718672e-01\n",
      "  -6.60163987e-01 -1.91048102e+00  1.35512295e+00 -1.35594120e+00\n",
      "  -6.43790215e-01  1.37045260e+00 -1.08047876e+00  5.62918075e-01\n",
      "  -6.67432129e-01 -6.12667531e-01  1.77942023e-01  1.84504246e+00\n",
      "   1.43138696e+00 -1.12084456e+00 -4.59093955e-01  1.79002558e+00\n",
      "  -7.12572618e-01  8.42390723e-01 -6.68337375e-02 -1.67637927e+00\n",
      "   6.33669887e-01  1.09203772e+00  4.66072476e-01  5.81414709e-01\n",
      "  -1.03967460e+00 -1.29919129e-01  4.38221143e-01  2.40883998e-01]\n",
      " [-5.62416400e-01 -7.57650387e-01 -2.17229507e+00 -7.03984969e-01\n",
      "  -5.61446946e-01 -1.10313114e+00 -2.92125805e-03 -2.83888457e-01\n",
      "  -3.99027520e-01  6.13560797e-01  2.81130264e-01 -6.31017225e-01\n",
      "   2.46482742e-01  1.71135376e-01 -3.95604421e-01 -2.52670700e-01\n",
      "  -1.71493609e+00  1.31166097e+00 -2.41837313e-01 -2.56090667e-01\n",
      "   6.23451841e-01 -9.66114155e-01  1.23580833e+00 -8.00677343e-01\n",
      "  -6.01723030e-01 -1.26536712e+00  5.28789294e-01 -5.87641678e-01\n",
      "  -1.69880073e-01 -2.03951415e+00 -5.55892844e-01 -6.91184809e-01\n",
      "  -1.93277691e+00  5.33631413e-01 -2.23585900e-01 -5.07636507e-01\n",
      "  -4.34146735e-01  5.23206849e-01 -1.08093469e-01  1.64334896e-01]\n",
      " [ 1.03958799e+00 -1.92230243e+00 -5.61839444e-01  4.37017012e-01\n",
      "  -9.40641177e-01  1.08375412e-01 -1.27341141e+00  2.56952357e-01\n",
      "  -1.36226438e+00 -1.84888047e+00 -4.35853957e-01  2.03527172e-01\n",
      "   7.58560180e-01  1.21151554e+00  1.09130886e+00  1.90004081e+00\n",
      "  -1.17386028e+00 -4.72883109e-01 -5.10848242e-01 -1.82802888e+00\n",
      "  -4.42261944e-01 -9.60343731e-01  1.91179492e+00 -6.81301808e-02\n",
      "   6.52956464e-01 -9.86094320e-01 -1.26943976e+00 -9.67052407e-01\n",
      "  -9.38207588e-01 -3.65512816e-01 -1.36450152e+00 -1.06928442e+00\n",
      "   2.80590236e-01 -8.97241157e-01 -1.06836194e-01 -9.86761393e-01\n",
      "   2.15474084e-01 -8.60690272e-01  2.29268768e-01  1.97705993e+00]]\n"
     ]
    }
   ],
   "source": [
    "print(player2.second_layer_weights)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 1.44905694e+00 -4.05143552e-01 -4.35155603e-01  3.36199172e-01\n",
      "   3.94678044e-01  4.39729111e-01 -1.65107485e+00  1.67169084e-01\n",
      "  -1.71438400e+00  2.10342483e-01]\n",
      " [ 7.94102822e-01 -1.28982709e-01  1.23687949e+00  6.09064132e-02\n",
      "   2.80187554e-01  9.89171553e-01 -1.49604139e+00  1.26001255e+00\n",
      "  -4.35710686e-01  4.60079282e-01]\n",
      " [ 2.23114372e+00  2.14548445e-01 -4.36077324e-01 -4.65850734e-01\n",
      "  -1.50684951e+00 -3.44751068e-01  1.15494593e+00 -3.86392006e-01\n",
      "  -4.63279636e-01 -3.85263969e-01]\n",
      " [ 1.42401853e+00  8.49367474e-01 -1.96766042e-01 -6.61151291e-01\n",
      "   1.82953480e-01  4.27240553e-01 -2.66632813e-01 -1.70977389e-01\n",
      "  -1.35159842e+00  4.77356611e-01]\n",
      " [ 4.86612629e-01 -4.02721900e-01 -1.70532749e+00 -1.06458505e+00\n",
      "   5.87232166e-01 -1.44015767e+00  5.67626305e-01 -4.24133120e-01\n",
      "  -6.49689678e-01  7.79240319e-01]\n",
      " [ 4.09446684e-01  5.30604757e-01 -1.71122367e-01 -7.22581935e-01\n",
      "   1.41369503e+00  3.62955336e-01 -1.51882966e-01  2.15688401e-01\n",
      "  -4.27872980e-01  1.38834303e-02]\n",
      " [ 5.32331948e-01 -2.98920450e+00 -1.14958647e+00 -1.41781319e+00\n",
      "   1.25625004e+00  1.12682728e+00 -2.75027984e+00 -7.48364423e-01\n",
      "   4.24482058e-01  4.50204248e-01]\n",
      " [ 5.23310478e-01 -8.65946902e-01 -1.34608009e+00  3.15369596e-01\n",
      "   4.94631336e-01  5.88026726e-01  2.43018170e+00  2.11955679e+00\n",
      "  -9.88623269e-01  2.89412554e-01]\n",
      " [-9.84819470e-01  8.67200772e-02 -3.35631016e-01  2.60534110e-01\n",
      "  -3.79789333e-01  1.18251070e+00 -2.43090309e+00  7.87940936e-01\n",
      "  -3.77731632e-02  1.88219166e+00]\n",
      " [-8.40849854e-01  1.00886672e+00  8.66075694e-02  1.21650721e-01\n",
      "  -6.36748356e-01  2.67679794e-02  1.65468185e+00 -2.25672214e-01\n",
      "   1.23894058e-01 -1.73548647e+00]\n",
      " [ 8.67880888e-01  4.91091214e-01  8.26281767e-01 -1.73999485e-02\n",
      "   2.82996204e-01  3.47739594e-02 -5.54532274e-01  9.10560331e-01\n",
      "  -3.66401155e-01  1.05130736e+00]\n",
      " [ 2.08608271e+00 -9.67844927e-01 -2.90301473e-01  2.73717598e+00\n",
      "   4.43277319e-01 -5.78570415e-01  1.88924150e+00 -3.49068022e-01\n",
      "   3.82615646e-01 -3.61692513e-01]\n",
      " [-1.36302339e+00  2.75877893e-01 -9.79780349e-01 -1.24441643e+00\n",
      "  -6.08367146e-01  4.92887091e-02 -6.98683353e-01 -4.87356906e-01\n",
      "   1.14622117e+00  6.13491180e-01]\n",
      " [-1.11475615e+00  6.33034804e-02 -6.76326086e-01  4.55466360e-01\n",
      "   5.98856901e-01 -2.51316707e-01  6.31848249e-01 -6.83133594e-01\n",
      "   3.98732840e-01 -1.60116392e+00]\n",
      " [ 8.18466830e-01 -7.49481874e-01  2.40033395e-01 -5.31349548e-01\n",
      "   7.32388384e-01 -1.51407175e+00  1.50613155e+00  5.00911659e-01\n",
      "   1.60647657e-01 -4.39179699e-01]\n",
      " [-1.76124660e+00  1.30902060e-01  9.49416818e-02  4.18644941e-01\n",
      "   2.40684026e-01  1.25285504e+00  3.01297239e+00 -1.67713901e-01\n",
      "   9.68027615e-01 -1.52254741e+00]\n",
      " [ 1.23228652e-01 -1.37685910e+00  2.98506450e-01  4.04163541e-01\n",
      "   6.09891753e-01  5.82143299e-02 -1.87551657e+00 -1.01367434e+00\n",
      "  -1.59931277e-01  1.24575841e+00]\n",
      " [-5.08245191e-01  9.84670007e-02 -1.54263753e+00  8.38847543e-01\n",
      "   2.24828412e-01  1.59533262e+00 -5.38935281e-01  9.01780672e-01\n",
      "   3.94472948e-01  9.81963887e-01]\n",
      " [ 8.30584207e-01 -4.75822286e-01 -9.34652125e-01  2.07790172e+00\n",
      "  -4.67001893e-01 -1.20458983e-01 -4.00171734e-01 -1.09564535e+00\n",
      "  -1.02993402e+00 -2.95356056e-01]\n",
      " [-1.29525085e+00 -8.97806333e-01 -1.60217378e+00 -9.24673882e-01\n",
      "   1.81569701e+00  3.26146038e-01 -1.37464429e+00 -1.38673192e+00\n",
      "   3.71034372e-01 -6.31778942e-01]\n",
      " [-1.02885194e+00 -3.04274468e-01  3.69503801e-01  6.90590689e-01\n",
      "  -5.93351655e-01  1.15651484e-03 -5.08750819e-02  1.16762455e+00\n",
      "   3.11489867e-01 -1.05183084e-01]\n",
      " [-8.05320046e-01 -5.15894741e-01  1.38274449e-01 -6.38690354e-02\n",
      "  -5.19729945e-01 -4.42533808e-01  6.52359673e-01 -1.34174207e+00\n",
      "  -4.61835416e-01  5.29803603e-01]\n",
      " [ 5.43927188e-01  2.08146937e-01 -7.88442741e-01 -4.74308162e-02\n",
      "  -6.88271649e-01 -7.42988148e-01 -2.54145090e+00  3.09084356e-01\n",
      "   2.86636277e-01 -1.33152478e-01]\n",
      " [-1.02649581e+00 -2.76149975e-01  4.92177409e-01  9.46567024e-02\n",
      "  -1.61227992e+00 -1.04343562e+00  2.72796362e-01 -1.65745998e-01\n",
      "  -9.37321378e-02  3.05704799e-01]\n",
      " [-1.71152783e+00  6.90826208e-01  4.36394342e-01 -5.12883984e-01\n",
      "  -1.23431449e+00  2.16287505e-01 -7.98833656e-01  1.08757524e-01\n",
      "  -1.63405449e-01  1.26522615e+00]\n",
      " [-6.40151882e-02 -9.56678638e-01 -4.06983277e-01  4.83350078e-01\n",
      "  -1.41377396e-01 -4.91219474e-01 -9.04521524e-01 -1.95509842e+00\n",
      "   6.52855041e-01 -3.74899035e-01]\n",
      " [-1.30456935e+00 -3.39779123e-01 -9.63091255e-01 -5.38465147e-01\n",
      "  -1.17837564e+00 -1.18498929e+00 -1.08165463e-01  1.93625226e-01\n",
      "   7.71727418e-01  1.60076893e+00]\n",
      " [-1.35753937e-01  7.40834959e-01 -7.86248867e-01 -5.67878760e-01\n",
      "   2.36071580e+00  1.27302898e+00  4.36362432e-01 -8.87212988e-01\n",
      "   1.62435926e+00 -3.92901621e-01]\n",
      " [ 1.58225551e-02  2.49350511e+00 -1.19874360e+00 -3.12329070e-01\n",
      "  -5.51906656e-01 -1.19280604e-01 -2.82877411e-01  1.58835529e+00\n",
      "   1.20017900e+00 -2.20301510e-01]\n",
      " [-1.26690818e+00  2.45306979e-01 -1.18811457e-01  7.31432516e-01\n",
      "  -8.10765845e-01  4.43905341e-01  8.37331681e-01 -3.18416193e-01\n",
      "  -1.60595389e+00  8.66825801e-01]\n",
      " [-1.76507382e-01 -1.90251081e+00 -3.58827739e-01 -5.74202610e-01\n",
      "   1.05333578e+00 -1.74747187e+00  7.44167882e-01 -1.23217798e+00\n",
      "   8.57437535e-01 -3.35805001e-01]\n",
      " [-4.69739680e-02 -1.08266132e+00 -2.02824936e-01  7.57332514e-01\n",
      "   8.94804181e-01  1.23082868e+00  6.28821920e-01  6.34278195e-01\n",
      "  -7.84454751e-02  1.78132903e-01]\n",
      " [-2.70979454e-01 -2.02316219e+00 -4.94811602e-01  1.00675947e+00\n",
      "  -2.32350868e-01 -8.41647923e-01 -1.14138832e-01  7.94278055e-01\n",
      "   1.30839900e+00  5.79694528e-01]\n",
      " [ 2.63898685e-01  8.23338111e-01  1.93588809e-01 -1.02458727e+00\n",
      "   6.32946356e-01 -1.91545574e+00  9.47364866e-02  3.87620306e-01\n",
      "   2.08703849e-01 -1.44429131e+00]\n",
      " [-2.75822198e-01 -5.59910377e-01  2.21332439e-01  1.81241344e+00\n",
      "   1.23210248e+00  7.52529215e-01  1.28651358e+00  6.24170947e-01\n",
      "  -8.46156517e-01 -1.64748219e+00]\n",
      " [-9.03621615e-01 -1.17858141e+00 -1.25268999e+00  4.52331140e-01\n",
      "  -7.94204686e-01 -3.01450041e-01 -9.24754778e-02  9.29214900e-01\n",
      "   1.20706327e+00 -7.44011997e-01]\n",
      " [-2.02455900e-01  1.25108344e+00  1.56620409e+00 -9.69388653e-01\n",
      "  -1.39351951e-01 -1.56655537e+00  1.02541393e+00  8.16831551e-02\n",
      "   9.52830806e-01  1.10913675e-01]\n",
      " [ 1.82409277e-01  1.88835480e+00  6.06888563e-01  1.13548129e+00\n",
      "   4.83714564e-01  4.28926735e-01  1.75953995e+00  3.04078798e-01\n",
      "  -2.93570892e-03 -3.20456468e-01]\n",
      " [-7.94990276e-02  4.15995184e-01  3.84477982e-01  8.64712033e-01\n",
      "  -1.74896282e+00 -1.12123985e+00 -1.04908900e+00 -1.65361042e+00\n",
      "   7.66418967e-01 -6.19594966e-01]\n",
      " [-2.14677668e-01  7.20350767e-01  1.06455430e+00  1.48226645e+00\n",
      "   4.51541558e-02  2.09564205e+00 -5.34195152e-01 -1.02513048e+00\n",
      "  -1.55364480e+00 -2.49281331e-01]]\n"
     ]
    }
   ],
   "source": [
    "print(player2.third_layer_weights)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 0.95098685  0.44261623 -0.09580206  1.1526399  -0.77702503 -0.71019926\n",
      "   0.13720668  0.8358332  -1.1440471  -0.07205106  1.9652365  -3.37758446\n",
      "   0.32848703 -0.76980849 -0.77731443 -0.81018664 -0.69872791  0.48251961\n",
      "  -0.94725728 -0.45234327  1.23277877 -0.89298495  0.20559404  0.54812971\n",
      "   0.44785256 -1.1017909  -0.24201754 -2.58399422  1.10756233 -1.44422914\n",
      "  -0.33402373 -0.68038081 -0.16649911 -0.52483346  2.92637354 -0.32886684\n",
      "   1.08464377 -0.47809224  0.42353006 -0.82524478  0.99247839  1.74092753\n",
      "   0.482346    0.73575284  1.99812506 -1.10786363 -0.6551891   0.99104596\n",
      "  -1.6687693  -0.43691504  0.19635909  0.14635761  0.53879895  0.55806108\n",
      "   0.66850016 -0.90556539  1.25373114  0.47966459 -0.37281566  2.18534884\n",
      "  -0.16481584 -1.6209085   0.68435085 -0.94165599 -2.20237848 -0.55181255\n",
      "  -0.92913885  0.36870132 -0.02772776  0.46068861 -1.45472359  0.11901091\n",
      "   0.25481504  0.66588601 -1.41668537 -2.56269308 -0.09942033 -0.31134997\n",
      "  -1.02267494  1.2923919  -0.02434051  0.56993401 -1.10607093 -0.38161631\n",
      "   0.20078525  0.09150993  0.40297466  1.25421515  1.47690951 -1.85651295]]\n"
     ]
    }
   ],
   "source": [
    "print(player2.first_layer_bias)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 1.24469719  1.05540743 -0.45506712  0.89425212 -0.41633673 -0.16539111\n",
      "  -1.08614949 -1.17900739 -0.66157281  1.31828514 -0.41288425  1.89857618\n",
      "  -0.83104567  0.66689615 -1.14226178 -2.56298425  1.41460336  0.23108079\n",
      "  -0.22096129  0.97427872 -0.26976058  1.46030125 -0.46789434 -0.97357057\n",
      "  -0.87406155  0.89376174 -0.04286543  1.10525214 -1.47160591 -0.81272186\n",
      "  -1.01248289 -1.14863827  0.51822044 -0.86685929 -0.57117637  0.35182218\n",
      "   1.19783067  1.14152316 -1.9077221   0.05173622]]\n"
     ]
    }
   ],
   "source": [
    "print(player2.second_layer_bias)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[-1.16222936  0.38913643  1.67924833  0.16667533 -0.95128671 -0.61405107\n",
      "  -0.17323778 -1.17270907 -1.04534962  0.07191034]]\n"
     ]
    }
   ],
   "source": [
    "print(player2.third_layer_bias)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "you have selected the piece at (2,5)\n",
      "white\n",
      "DIFF:  0\n",
      "you have selected the piece at (3,4)\n",
      "white\n",
      "DIFF:  0\n",
      "you have selected the piece at (2,1)\n",
      "white\n",
      "DIFF:  0\n",
      "you have selected the piece at (3,0)\n",
      "white\n",
      "DIFF:  0\n",
      "you have selected the piece at (5,4)\n",
      "white\n",
      "DIFF:  0\n"
     ]
    },
    {
     "ename": "TypeError",
     "evalue": "cannot unpack non-iterable NoneType object",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[1;32mc:\\Users\\Dania\\OneDrive\\Desktop\\Computational Intelligence\\CIProject_checkers-main\\mycheckers\\main.ipynb Cell 27\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[1;32m----> <a href='vscode-notebook-cell:/c%3A/Users/Dania/OneDrive/Desktop/Computational%20Intelligence/CIProject_checkers-main/mycheckers/main.ipynb#X35sZmlsZQ%3D%3D?line=0'>1</a>\u001b[0m new_board, winner, best_player \u001b[39m=\u001b[39m human_AI(player2)\n\u001b[0;32m      <a href='vscode-notebook-cell:/c%3A/Users/Dania/OneDrive/Desktop/Computational%20Intelligence/CIProject_checkers-main/mycheckers/main.ipynb#X35sZmlsZQ%3D%3D?line=1'>2</a>\u001b[0m \u001b[39m#new_board, winner, best_player = AI_vs_AI()\u001b[39;00m\n\u001b[0;32m      <a href='vscode-notebook-cell:/c%3A/Users/Dania/OneDrive/Desktop/Computational%20Intelligence/CIProject_checkers-main/mycheckers/main.ipynb#X35sZmlsZQ%3D%3D?line=3'>4</a>\u001b[0m \u001b[39mfor\u001b[39;00m i \u001b[39min\u001b[39;00m new_board\u001b[39m.\u001b[39mboard:\n",
      "\u001b[1;32mc:\\Users\\Dania\\OneDrive\\Desktop\\Computational Intelligence\\CIProject_checkers-main\\mycheckers\\main.ipynb Cell 27\u001b[0m in \u001b[0;36mhuman_AI\u001b[1;34m(play1)\u001b[0m\n\u001b[0;32m     <a href='vscode-notebook-cell:/c%3A/Users/Dania/OneDrive/Desktop/Computational%20Intelligence/CIProject_checkers-main/mycheckers/main.ipynb#X35sZmlsZQ%3D%3D?line=18'>19</a>\u001b[0m \u001b[39melse\u001b[39;00m:\n\u001b[0;32m     <a href='vscode-notebook-cell:/c%3A/Users/Dania/OneDrive/Desktop/Computational%20Intelligence/CIProject_checkers-main/mycheckers/main.ipynb#X35sZmlsZQ%3D%3D?line=19'>20</a>\u001b[0m     gui \u001b[39m=\u001b[39m Checkerboard(obj\u001b[39m.\u001b[39mboard\u001b[39m.\u001b[39mboard)\n\u001b[1;32m---> <a href='vscode-notebook-cell:/c%3A/Users/Dania/OneDrive/Desktop/Computational%20Intelligence/CIProject_checkers-main/mycheckers/main.ipynb#X35sZmlsZQ%3D%3D?line=20'>21</a>\u001b[0m     row, col \u001b[39m=\u001b[39m gui\u001b[39m.\u001b[39mrun()\n\u001b[0;32m     <a href='vscode-notebook-cell:/c%3A/Users/Dania/OneDrive/Desktop/Computational%20Intelligence/CIProject_checkers-main/mycheckers/main.ipynb#X35sZmlsZQ%3D%3D?line=21'>22</a>\u001b[0m     obj\u001b[39m.\u001b[39mselect(row, col)\n\u001b[0;32m     <a href='vscode-notebook-cell:/c%3A/Users/Dania/OneDrive/Desktop/Computational%20Intelligence/CIProject_checkers-main/mycheckers/main.ipynb#X35sZmlsZQ%3D%3D?line=24'>25</a>\u001b[0m \u001b[39mprint\u001b[39m(obj\u001b[39m.\u001b[39mturn)\n",
      "\u001b[1;31mTypeError\u001b[0m: cannot unpack non-iterable NoneType object"
     ]
    }
   ],
   "source": [
    "new_board, winner, best_player = human_AI(player2)\n",
    "#new_board, winner, best_player = AI_vs_AI()\n",
    "\n",
    "for i in new_board.board:\n",
    "    print(i)\n",
    "for i in new_board.board:\n",
    "    for piece in i:\n",
    "        if piece !=0:\n",
    "            print(\"PIECE COLOR: \", piece.color, \" IS KING?: \", piece.king)\n",
    "print(\"WINNER COLOR:\")\n",
    "print(winner)\n",
    "print(\"WINNER PLAYER NUM:\")\n",
    "print(best_player.number)\n",
    "print(\"best first layer weights:\")\n",
    "print(best_player.first_layer_weights)\n",
    "print(\"best first layer bias:\")\n",
    "print(best_player.first_layer_bias)\n",
    "print(\"best second layer weights:\")\n",
    "print(best_player.second_layer_weights)\n",
    "print(\"best second layer bias:\")\n",
    "print(best_player.second_layer_bias)\n",
    "print(\"best third layer weights:\")\n",
    "print(best_player.third_layer_weights)\n",
    "print(\"best third layer bias:\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "new_board, winner, best_player = human_AI(player2)\n",
    "#new_board, winner, best_player = AI_vs_AI()\n",
    "\n",
    "for i in new_board.board:\n",
    "    print(i)\n",
    "for i in new_board.board:\n",
    "    for piece in i:\n",
    "        if piece !=0:\n",
    "            print(\"PIECE COLOR: \", piece.color, \" IS KING?: \", piece.king)\n",
    "print(\"WINNER COLOR:\")\n",
    "print(winner)\n",
    "print(\"WINNER PLAYER NUM:\")\n",
    "print(best_player.number)\n",
    "print(\"best first layer weights:\")\n",
    "print(best_player.first_layer_weights)\n",
    "print(\"best first layer bias:\")\n",
    "print(best_player.first_layer_bias)\n",
    "print(\"best second layer weights:\")\n",
    "print(best_player.second_layer_weights)\n",
    "print(\"best second layer bias:\")\n",
    "print(best_player.second_layer_bias)\n",
    "print(\"best third layer weights:\")\n",
    "print(best_player.third_layer_weights)\n",
    "print(\"best third layer bias:\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.0"
  },
  "orig_nbformat": 4
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
